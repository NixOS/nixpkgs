import ./make-test-python.nix ({ pkgs, ... }: {
  name = "nncp";
  meta = with pkgs.lib.maintainers; { maintainers = [ ehmry ]; };

  nodes = let
    # normally the secrets are generated by the activation script, but here
    # they are pre-computed and overlayed

    aliceSecrets = {
      id = "422ZG2642J5AOLHV2TZUMGANZY7M4EHDPQ6GSYG6ODBXYOQD4UJA";
      exchpub = "3LOGN6R32FIKSSNO4SWRC353AQNQ3CY2YZ372MUR5UR7IQY3NRLA";
      exchprv = "4Z3TAPPSBADV5VVRO65VQGFQ7EYKFSW44BNFMWRQU6LHN2OXAC5A";
      signpub = "A7JGBSHREYKTF7JAWZORJFGIY6LZHVUXFZWZ2GJ3NADOKZSUOTAA";
      signprv =
        "FR2SD6H2PLRM4KAIQ3AZK5K3DQ6DUKGMYD77N6YSCZQA4A7TLHHAPUTAZDYSMFJS7UQLMXIUSTEMPF4T22LS43M5DE5WQBXFMZKHJQA";
      noiseprv = "JQXKKL766CKV3URKKK56HCDIXZ5EQAYMB32KRCW5UXYUYTOWFADA";
      noisepub = "MN2TNZFQ3FSUF52W75VZM45AAFL5DCQMIMVKTYHENF4OI47F4I5Q";
    };
    bobSecrets = {
      id = "4KVQEZFUFAQIUHHF6OCONI4N7UXCYLBODSEFQDIAXQWS2D2WW56A";
      exchpub = "YFGZ2RTXDKXAEIOMB7CN6MTXS5CB4WF44LXSNGCRAELG4KJNHIVQ";
      exchprv = "ANVPFOOWEUYBLEG6DEWJNWTJ4QZIFW54TWWB7SIS7A2S7QYM2X2A";
      signpub = "PWHSDT4G3CQHTCBVJOWHWUCDON6SCT7GCPVXUZWHKGJJSN3DBXTQ";
      signprv =
        "EE4VD3LQ2OWP3NSWMZHLWTA7C3GENH6SGQVR6FS2VF2TSCEENE6H3DZBZ6DNRIDZRA2UXLD3KBBXG7JBJ7TBH232M3DVDEUZG5RQ3ZY";
      noiseprv = "MJQYK3O4FSCTMCQ5ZH56W554GISQ3ROWPYNY2A7LA3DGCM7SSISA";
      noisepub = "ARTSI2JTRD2YIH52PVZ6QNASSSU7NDVV6OFZLSCYAVU52ZSFDUWQ";
    };

    toNeigh = x: { inherit (x) id exchpub signpub noisepub; };
  in {

    alice = { nodes, ... }: {
      programs.nncp = {
        enable = true;
        settings = {
          self = aliceSecrets; # only for testing
          neigh = {
            self = toNeigh aliceSecrets;
            bob = toNeigh bobSecrets // {
              addrs = {
                testnet =
                  "${nodes.bob.config.networking.primaryIPAddress}:5400";
              };
            };
          };
        };
      };
    };

    bob = { ... }: {
      networking.firewall.allowedTCPPorts = [ 5400 ];
      programs.nncp = {
        enable = true;
        settings = {
          self = bobSecrets;
          neigh = {
            self = toNeigh bobSecrets;
            alice = toNeigh aliceSecrets // { incoming = "/tmp"; };
          };
        };
      };
      services.nncp.daemon.enable = true;
    };
  };

  testScript = ''
    start_all()
    alice.succeed("nncp-stat")
    bob.succeed("nncp-stat")
    alice.succeed("echo hello nncp! | nncp-file - bob:msgfromalice")
    alice.succeed("nncp-call bob")
    bob.wait_until_succeeds("nncp-toss; cat /tmp/msgfromalice")
  '';
})
