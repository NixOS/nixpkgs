<!-- Do not edit this file directly, edit its companion .md instead
     and regenerate this file using nixos/doc/manual/md-to-db.sh -->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="module-services-jitsi-meet">
  <title>Jitsi Meet</title>
  <para>
    With Jitsi Meet on NixOS you can quickly configure a complete,
    private, self-hosted video conferencing solution.
  </para>
  <section xml:id="module-services-jitsi-basic-usage">
    <title>Basic usage</title>
    <para>
      A minimal configuration using Letâ€™s Encrypt for TLS certificates
      looks like this:
    </para>
    <programlisting>
{
  services.jitsi-meet = {
    enable = true;
    hostName = &quot;jitsi.example.com&quot;;
  };
  services.jitsi-videobridge.openFirewall = true;
  networking.firewall.allowedTCPPorts = [ 80 443 ];
  security.acme.email = &quot;me@example.com&quot;;
  security.acme.acceptTerms = true;
}
</programlisting>
  </section>
  <section xml:id="module-services-jitsi-configuration">
    <title>Configuration</title>
    <para>
      Here is the minimal configuration with additional configurations:
    </para>
    <programlisting>
{
  services.jitsi-meet = {
    enable = true;
    hostName = &quot;jitsi.example.com&quot;;
    config = {
      enableWelcomePage = false;
      prejoinPageEnabled = true;
      defaultLang = &quot;fi&quot;;
    };
    interfaceConfig = {
      SHOW_JITSI_WATERMARK = false;
      SHOW_WATERMARK_FOR_GUESTS = false;
    };
  };
  services.jitsi-videobridge.openFirewall = true;
  networking.firewall.allowedTCPPorts = [ 80 443 ];
  security.acme.email = &quot;me@example.com&quot;;
  security.acme.acceptTerms = true;
}
</programlisting>
  </section>
</chapter>
