* Nextcloud
  :PROPERTIES:
  :CUSTOM_ID: module-services-nextcloud
  :END:

[[https://nextcloud.com/][Nextcloud]] is an open-source, self-hostable
cloud platform. The server setup can be automated using
[[#opt-services.nextcloud.enable][services.nextcloud]]. A desktop client
is packaged at =pkgs.nextcloud-client=.

* Basic usage
  :PROPERTIES:
  :CUSTOM_ID: module-services-nextcloud-basic-usage
  :END:

Nextcloud is a PHP-based application which requires an HTTP server
(=services.nextcloud= optionally supports =services.nginx=) and a
database (it's recommended to use =services.postgresql=).

A very basic configuration may look like this:

#+BEGIN_EXAMPLE
  { pkgs, ... }:
  {
    services.nextcloud = {
      enable = true;
      hostName = "nextcloud.tld";
      nginx.enable = true;
      config = {
        dbtype = "pgsql";
        dbuser = "nextcloud";
        dbhost = "/run/postgresql"; # nextcloud will add /.s.PGSQL.5432 by itself
        dbname = "nextcloud";
        adminpassFile = "/path/to/admin-pass-file";
        adminuser = "root";
      };
    };

    services.postgresql = {
      enable = true;
      ensureDatabases = [ "nextcloud" ];
      ensureUsers = [
       { name = "nextcloud";
         ensurePermissions."DATABASE nextcloud" = "ALL PRIVILEGES";
       }
      ];
    };

    # ensure that postgres is running *before* running the setup
    systemd.services."nextcloud-setup" = {
      requires = ["postgresql.service"];
      after = ["postgresql.service"];
    };

    networking.firewall.allowedTCPPorts = [ 80 443 ];
  }
#+END_EXAMPLE

The options =hostName= and =nginx.enable= are used internally to
configure an HTTP server using =PHP-FPM= and =nginx=. The =config=
attribute set is used by the imperative installer and all values are
written to an additional file to ensure that changes can be applied by
changing the module's options.

In case the application serves multiple domains (those are checked with
=$_SERVER['HTTP_HOST']=) it's needed to add them to
=services.nextcloud.config.extraTrustedDomains=.

Auto updates for Nextcloud apps can be enabled using
=services.nextcloud.autoUpdateApps=.

* Pitfalls
  :PROPERTIES:
  :CUSTOM_ID: module-services-nextcloud-pitfalls-during-upgrade
  :END:

Unfortunately Nextcloud appears to be very stateful when it comes to
managing its own configuration. The config file lives in the home
directory of the =nextcloud= user (by default
=/var/lib/nextcloud/config/config.php=) and is also used to track
several states of the application (e.g. whether installed or not).

All configuration parameters are also stored in
=/var/lib/nextcloud/config/override.config.php= which is generated by
the module and linked from the store to ensure that all values from
=config.php= can be modified by the module. However =config.php= manages
the application's state and shouldn't be touched manually because of
that.

#+BEGIN_QUOTE
  *Warning*

  Don't delete =config.php=! This file tracks the application's state
  and a deletion can cause unwanted side-effects!
#+END_QUOTE

#+BEGIN_QUOTE
  *Warning*

  Don't rerun =nextcloud-occ
     maintenance:install=! This command tries to install the application
  and can cause unwanted side-effects!
#+END_QUOTE
