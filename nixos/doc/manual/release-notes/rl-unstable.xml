<section xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         version="5.0"
         xml:id="sec-release-unstable">

<title>Unstable</title>

<para>In addition to numerous new and upgraded packages, this release
has the following highlights:</para>

<itemizedlist>

  <listitem>
    <para>You can now pin a specific version of NixOS in your <filename>configuration.nix</filename>
    by setting:

<programlisting>
nixos.path = ./nixpkgs-unstable-2015-12-06/nixos;
</programlisting>

    This will make NixOS re-evaluate your configuration with the modules of
    the specified NixOS version at the given path.  For more details, see
    <xref linkend="module-misc-nixos" /></para>
  </listitem>

  <listitem>
    <para>Firefox and similar browsers are now <emphasis>wrapped by default</emphasis>.
    The package and attribute names are plain <literal>firefox</literal>
    or <literal>midori</literal>, etc.  Backward-compatibility attributes were set up,
    but note that <command>nix-env -u</command> will <emphasis>not</emphasis> update
    your current <literal>firefox-with-plugins</literal>;
    you have to uninstall it and install <literal>firefox</literal> instead.
    More discussion is <link xlink:href="https://github.com/NixOS/nixpkgs/pull/12299">
    on the PR</link>.  </para>
  </listitem>

</itemizedlist>

<para>The following new services were added since the last release:

  <itemizedlist>
    <listitem><para><literal>services/monitoring/longview.nix</literal></para></listitem>
    <listitem><para><literal>services/web-apps/pump.io.nix</literal></para></listitem>
  </itemizedlist>
</para>

<para>When upgrading from a previous release, please be aware of the
following incompatible changes:</para>

<itemizedlist>
  <listitem>
    <para><command>wmiiSnap</command> has been replaced with
    <command>wmii_hg</command>, but
    <command>services.xserver.windowManager.wmii.enable</command> has
    been updated respectively so this only affects you if you have
    explicitly installed <command>wmiiSnap</command>.
    </para>
  </listitem>

  <listitem>
    <para><literal>jobs</literal> NixOS option has been removed. It served as
    compatibility layer between Upstart jobs and SystemD services. All services
    have been rewritten to use <literal>systemd.services</literal></para>
  </listitem>

  <listitem>
    <para><command>wmiimenu</command> is removed, as it has been
    removed by the developers upstream. Use <command>wimenu</command>
    from the <command>wmii-hg</command> package.</para>
  </listitem>

  <listitem>
    <para>Gitit is no longer automatically added to the module list in
    NixOS and as such there will not be any manual entries for it. You
    will need to add an import statement to your NixOS configuration
    in order to use it, e.g.

<programlisting><![CDATA[
{
  imports = [ <nixos/modules/services/misc/gitit.nix> ];
}
]]></programlisting>

    will include the Gitit service configuration options.</para>
  </listitem>

  <listitem>
    <para><command>nginx</command> does not accept flags for enabling and
    disabling modules anymore. Instead it accepts <literal>modules</literal>
    argument, which is a list of modules to be built in. All modules now
    reside in <literal>nginxModules</literal> set. Example configuration:

<programlisting><![CDATA[
nginx.override {
  modules = [ nginxModules.rtmp nginxModules.dav nginxModules.moreheaders ];
}
]]></programlisting>
    </para>
  </listitem>

  <listitem>
    <para><command>s3sync</command> is removed, as it hasn't been
    developed by upstream for 4 years and only runs with ruby 1.8.
    For an actively-developer alternative look at
    <command>tarsnap</command> and others.
    </para>
  </listitem>

  <listitem>
    <para><command>ruby_1_8</command> has been removed as it's not
    supported from upstream anymore and probably contains security
    issues.
    </para>
  </listitem>

  <listitem>
    <para><literal>tidy-html5</literal> package is removed.
    Upstream only provided <literal>(lib)tidy5</literal> during development,
    and now they went back to <literal>(lib)tidy</literal> to work as a drop-in
    replacement of the original package that has been unmaintained for years.
    You can (still) use the <literal>html-tidy</literal> package, which got updated
    to a stable release from this new upstream.</para>
  </listitem>

  <listitem>
    <para><literal>extraDeviceOptions</literal> argument is removed
    from <literal>bumblebee</literal> package. Instead there are
    now two separate arguments: <literal>extraNvidiaDeviceOptions</literal>
    and <literal>extraNouveauDeviceOptions</literal> for setting
    extra X11 options for nvidia and nouveau drivers, respectively.
    </para>
  </listitem>

  <listitem>
    <para>The <literal>Ctrl+Alt+Backspace</literal> key combination
    no longer kills the X server by default.
    There's a new option <option>services.xserver.enableCtrlAltBackspace</option>
    allowing to enable the combination again.
    </para>
  </listitem>

  <listitem>
    <para><literal>emacsPackagesNg</literal> now contains all packages
    from the ELPA, MELPA, and MELPA Stable repositories.
    </para>
  </listitem>

  <listitem>
    <para>Data directory for Postfix MTA server is moved from
    <filename>/var/postfix</filename> to <filename>/var/lib/postfix</filename>.
    Old configurations are migrated automatically. <literal>service.postfix</literal>
    module has also received many improvements, such as correct directories' access
    rights, new <literal>aliasFiles</literal> and <literal>mapFiles</literal>
    options and more.</para>
  </listitem>

  <listitem>
    <para>CUPS, installed by <literal>services.printing</literal> module, now
    has its data directory in <filename>/var/lib/cups</filename>. Old
    configurations from <filename>/etc/cups</filename> are moved there
    automatically, but there might be problems. Also configuration options
    <literal>services.printing.cupsdConf</literal> and
    <literal>services.printing.cupsdFilesConf</literal> were removed
    because they had been allowing one to override configuration variables
    required for CUPS to work at all on NixOS. For most use cases,
    <literal>services.printing.extraConf</literal> and new option
    <literal>services.printing.extraFilesConf</literal> should be enough;
    if you encounter a situation when they are not, please file a bug.</para>

    <para>There are also Gutenprint improvements; in particular, a new option
    <literal>services.printing.gutenprint</literal> is added to enable automatic
    updating of Gutenprint PPMs; it's greatly recommended to enable it instead
    of adding <literal>gutenprint</literal> to the <literal>drivers</literal> list.
    </para>
  </listitem>
</itemizedlist>


<para>Other notable improvements:
<itemizedlist>
  <listitem>
    <para>The <command>command-not-found</command> hook was extended.
    Apart from <literal>$NIX_AUTO_INSTALL</literal> variable,
    it newly also checks for <literal>$NIX_AUTO_RUN</literal>
    which causes it to directly run the missing commands via
    <command>nix-shell</command> (without installing anything). </para>
  </listitem>

  <listitem>
    <para><literal>ejabberd</literal> module is brought back and now works on
    NixOS.</para>
  </listitem>

</itemizedlist></para>

</section>
