* Releases
  :PROPERTIES:
  :CUSTOM_ID: ch-releases
  :END:

* Release process
  :PROPERTIES:
  :CUSTOM_ID: release-process
  :END:

Going through an example of releasing NixOS 17.09:

** One month before the beta
   :PROPERTIES:
   :CUSTOM_ID: one-month-before-the-beta
   :END:

- Send an email to the nix-devel mailinglist as a warning about upcoming
  beta "feature freeze" in a month.

- Discuss with Eelco Dolstra and the community (via IRC, ML) about what
  will reach the deadline. Any issue or Pull Request targeting the
  release should be included in the release milestone.

** At beta release time
   :PROPERTIES:
   :CUSTOM_ID: at-beta-release-time
   :END:

- [[https://github.com/NixOS/nixpkgs/issues/13559][Create an issue for
  tracking Zero Hydra Failures progress. ZHF is an effort to get build
  failures down to zero.]]

- =git tag -a -s -m "Release 17.09-beta" 17.09-beta
        && git push --tags=

- From the master branch run =git checkout -B
        release-17.09=.

- [[https://github.com/NixOS/nixos-org-configurations/pull/18][Make sure
  a channel is created at http://nixos.org/channels/.]]

- [[https://github.com/NixOS/nixpkgs/compare/bdf161ed8d21...6b63c4616790][Bump
  the =system.defaultChannel= attribute in
  =nixos/modules/misc/version.nix=]]

- [[https://github.com/NixOS/nixpkgs/commit/d6b08acd1ccac0d9d502c4b635e00b04d3387f06][Update
  =versionSuffix= in =nixos/release.nix=]], use =git log
        --format=%an|wc -l= to get the commit count

- =echo -n "18.03" > .version= on master.

- [[https://github.com/NixOS/nixpkgs/commit/b8a4095003e27659092892a4708bb3698231a842][Pick
  a new name for the unstable branch.]]

- Create a new release notes file for the upcoming release + 1, in this
  case =rl-1803.xml=.

- Create two Hydra jobsets: release-17.09 and release-17.09-small with
  =stableBranch= set to false.

- Remove attributes that we know we will not be able to support,
  especially if there is a stable alternative. E.g. Check that our Linux
  kernels' [[https://www.kernel.org/category/releases.html][projected
  end-of-life]] are after our release projected end-of-life

- Edit changelog at =nixos/doc/manual/release-notes/rl-1709.xml= (double
  check desktop versions are noted)

  - Get all new NixOS modules =git diff
            release-17.03..release-17.09 nixos/modules/module-list.nix|grep
            ^+=

  - Note systemd, kernel, glibc and Nix upgrades.

** During Beta
   :PROPERTIES:
   :CUSTOM_ID: during-beta
   :END:

- Monitor the master branch for bugfixes and minor updates and
  cherry-pick them to the release branch.

** Before the final release
   :PROPERTIES:
   :CUSTOM_ID: before-the-final-release
   :END:

- Re-check that the release notes are complete.

- Release Nix (currently only Eelco Dolstra can do that).
  [[https://github.com/NixOS/nixpkgs/commit/53710c752a85f00658882531bc90a23a3d1287e4][Make
  sure fallback is updated.]]

- [[https://github.com/NixOS/nixpkgs/commit/40fd9ae3ac8048758abdcfc7d28a78b5f22fe97e][Update
  README.md with new stable NixOS version information.]]

- Change =stableBranch= to true and wait for channel to update.

** At final release time
   :PROPERTIES:
   :CUSTOM_ID: at-final-release-time
   :END:

- =git tag -s -a -m "Release 15.09" 15.09=

- Update "Chapter 4. Upgrading NixOS" section of the manual to match new
  stable release version.

- Update http://nixos.org/nixos/download.html and
  http://nixos.org/nixos/manual in
  https://github.com/NixOS/nixos-org-configurations

- Get number of commits for the release: =git log
        release-14.04..release-14.12 --format=%an|wc -l=

- Commits by contributor: =git log release-14.04..release-14.12
        --format=%an|sort|uniq -c|sort -rn=

- Send an email to nix-dev to announce the release with above
  information. Best to check how previous email was formulated to see
  what needs to be included.

* Release Management Team
  :PROPERTIES:
  :CUSTOM_ID: release-managers
  :END:

For each release there are two release managers. After each release the
release manager having managed two releases steps down and the release
management team of the last release appoints a new release manager.

This makes sure a release management team always consists of one release
manager who already has managed one release and one release manager
being introduced to their role, making it easier to pass on knowledge
and experience.

A release manager's role and responsibilities are:

- manage the release process

- start discussions about features and changes for a given release

- create a roadmap

- release in cooperation with Eelco Dolstra

- decide which bug fixes, features, etc... get backported after a
  release

* Release schedule
  :PROPERTIES:
  :CUSTOM_ID: release-schedule
  :END:

| Date         | Event                                                                         |
|--------------+-------------------------------------------------------------------------------|
| 2016-07-25   | Send email to nix-dev about upcoming branch-off                               |
| 2016-09-01   | =release-16.09= branch and corresponding jobsets are created, change freeze   |
| 2016-09-30   | NixOS 16.09 released                                                          |
