<section xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         version="5.0"
         xml:id="sec-wireless">
 <title>Wireless Networks</title>

 <para>
  For a desktop installation using NetworkManager (e.g., GNOME), you just have
  to make sure the user is in the <code>networkmanager</code> group and you can
  skip the rest of this section on wireless networks.
 </para>

 <para>
  NixOS will start wpa_supplicant for you if you enable this setting:
<programlisting>
<xref linkend="opt-networking.wireless.enable"/> = true;
</programlisting>
  NixOS lets you specify networks for wpa_supplicant declaratively:
<programlisting>
<xref linkend="opt-networking.wireless.networks"/> = {
  echelon = {
    psk = "abcdefgh";
  };
  "free.wifi" = {};
}
</programlisting>
  Be aware that keys will be written to the nix store in plaintext! When no
  networks are set, it will default to using a configuration file at
  <literal>/etc/wpa_supplicant.conf</literal>. You should edit this file
  yourself to define wireless networks, WPA keys and so on (see
  wpa_supplicant.conf(5)).
 </para>

 <para>
  When using a network with
  <link xlink:href="https://wiki.archlinux.org/index.php/Wireless_network_configuration#WPA2_Enterprise">WPA2 Enterprise</link>
  for authentication, it's possible to configure it declaratively using the <literal>auth</literal> option:
<programlisting>
<xref linkend="opt-networking.wireless.networks" /> = {
  wpa2-enterprise-net = {
    auth = ''
      key_mgmt=WPA-WAP
      eap=PEAP
      identity="user@example.com"
      password="secret"
    '';
  };
}
</programlisting>
  <emphasis>Note: please keep in mind that the configuration file will be written to a store path
  which is world-readable!</emphasis>

  To avoid leaking your cleartext-password, <literal>wpa_supplicant.conf</literal> allows to
  specify a hashed password using a configuration like this: <literal>password=hash:{your-hashed-password}</literal>.
  Such a password can be a NTLM password which can be generated with the following command:
<programlisting>
echo -n $YOURPASSWORD | iconv -t utf16le | openssl md4
</programlisting>
  <emphasis>Please keep in mind that an attacker is still able to connect to your network in case of a
  compromised store. However the hash makes it harder to leak your cleartext password which is helpful
  if the network uses credentials e.g. from an LDAP store, but the used MD4 doesn't provide true
  security.</emphasis>
 </para>

 <para>
  If you are using WPA2 the <command>wpa_passphrase</command> tool might be
  useful to generate the <literal>wpa_supplicant.conf</literal>.
<screen>
# wpa_passphrase ESSID PSK > /etc/wpa_supplicant.conf</screen>
  After you have edited the <literal>wpa_supplicant.conf</literal>, you need to
  restart the wpa_supplicant service.
<screen>
# systemctl restart wpa_supplicant.service</screen>
 </para>
</section>
