<section xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="sec-release-22.05">
  <title>Release 22.05 (“Quokka”, 2022.05/??)</title>
  <para>
    In addition to numerous new and upgraded packages, this release has
    the following highlights:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        Support is planned until the end of December 2022, handing over
        to 22.11.
      </para>
    </listitem>
  </itemizedlist>
  <section xml:id="sec-release-22.05-highlights">
    <title>Highlights</title>
    <para>
    </para>
  </section>
  <section xml:id="sec-release-22.05-new-services">
    <title>New Services</title>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          <link xlink:href="https://github.com/intel/linux-sgx#install-the-intelr-sgx-psw">aesmd</link>,
          the Intel SGX Architectural Enclave Service Manager. Available
          as
          <link linkend="opt-services.aesmd.enable">services.aesmd</link>.
        </para>
      </listitem>
    </itemizedlist>
  </section>
  <section xml:id="sec-release-22.05-incompatibilities">
    <title>Backward Incompatibilities</title>
    <itemizedlist>
      <listitem>
        <para>
          <literal>pkgs.ghc</literal> now refers to
          <literal>pkgs.targetPackages.haskellPackages.ghc</literal>.
          This <emphasis>only</emphasis> makes a difference if you are
          cross-compiling and will ensure that
          <literal>pkgs.ghc</literal> always runs on the host platform
          and compiles for the target platform (similar to
          <literal>pkgs.gcc</literal> for example).
          <literal>haskellPackages.ghc</literal> still behaves as
          before, running on the build platform and compiling for the
          host platform (similar to <literal>stdenv.cc</literal>). This
          means you don’t have to adjust your derivations if you use
          <literal>haskellPackages.callPackage</literal>, but when using
          <literal>pkgs.callPackage</literal> and taking
          <literal>ghc</literal> as an input, you should now use
          <literal>buildPackages.ghc</literal> instead to ensure cross
          compilation keeps working (or switch to
          <literal>haskellPackages.callPackage</literal>).
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>pkgs.emacsPackages.orgPackages</literal> is removed
          because org elpa is deprecated. The packages in the top level
          of <literal>pkgs.emacsPackages</literal>, such as org and
          org-contrib, refer to the ones in
          <literal>pkgs.emacsPackages.elpaPackages</literal> and
          <literal>pkgs.emacsPackages.nongnuPackages</literal> where the
          new versions will release.
        </para>
      </listitem>
      <listitem>
        <para>
          The <literal>wafHook</literal> hook now honors
          <literal>NIX_BUILD_CORES</literal> when
          <literal>enableParallelBuilding</literal> is not set
          explicitly. Packages can restore the old behaviour by setting
          <literal>enableParallelBuilding=false</literal>.
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>pkgs.claws-mail-gtk2</literal>, representing Claws
          Mail’s older release version three, was removed in order to
          get rid of Python 2. Please switch to
          <literal>claws-mail</literal>, which is Claws Mail’s latest
          release based on GTK+3 and Python 3.
        </para>
      </listitem>
      <listitem>
        <para>
          The <literal>writers.writePython2</literal> and corresponding
          <literal>writers.writePython2Bin</literal> convenience
          functions to create executable Python 2 scripts in the store
          were removed in preparation of removal of the Python 2
          interpreter. Scripts have to be converted to Python 3 for use
          with <literal>writers.writePython3</literal> or
          <literal>writers.writePyPy2</literal> needs to be used.
        </para>
      </listitem>
    </itemizedlist>
  </section>
  <section xml:id="sec-release-22.05-notable-changes">
    <title>Other Notable Changes</title>
    <itemizedlist>
      <listitem>
        <para>
          The option
          <link linkend="opt-services.redis.servers">services.redis.servers</link>
          was added to support per-application
          <literal>redis-server</literal> which is more secure since
          Redis databases are only mere key prefixes without any
          configuration or ACL of their own. Backward-compatibility is
          preserved by mapping old
          <literal>services.redis.settings</literal> to
          <literal>services.redis.servers.&quot;&quot;.settings</literal>,
          but you are strongly encouraged to name each
          <literal>redis-server</literal> instance after the application
          using it, instead of keeping that nameless one. Except for the
          nameless
          <literal>services.redis.servers.&quot;&quot;</literal> still
          accessible at <literal>127.0.0.1:6379</literal>, and to the
          members of the Unix group <literal>redis</literal> through the
          Unix socket <literal>/run/redis/redis.sock</literal>, all
          other <literal>services.redis.servers.${serverName}</literal>
          are only accessible by default to the members of the Unix
          group <literal>redis-${serverName}</literal> through the Unix
          socket <literal>/run/redis-${serverName}/redis.sock</literal>.
        </para>
      </listitem>
      <listitem>
        <para>
          The
          <literal>writers.writePyPy2</literal>/<literal>writers.writePyPy3</literal>
          and corresponding
          <literal>writers.writePyPy2Bin</literal>/<literal>writers.writePyPy3Bin</literal>
          convenience functions to create executable Python 2/3 scripts
          using the PyPy interpreter were added.
        </para>
      </listitem>
    </itemizedlist>
  </section>
</section>
