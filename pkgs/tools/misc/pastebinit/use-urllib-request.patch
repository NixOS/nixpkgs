=== modified file 'pastebinit'
--- pastebinit	2018-07-04 00:46:08 +0000
+++ pastebinit	2020-11-13 14:21:11 +0000
@@ -23,15 +23,9 @@
 from __future__ import print_function
 
 import sys
-if sys.version[0] == "2":
-    from ConfigParser import NoOptionError
-    from ConfigParser import SafeConfigParser as ConfigParser
-    from urllib import urlencode
-    from urllib import FancyURLopener
-else:
-    from configparser import ConfigParser, NoOptionError
-    from urllib.parse import urlencode
-    from urllib.request import FancyURLopener
+from configparser import ConfigParser, NoOptionError
+from urllib.parse import urlencode
+from urllib.request import urlopen, Request
 
 # Set the default pastebin
 defaultPB = "pastebin.com"
@@ -72,13 +66,6 @@ try:
     version = "1.5"
     configfile = os.path.expanduser("~/.pastebinit.xml")
 
-    # Custom urlopener to handle 401's
-    class pasteURLopener(FancyURLopener):
-        version = "Pastebinit v%s" % version
-
-        def http_error_401(self, url, fp, errcode, errmsg, headers, data=None):
-            return None
-
     def preloadPastebins():
         # Check several places for config files:
         #  - global config in /etc/pastebin.d
@@ -410,12 +397,18 @@ try:
         else:
             post_format = 'standard'
 
-        url_opener = pasteURLopener()
+        request = Request(
+            fetch_url,
+            method="POST",
+            headers={
+                'User-Agent': "Pastebinit v%s" % version
+            }
+        )
 
         if post_format == 'json':
             if json:
                 params = json.dumps(params)
-                url_opener.addheader('Content-type', 'text/json')
+                request.add_header('Content-type', 'text/json')
             else:
                 print(_("Could not find any json library."), file=sys.stderr)
                 sys.exit(1)
@@ -428,7 +421,7 @@ try:
             print("POSTing to: %s\nParams: %s" % (
                 fetch_url, str(params)), file=sys.stderr)
         try:
-            page = url_opener.open(fetch_url, params)
+            page = urlopen(request, params.encode("utf-8"))
         except Exception as e:
             print(_("Failed to contact the server: %s") % e, file=sys.stderr)
             sys.exit(1)
