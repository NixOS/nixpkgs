diff --git a/tests/pull-test.sh b/tests/pull-test.sh
index a8bc49a9..4a08ebb5 100644
--- a/tests/pull-test.sh
+++ b/tests/pull-test.sh
@@ -275,7 +275,7 @@
 if ${CMD_PREFIX} ostree --repo=mirrorrepo-local pull-local otherrepo 2>err.txt; then
     fatal "pull with mixed refs succeeded?"
 fi
-assert_file_has_content err.txt "error: Invalid ref name origin:main"
+assert_file_has_content err.txt "Invalid ref name origin:main"
 ${CMD_PREFIX} ostree --repo=mirrorrepo-local pull-local otherrepo localbranch
 ${CMD_PREFIX} ostree --repo=mirrorrepo-local rev-parse localbranch
 ${CMD_PREFIX} ostree --repo=mirrorrepo-local fsck
@@ -286,7 +286,7 @@
     fatal "pulled nonexistent branch"
 fi
 # So true
-assert_file_has_content_literal err.txt "error: Refspec 'nosuchbranch' not found"
+assert_file_has_content_literal err.txt "Refspec 'nosuchbranch' not found"
 echo "ok pull-local nonexistent branch"
 
 cd ${test_tmpdir}
@@ -593,5 +593,5 @@
 if ${CMD_PREFIX} ostree --repo=repo pull origin main 2>err.txt; then
     fatal "pull of invalid ref succeeded"
 fi
-assert_file_has_content_literal err.txt 'error: Fetching checksum for ref ((empty), main): Invalid rev lots of html here  lots of html here  lots of html here  lots of'
+assert_file_has_content_literal err.txt 'Fetching checksum for ref ((empty), main): Invalid rev lots of html here  lots of html here  lots of html here  lots of'
 echo "ok pull got HTML for a ref"
diff --git a/tests/test-config.sh b/tests/test-config.sh
index 7e913d32..69d1675d 100755
--- a/tests/test-config.sh
+++ b/tests/test-config.sh
@@ -46,7 +46,7 @@
 if ${CMD_PREFIX} ostree config --repo=repo get --group=core lock-timeout-secs extra 2>err.txt; then
     assert_not_reached "ostree config get should error out if too many arguments are given"
 fi
-assert_file_has_content err.txt "error: Too many arguments given"
+assert_file_has_content err.txt "Too many arguments given"
 echo "ok config get"
 
 ${CMD_PREFIX} ostree config --repo=repo set core.mode bare-user-only
@@ -63,7 +63,7 @@
 if ${CMD_PREFIX} ostree config --repo=repo set --group=core lock-timeout-secs 120 extra 2>err.txt; then
     assert_not_reached "ostree config set should error out if too many arguments are given"
 fi
-assert_file_has_content err.txt "error: Too many arguments given"
+assert_file_has_content err.txt "Too many arguments given"
 echo "ok config set"
 
 # Check that "ostree config unset" works
@@ -78,7 +78,7 @@
 fi
 # Check for any character where quotation marks would be as they appear differently in the Fedora and Debian
 # test suites (“” and '' respectively). See: https://github.com/ostreedev/ostree/pull/1839
-assert_file_has_content err.txt "error: Key file does not have key .lock-timeout-secs. in group .core."
+assert_file_has_content err.txt "Key file does not have key .lock-timeout-secs. in group .core."
 
 # Check that it's idempotent
 ${CMD_PREFIX} ostree config --repo=repo unset core.lock-timeout-secs
@@ -95,5 +95,5 @@
 if ${CMD_PREFIX} ostree config --repo=repo unset core.lock-timeout-secs extra 2>err.txt; then
     assert_not_reached "ostree config unset should error out if too many arguments are given"
 fi
-assert_file_has_content err.txt "error: Too many arguments given"
+assert_file_has_content err.txt "Too many arguments given"
 echo "ok config unset"
diff --git a/tests/test-fsck-collections.sh b/tests/test-fsck-collections.sh
index dc6bcfeb..4a5eef55 100755
--- a/tests/test-fsck-collections.sh
+++ b/tests/test-fsck-collections.sh
@@ -100,7 +100,7 @@
 if ${CMD_PREFIX} ostree fsck --repo=repo --verify-bindings > fsck 2> fsck-error; then
     assert_not_reached "fsck unexpectedly succeeded after adding unbound ref!"
 fi
-assert_file_has_content fsck-error "Commit has no requested ref ‘new-ref’ in ref binding metadata (‘ref1’)"
+assert_file_has_content fsck-error "Commit has no requested ref .new-ref. in ref binding metadata (.ref1.)"
 assert_file_has_content fsck "^Validating refs\.\.\.$"
 
 echo "ok 3 fsck detects missing ref bindings"
@@ -113,7 +113,7 @@
 if ${CMD_PREFIX} ostree fsck --repo=repo --verify-bindings > fsck 2> fsck-error; then
     assert_not_reached "fsck unexpectedly succeeded after adding unbound ref!"
 fi
-assert_file_has_content fsck-error "Commit has no requested ref ‘new-ref’ in ref binding metadata (‘ref1’)"
+assert_file_has_content fsck-error "Commit has no requested ref .new-ref. in ref binding metadata (.ref1.)"
 assert_file_has_content fsck "^Validating refs\.\.\.$"
 assert_file_has_content fsck "^Validating refs in collections\.\.\.$"
 
@@ -127,7 +127,7 @@
 if ${CMD_PREFIX} ostree fsck --repo=repo --verify-bindings > fsck 2> fsck-error; then
     assert_not_reached "fsck unexpectedly succeeded after adding unbound ref!"
 fi
-assert_file_has_content fsck-error "Commit has collection ID ‘org\.example\.Collection’ in collection binding metadata, while the remote it came from has collection ID ‘org\.example\.Collection2’"
+assert_file_has_content fsck-error "Commit has collection ID .org\.example\.Collection. in collection binding metadata, while the remote it came from has collection ID .org\.example\.Collection2."
 assert_file_has_content fsck "^Validating refs\.\.\.$"
 assert_file_has_content fsck "^Validating refs in collections\.\.\.$"
 
@@ -147,7 +147,7 @@
 if ${CMD_PREFIX} ostree fsck --repo=repo --verify-back-refs > fsck 2> fsck-error; then
     assert_not_reached "fsck unexpectedly succeeded after adding unbound ref!"
 fi
-assert_file_has_content fsck-error "Collection–ref (org\.example\.Collection, ref1) in bindings for commit .* does not exist"
+assert_file_has_content fsck-error 'Collection.ref (org\.example\.Collection, ref1) in bindings for commit .* does not exist'
 assert_file_has_content fsck "^Validating refs\.\.\.$"
 assert_file_has_content fsck "^Validating refs in collections\.\.\.$"
 
@@ -186,7 +186,7 @@
 if ${CMD_PREFIX} ostree fsck --repo=repo --verify-bindings > fsck 2> fsck-error; then
     assert_not_reached "fsck unexpectedly succeeded after adding unbound ref!"
 fi
-assert_file_has_content fsck-error "Commit has no requested ref ‘new-ref’ in ref binding metadata (‘ref3’, ‘ref4’)"
+assert_file_has_content fsck-error "Commit has no requested ref .new-ref. in ref binding metadata (.ref3., .ref4.)"
 assert_file_has_content fsck "^Validating refs\.\.\.$"
 
 echo "ok 9 fsck detects missing ref bindings"
@@ -205,7 +205,7 @@
 if ${CMD_PREFIX} ostree fsck --repo=repo --verify-back-refs > fsck 2> fsck-error; then
     assert_not_reached "fsck unexpectedly succeeded after adding unbound ref!"
 fi
-assert_file_has_content fsck-error "Ref ‘ref3’ in bindings for commit .* does not exist"
+assert_file_has_content fsck-error 'Ref .ref3. in bindings for commit .* does not exist'
 assert_file_has_content fsck "^Validating refs\.\.\.$"
 
 echo "ok 11 fsck ignores unreferenced ref bindings"
diff --git a/tests/test-remote-add.sh b/tests/test-remote-add.sh
index bb7eae89..62a3bcd7 100755
--- a/tests/test-remote-add.sh
+++ b/tests/test-remote-add.sh
@@ -83,7 +83,7 @@
 if $OSTREE remote delete nosuchremote 2>err.txt; then
     assert_not_reached "Deleting remote unexpectedly succeeded"
 fi
-assert_file_has_content err.txt "error: "
+assert_file_has_content err.txt "not found"
 
 $OSTREE remote delete --if-exists nosuchremote
 echo "ok"
