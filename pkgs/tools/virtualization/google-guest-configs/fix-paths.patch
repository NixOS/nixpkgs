diff --git a/src/lib/dracut/modules.d/30gcp-udev-rules/module-setup.sh b/src/lib/dracut/modules.d/30gcp-udev-rules/module-setup.sh
index 88f75cf..cb2b372 100755
--- a/src/lib/dracut/modules.d/30gcp-udev-rules/module-setup.sh
+++ b/src/lib/dracut/modules.d/30gcp-udev-rules/module-setup.sh
@@ -5,8 +5,8 @@
 # called by dracut
 install() {
   inst_multiple nvme grep sed
-  inst_simple /usr/lib/udev/google_nvme_id
-  inst_simple /usr/lib/udev/rules.d/65-gce-disk-naming.rules
+  inst_simple @out@/lib/udev/google_nvme_id
+  inst_simple @out@/lib/udev/rules.d/65-gce-disk-naming.rules
 }
 
 installkernel() {
diff --git a/src/lib/udev/google_nvme_id b/src/lib/udev/google_nvme_id
index ef02963..85b9959 100755
--- a/src/lib/udev/google_nvme_id
+++ b/src/lib/udev/google_nvme_id
@@ -17,7 +17,7 @@
 # persistent disk) using the disk names reported by the metadata server.
 
 # Locations of the script's dependencies
-readonly nvme_cli_bin=/usr/sbin/nvme
+readonly nvme_cli_bin=@nvme@
 
 # Bash regex to parse device paths and controller identification
 readonly PD_CONTROLLER_REGEX="nvme_card-pd"
diff --git a/src/lib/udev/rules.d/65-gce-disk-naming.rules b/src/lib/udev/rules.d/65-gce-disk-naming.rules
index d5c4ea8..1d842ab 100644
--- a/src/lib/udev/rules.d/65-gce-disk-naming.rules
+++ b/src/lib/udev/rules.d/65-gce-disk-naming.rules
@@ -26,10 +26,10 @@ KERNEL=="sd*|vd*", ENV{ID_VENDOR}!="Google", GOTO="gce_disk_naming_end"
 KERNEL=="nvme*", ATTRS{model}!="nvme_card*", GOTO="gce_disk_naming_end"
 
 # NVME Local SSD naming
-KERNEL=="nvme*n*", ATTRS{model}=="nvme_card", PROGRAM="/bin/sh -c 'nsid=$$(echo %k|sed -re s/nvme[0-9]+n\([0-9]+\).\*/\\1/); echo $$((nsid-1))'", ENV{ID_SERIAL_SHORT}="local-nvme-ssd-%c"
+KERNEL=="nvme*n*", ATTRS{model}=="nvme_card", PROGRAM="@sh@ -c 'nsid=$$(echo %k|sed -re s/nvme[0-9]+n\([0-9]+\).\*/\\1/); echo $$((nsid-1))'", ENV{ID_SERIAL_SHORT}="local-nvme-ssd-%c"
 KERNEL=="nvme*", ATTRS{model}=="nvme_card", ENV{ID_SERIAL}="Google_EphemeralDisk_$env{ID_SERIAL_SHORT}"
 # Support for local SSD multi-controller
-KERNEL=="nvme*n*", ATTRS{model}=="nvme_card[0-9]*", IMPORT{program}="google_nvme_id -d $tempnode"
+KERNEL=="nvme*n*", ATTRS{model}=="nvme_card[0-9]*", IMPORT{program}="@out@/lib/udev/google_nvme_id -d $tempnode"
 
 # NVME Persistent Disk IO Timeout
 KERNEL=="nvme*n*", ENV{DEVTYPE}=="disk", ATTRS{model}=="nvme_card-pd", ATTR{queue/io_timeout}="4294967295"
diff --git a/src/sbin/google-dhclient-script b/src/sbin/google-dhclient-script
index 3b10cb9..446efb3 100755
--- a/src/sbin/google-dhclient-script
+++ b/src/sbin/google-dhclient-script
@@ -31,7 +31,6 @@
 # This script is found in EL 7 and used to fix local routing in EL 6.
 # ----------
 
-PATH=/bin:/usr/bin:/sbin
 # scripts in dhclient.d/ use $SAVEDIR (#833054)
 SAVEDIR=/var/lib/dhclient
 
@@ -58,9 +57,9 @@ eventually_add_hostnames_domain_to_search() {
     if need_hostname; then
         status=1
         if [ -n "${new_ip_address}" ]; then
-            eval $(/bin/ipcalc --silent --hostname ${new_ip_address} ; echo "status=$?")
+            eval $(ipcalc --silent --hostname ${new_ip_address} ; echo "status=$?")
         elif [ -n "${new_ip6_address}" ]; then
-            eval $(/bin/ipcalc --silent --hostname ${new_ip6_address} ; echo "status=$?")
+            eval $(ipcalc --silent --hostname ${new_ip6_address} ; echo "status=$?")
         fi
 
         if [ ${status} -eq 0 ]; then
