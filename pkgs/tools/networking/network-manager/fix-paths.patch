--- a/clients/common/nm-vpn-helpers.c
+++ b/clients/common/nm-vpn-helpers.c
@@ -214,10 +214,7 @@
 		NULL,
 	};
 
-	path = nm_utils_file_search_in_paths ("openconnect", "/usr/sbin/openconnect", DEFAULT_PATHS,
-	                                      G_FILE_TEST_IS_EXECUTABLE, NULL, NULL, error);
-	if (!path)
-		return FALSE;
+	path = "@openconnect@/bin/openconnect";
 
 	argv[0] = (char *) path;
 	argv[1] = "--authenticate";
--- a/data/84-nm-drivers.rules
+++ b/data/84-nm-drivers.rules
@@ -7,6 +7,6 @@
 # Determine ID_NET_DRIVER if there's no ID_NET_DRIVER or DRIVERS (old udev?)
 ENV{ID_NET_DRIVER}=="?*", GOTO="nm_drivers_end"
 DRIVERS=="?*", GOTO="nm_drivers_end"
-PROGRAM="/bin/sh -c 'ethtool -i $1 | sed -n s/^driver:\ //p' -- $env{INTERFACE}", RESULT=="?*", ENV{ID_NET_DRIVER}="%c"
+PROGRAM="@shell@ -c '@ethtool@/bin/ethtool -i $1 | @coreutils@/bin/sed -n s/^driver:\ //p' -- $env{INTERFACE}", RESULT=="?*", ENV{ID_NET_DRIVER}="%c"
 
 LABEL="nm_drivers_end"
--- a/data/NetworkManager.service.in
+++ b/data/NetworkManager.service.in
@@ -8,7 +8,7 @@
 [Service]
 Type=dbus
 BusName=org.freedesktop.NetworkManager
-ExecReload=/usr/bin/dbus-send --print-reply --system --type=method_call --dest=org.freedesktop.NetworkManager /org/freedesktop/NetworkManager org.freedesktop.NetworkManager.Reload uint32:0
+ExecReload=@dbus@/bin/dbus-send --print-reply --system --type=method_call --dest=org.freedesktop.NetworkManager /org/freedesktop/NetworkManager org.freedesktop.NetworkManager.Reload uint32:0
 #ExecReload=/bin/kill -HUP $MAINPID
 ExecStart=@sbindir@/NetworkManager --no-daemon
 Restart=on-failure
--- a/src/devices/nm-device.c
+++ b/src/devices/nm-device.c
@@ -12453,14 +12453,14 @@
 			gw = nm_ip4_config_best_default_route_get (priv->ip_config_4);
 			if (gw) {
 				nm_utils_inet4_ntop (NMP_OBJECT_CAST_IP4_ROUTE (gw)->gateway, buf);
-				ping_binary = nm_utils_find_helper ("ping", "/usr/bin/ping", NULL);
+				ping_binary = "@inetutils@/bin/ping";
 				log_domain = LOGD_IP4;
 			}
 		} else if (priv->ip_config_6 && priv->ip_state_6 == NM_DEVICE_IP_STATE_DONE) {
 			gw = nm_ip6_config_best_default_route_get (priv->ip_config_6);
 			if (gw) {
 				nm_utils_inet6_ntop (&NMP_OBJECT_CAST_IP6_ROUTE (gw)->gateway, buf);
-				ping_binary = nm_utils_find_helper ("ping6", "/usr/bin/ping6", NULL);
+				ping_binary = "@inetutils@/bin/ping";
 				log_domain = LOGD_IP6;
 			}
 		}
--- a/src/nm-core-utils.c
+++ b/src/nm-core-utils.c
@@ -442,7 +442,7 @@
 
 	/* construct the argument list */
 	argv = g_ptr_array_sized_new (4);
-	g_ptr_array_add (argv, "/sbin/modprobe");
+	g_ptr_array_add (argv, "@kmod@/bin/modprobe");
 	g_ptr_array_add (argv, "--use-blacklist");
 	g_ptr_array_add (argv, (char *) arg1);

--- a/src/platform/tests/test-link.c
+++ b/src/platform/tests/test-link.c
@@ -273,7 +273,7 @@
 			 * `ip link` also claims master to be up, accept it. */
 			char *stdout_str = NULL;
 
-			nmtst_spawn_sync (NULL, &stdout_str, NULL, 0, "/sbin/ip", "link", "show", "dev", nm_platform_link_get_name (NM_PLATFORM_GET, master));
+			nmtst_spawn_sync (NULL, &stdout_str, NULL, 0, "@iproute@/bin/ip", "link", "show", "dev", nm_platform_link_get_name (NM_PLATFORM_GET, master));
 
 			g_assert (strstr (stdout_str, "LOWER_UP"));
 			g_free (stdout_str);

--- a/src/settings/plugins/ibft/nms-ibft-plugin.c
+++ b/src/settings/plugins/ibft/nms-ibft-plugin.c
@@ -68,7 +68,7 @@
 	GError *error = NULL;
 	NMSIbftConnection *connection;
 
-	if (!nms_ibft_reader_load_blocks ("/sbin/iscsiadm", &blocks, &error)) {
+	if (!nms_ibft_reader_load_blocks ("@openiscsi@/bin/iscsiadm", &blocks, &error)) {
 		nm_log_dbg (LOGD_SETTINGS, "ibft: failed to read iscsiadm records: %s", error->message);
 		g_error_free (error);
 		return;
--- a/src/settings/plugins/ifupdown/tests/test-ifupdown.c
+++ b/src/settings/plugins/ifupdown/tests/test-ifupdown.c
@@ -355,7 +355,7 @@
 	b = expected_block_new ("iface", "pppoe");
 	expected_add_block (e, b);
 	expected_block_add_key (b, expected_key_new ("inet", "manual"));
-	expected_block_add_key (b, expected_key_new ("pre-up", "/sbin/ifconfig eth0 up"));
+	expected_block_add_key (b, expected_key_new ("pre-up", "@nettools@/bin/ifconfig eth0 up"));
 
 	compare_expected_to_ifparser (parser, e);
