# Generated by carnix 0.7.2: carnix nix --src .
{ lib, buildPlatform, buildRustCrate, fetchgit }:
let kernel = buildPlatform.parsed.kernel.name;
    abi = buildPlatform.parsed.abi.name;
    include = includedFiles: src: builtins.filterSource (path: type:
      lib.lists.any (f:
        let p = toString (src + ("/" + f)); in
        (path == p) || (type == "directory" && lib.strings.hasPrefix path p)
      ) includedFiles
    ) src;
    updateFeatures = f: up: functions: builtins.deepSeq f (lib.lists.foldl' (features: fun: fun features) (lib.attrsets.recursiveUpdate f up) functions);
    mapFeatures = features: map (fun: fun { features = features; });
    mkFeatures = feat: lib.lists.foldl (features: featureName:
      if feat.${featureName} or false then
        [ featureName ] ++ features
      else
        features
    ) [] (builtins.attrNames feat);
in
rec {
  nixdoc = f: nixdoc_1_0_1 { features = nixdoc_1_0_1_features { nixdoc_1_0_1 = f; }; };
  __all = [ (nixdoc {}) ];
  ansi_term_0_11_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ansi_term";
    version = "0.11.0";
    authors = [ "ogham@bsago.me" "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>" "Josh Triplett <josh@joshtriplett.org>" ];
    sha256 = "08fk0p2xvkqpmz3zlrwnf6l8sj2vngw464rvzspzp31sbgxbwm4v";
    inherit dependencies buildDependencies features;
  };
  arenatree_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "arenatree";
    version = "0.1.1";
    authors = [ "jD91mZM2 <me@krake.one>" ];
    src = fetchgit {
       url = "https://gitlab.com/jD91mZM2/arenatree";
       rev = "f9bf7efa9a5ef4c2dd9e2acc5a4cc79a987cb648";
       sha256 = "1153ki8rnaiyb24a6vdsa3wywpdp97x92vyc2jik9cnni5nmaxbg";
       fetchSubmodules = false;
    };
    inherit dependencies buildDependencies features;
  };
  arrayvec_0_4_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "arrayvec";
    version = "0.4.7";
    authors = [ "bluss" ];
    sha256 = "0fzgv7z1x1qnyd7j32vdcadk4k9wfx897y06mr3bw1yi52iqf4z4";
    inherit dependencies buildDependencies features;
  };
  atty_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "atty";
    version = "0.2.11";
    authors = [ "softprops <d.tangren@gmail.com>" ];
    sha256 = "0by1bj2km9jxi4i4g76zzi76fc2rcm9934jpnyrqd95zw344pb20";
    inherit dependencies buildDependencies features;
  };
  backtrace_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace";
    version = "0.3.9";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "The Rust Project Developers" ];
    sha256 = "137pjkcn89b7fqk78w65ggj92pynmf1hkr1sjz53aga4b50lkmwm";
    inherit dependencies buildDependencies features;
  };
  backtrace_sys_0_1_24_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace-sys";
    version = "0.1.24";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "15d6jlknykiijcin3vqbx33760w24ss5qw3l1xd3hms5k4vc8305";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  bitflags_1_0_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "1.0.4";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1g1wmz2001qmfrd37dnd5qiss5njrw26aywmg6yhkmkbyrhjxb08";
    inherit dependencies buildDependencies features;
  };
  cc_1_0_25_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cc";
    version = "1.0.25";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0pd8fhjlpr5qan984frkf1c8nxrqp6827wmmfzhm2840229z2hq0";
    inherit dependencies buildDependencies features;
  };
  cfg_if_0_1_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cfg-if";
    version = "0.1.6";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "11qrix06wagkplyk908i3423ps9m9np6c4vbcq81s9fyl244xv3n";
    inherit dependencies buildDependencies features;
  };
  clap_2_32_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "clap";
    version = "2.32.0";
    authors = [ "Kevin K. <kbknapp@gmail.com>" ];
    sha256 = "1hdjf0janvpjkwrjdjx1mm2aayzr54k72w6mriyr0n5anjkcj1lx";
    inherit dependencies buildDependencies features;
  };
  failure_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "failure";
    version = "0.1.3";
    authors = [ "Without Boats <boats@mozilla.com>" ];
    sha256 = "0cibp01z0clyxrvkl7v7kq6jszsgcg9vwv6d9l6d1drk9jqdss4s";
    inherit dependencies buildDependencies features;
  };
  failure_derive_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "failure_derive";
    version = "0.1.3";
    authors = [ "Without Boats <woboats@gmail.com>" ];
    sha256 = "1mh7ad2d17f13g0k29bskp0f9faws0w1q4a5yfzlzi75bw9kidgm";
    procMacro = true;
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  libc_0_2_43_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libc";
    version = "0.2.43";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0pshydmsq71kl9276zc2928ld50sp524ixcqkcqsgq410dx6c50b";
    inherit dependencies buildDependencies features;
  };
  nixdoc_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "nixdoc";
    version = "1.0.1";
    authors = [ "Vincent Ambo <mail@tazj.in>" ];
    src = fetchgit {
       url = "https://github.com/tazjin/nixdoc";
       rev = "v1.0.1";
       sha256 = "14d4dq06jdqazxvv7fq5872zy0capxyb0fdkp8qg06gxl1iw201s";
       fetchSubmodules = false;
    };
    inherit dependencies buildDependencies features;
  };
  nodrop_0_1_12_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "nodrop";
    version = "0.1.12";
    authors = [ "bluss" ];
    sha256 = "1b9rxvdg8061gxjc239l9slndf0ds3m6fy2sf3gs8f9kknqgl49d";
    inherit dependencies buildDependencies features;
  };
  proc_macro2_0_4_20_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "proc-macro2";
    version = "0.4.20";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0yr74b00d3wzg21kjvfln7vzzvf9aghbaff4c747i3grbd997ys2";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  quote_0_6_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quote";
    version = "0.6.8";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0dq6j23w6pmc4l6v490arixdwypy0b82z76nrzaingqhqri4p3mh";
    inherit dependencies buildDependencies features;
  };
  redox_syscall_0_1_40_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_syscall";
    version = "0.1.40";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "132rnhrq49l3z7gjrwj2zfadgw6q0355s6a7id7x7c0d7sk72611";
    libName = "syscall";
    inherit dependencies buildDependencies features;
  };
  redox_termios_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_termios";
    version = "0.1.1";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "04s6yyzjca552hdaqlvqhp3vw0zqbc304md5czyd3axh56iry8wh";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  rnix_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rnix";
    version = "0.4.1";
    authors = [ "jD91mZM2 <me@krake.one>" ];
    src = fetchgit {
       url = "https://gitlab.com/jD91mZM2/rnix.git";
       rev = "10b86c94291b4864470158ef8750de85ddd8d4ba";
       sha256 = "0c0i42sfwv6wm2zqjfaszf4y03ahm5d0dar3xj3jj0isg6lzylhb";
       fetchSubmodules = false;
    };
    inherit dependencies buildDependencies features;
  };
  rustc_demangle_0_1_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc-demangle";
    version = "0.1.9";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "00ma4r9haq0zv5krps617mym6y74056pfcivyld0kpci156vfaax";
    inherit dependencies buildDependencies features;
  };
  smol_str_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "smol_str";
    version = "0.1.7";
    authors = [ "Aleksey Kladov <aleksey.kladov@gmail.com>" ];
    sha256 = "1h9bixysjk805ayfqddwfxqbqchfyiji6g0ylrz27j4j9ip6ky7n";
    inherit dependencies buildDependencies features;
  };
  strsim_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "strsim";
    version = "0.7.0";
    authors = [ "Danny Guo <dannyguo91@gmail.com>" ];
    sha256 = "0fy0k5f2705z73mb3x9459bpcvrx4ky8jpr4zikcbiwan4bnm0iv";
    inherit dependencies buildDependencies features;
  };
  structopt_0_2_12_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "structopt";
    version = "0.2.12";
    authors = [ "Guillaume Pinot <texitoi@texitoi.eu>" "others" ];
    sha256 = "0nh6167hgj3ixqdfic8c9qa6g4f7hm976qbsa61izgwd5jpn25bk";
    inherit dependencies buildDependencies features;
  };
  structopt_derive_0_2_12_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "structopt-derive";
    version = "0.2.12";
    authors = [ "Guillaume Pinot <texitoi@texitoi.eu>" ];
    sha256 = "0wcmfbm0s2452g4c5iy858c059mbv0x2md9xhwgxqrf1xqdj060y";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  syn_0_15_15_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syn";
    version = "0.15.15";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1ir7iycrnr5qyc2pj05kbm1pyryv1a4grg9wjjl77sk1kxzazscg";
    inherit dependencies buildDependencies features;
  };
  synstructure_0_10_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "synstructure";
    version = "0.10.1";
    authors = [ "Nika Layzell <nika@thelayzells.com>" ];
    sha256 = "0mx2vwd0d0f7hanz15nkp0ikkfjsx9rfkph7pynxyfbj45ank4g3";
    inherit dependencies buildDependencies features;
  };
  termion_1_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termion";
    version = "1.5.1";
    authors = [ "ticki <Ticki@users.noreply.github.com>" "gycos <alexandre.bury@gmail.com>" "IGI-111 <igi-111@protonmail.com>" ];
    sha256 = "02gq4vd8iws1f3gjrgrgpajsk2bk43nds5acbbb4s8dvrdvr8nf1";
    inherit dependencies buildDependencies features;
  };
  textwrap_0_10_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "textwrap";
    version = "0.10.0";
    authors = [ "Martin Geisler <martin@geisler.net>" ];
    sha256 = "1s8d5cna12smhgj0x2y1xphklyk2an1yzbadnj89p1vy5vnjpsas";
    inherit dependencies buildDependencies features;
  };
  unicode_width_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-width";
    version = "0.1.5";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "0886lc2aymwgy0lhavwn6s48ik3c61ykzzd3za6prgnw51j7bi4w";
    inherit dependencies buildDependencies features;
  };
  unicode_xid_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-xid";
    version = "0.1.0";
    authors = [ "erick.tryzelaar <erick.tryzelaar@gmail.com>" "kwantam <kwantam@gmail.com>" ];
    sha256 = "05wdmwlfzxhq3nhsxn6wx4q8dhxzzfb9szsz6wiw092m1rjj01zj";
    inherit dependencies buildDependencies features;
  };
  vec_map_0_8_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "vec_map";
    version = "0.8.1";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Jorge Aparicio <japaricious@gmail.com>" "Alexis Beingessner <a.beingessner@gmail.com>" "Brian Anderson <>" "tbu- <>" "Manish Goregaokar <>" "Aaron Turon <aturon@mozilla.com>" "Adolfo Ochagavía <>" "Niko Matsakis <>" "Steven Fackler <>" "Chase Southwood <csouth3@illinois.edu>" "Eduard Burtescu <>" "Florian Wilkens <>" "Félix Raimundo <>" "Tibor Benke <>" "Markus Siemens <markus@m-siemens.de>" "Josh Branchaud <jbranchaud@gmail.com>" "Huon Wilson <dbau.pp@gmail.com>" "Corey Farwell <coref@rwell.org>" "Aaron Liblong <>" "Nick Cameron <nrc@ncameron.org>" "Patrick Walton <pcwalton@mimiga.net>" "Felix S Klock II <>" "Andrew Paseltiner <apaseltiner@gmail.com>" "Sean McArthur <sean.monstar@gmail.com>" "Vadim Petrochenkov <>" ];
    sha256 = "1jj2nrg8h3l53d43rwkpkikq5a5x15ms4rf1rw92hp5lrqhi8mpi";
    inherit dependencies buildDependencies features;
  };
  winapi_0_3_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.3.6";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1d9jfp4cjd82sr1q4dgdlrkvm33zhhav9d7ihr0nivqbncr059m4";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_i686_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-i686-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "05ihkij18r4gamjpxj4gra24514can762imjzlmak5wlzidplzrp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_x86_64_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-x86_64-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0n1ylmlsb8yg1v583i4xy0qmqg42275flvbc51hdqjjfjcl9vlbj";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  xml_rs_0_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "xml-rs";
    version = "0.8.0";
    authors = [ "Vladimir Matveev <vladimir.matweev@gmail.com>" ];
    sha256 = "1l3g4wmbz611jwx2a1ni4jyj0ffnls3s7a7rbdn6c763k85k7zs5";
    libPath = "src/lib.rs";
    libName = "xml";
    crateBin = [ {  name = "xml-analyze";  path = "src/analyze.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  ansi_term_0_11_0 = { features?(ansi_term_0_11_0_features {}) }: ansi_term_0_11_0_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ winapi_0_3_6 ]) else []);
  };
  ansi_term_0_11_0_features = f: updateFeatures f (rec {
    ansi_term_0_11_0.default = (f.ansi_term_0_11_0.default or true);
    winapi_0_3_6.consoleapi = true;
    winapi_0_3_6.default = true;
    winapi_0_3_6.errhandlingapi = true;
    winapi_0_3_6.processenv = true;
  }) [ winapi_0_3_6_features ];
  arenatree_0_1_1 = { features?(arenatree_0_1_1_features {}) }: arenatree_0_1_1_ {};
  arenatree_0_1_1_features = f: updateFeatures f (rec {
    arenatree_0_1_1.default = (f.arenatree_0_1_1.default or true);
  }) [];
  arrayvec_0_4_7 = { features?(arrayvec_0_4_7_features {}) }: arrayvec_0_4_7_ {
    dependencies = mapFeatures features ([ nodrop_0_1_12 ]);
    features = mkFeatures (features.arrayvec_0_4_7 or {});
  };
  arrayvec_0_4_7_features = f: updateFeatures f (rec {
    arrayvec_0_4_7.default = (f.arrayvec_0_4_7.default or true);
    arrayvec_0_4_7.serde =
      (f.arrayvec_0_4_7.serde or false) ||
      (f.arrayvec_0_4_7."serde-1" or false) ||
      (arrayvec_0_4_7."serde-1" or false);
    arrayvec_0_4_7.std =
      (f.arrayvec_0_4_7.std or false) ||
      (f.arrayvec_0_4_7.default or false) ||
      (arrayvec_0_4_7.default or false);
    nodrop_0_1_12.default = (f.nodrop_0_1_12.default or false);
  }) [ nodrop_0_1_12_features ];
  atty_0_2_11 = { features?(atty_0_2_11_features {}) }: atty_0_2_11_ {
    dependencies = (if kernel == "redox" then mapFeatures features ([ termion_1_5_1 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_43 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_6 ]) else []);
  };
  atty_0_2_11_features = f: updateFeatures f (rec {
    atty_0_2_11.default = (f.atty_0_2_11.default or true);
    libc_0_2_43.default = (f.libc_0_2_43.default or false);
    termion_1_5_1.default = true;
    winapi_0_3_6.consoleapi = true;
    winapi_0_3_6.default = true;
    winapi_0_3_6.minwinbase = true;
    winapi_0_3_6.minwindef = true;
    winapi_0_3_6.processenv = true;
    winapi_0_3_6.winbase = true;
  }) [ termion_1_5_1_features libc_0_2_43_features winapi_0_3_6_features ];
  backtrace_0_3_9 = { features?(backtrace_0_3_9_features {}) }: backtrace_0_3_9_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_6 rustc_demangle_0_1_9 ])
      ++ (if (kernel == "linux" || kernel == "darwin") && !(kernel == "fuchsia") && !(kernel == "emscripten") && !(kernel == "darwin") && !(kernel == "ios") then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_9."backtrace-sys" or false then [ backtrace_sys_0_1_24 ] else [])) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_43 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_9.winapi or false then [ winapi_0_3_6 ] else [])) else []);
    features = mkFeatures (features.backtrace_0_3_9 or {});
  };
  backtrace_0_3_9_features = f: updateFeatures f (rec {
    backtrace_0_3_9."addr2line" =
      (f.backtrace_0_3_9."addr2line" or false) ||
      (f.backtrace_0_3_9."gimli-symbolize" or false) ||
      (backtrace_0_3_9."gimli-symbolize" or false);
    backtrace_0_3_9."backtrace-sys" =
      (f.backtrace_0_3_9."backtrace-sys" or false) ||
      (f.backtrace_0_3_9.libbacktrace or false) ||
      (backtrace_0_3_9.libbacktrace or false);
    backtrace_0_3_9."rustc-serialize" =
      (f.backtrace_0_3_9."rustc-serialize" or false) ||
      (f.backtrace_0_3_9."serialize-rustc" or false) ||
      (backtrace_0_3_9."serialize-rustc" or false);
    backtrace_0_3_9.coresymbolication =
      (f.backtrace_0_3_9.coresymbolication or false) ||
      (f.backtrace_0_3_9.default or false) ||
      (backtrace_0_3_9.default or false);
    backtrace_0_3_9.dbghelp =
      (f.backtrace_0_3_9.dbghelp or false) ||
      (f.backtrace_0_3_9.default or false) ||
      (backtrace_0_3_9.default or false);
    backtrace_0_3_9.default = (f.backtrace_0_3_9.default or true);
    backtrace_0_3_9.dladdr =
      (f.backtrace_0_3_9.dladdr or false) ||
      (f.backtrace_0_3_9.default or false) ||
      (backtrace_0_3_9.default or false);
    backtrace_0_3_9.findshlibs =
      (f.backtrace_0_3_9.findshlibs or false) ||
      (f.backtrace_0_3_9."gimli-symbolize" or false) ||
      (backtrace_0_3_9."gimli-symbolize" or false);
    backtrace_0_3_9.gimli =
      (f.backtrace_0_3_9.gimli or false) ||
      (f.backtrace_0_3_9."gimli-symbolize" or false) ||
      (backtrace_0_3_9."gimli-symbolize" or false);
    backtrace_0_3_9.libbacktrace =
      (f.backtrace_0_3_9.libbacktrace or false) ||
      (f.backtrace_0_3_9.default or false) ||
      (backtrace_0_3_9.default or false);
    backtrace_0_3_9.libunwind =
      (f.backtrace_0_3_9.libunwind or false) ||
      (f.backtrace_0_3_9.default or false) ||
      (backtrace_0_3_9.default or false);
    backtrace_0_3_9.memmap =
      (f.backtrace_0_3_9.memmap or false) ||
      (f.backtrace_0_3_9."gimli-symbolize" or false) ||
      (backtrace_0_3_9."gimli-symbolize" or false);
    backtrace_0_3_9.object =
      (f.backtrace_0_3_9.object or false) ||
      (f.backtrace_0_3_9."gimli-symbolize" or false) ||
      (backtrace_0_3_9."gimli-symbolize" or false);
    backtrace_0_3_9.serde =
      (f.backtrace_0_3_9.serde or false) ||
      (f.backtrace_0_3_9."serialize-serde" or false) ||
      (backtrace_0_3_9."serialize-serde" or false);
    backtrace_0_3_9.serde_derive =
      (f.backtrace_0_3_9.serde_derive or false) ||
      (f.backtrace_0_3_9."serialize-serde" or false) ||
      (backtrace_0_3_9."serialize-serde" or false);
    backtrace_0_3_9.winapi =
      (f.backtrace_0_3_9.winapi or false) ||
      (f.backtrace_0_3_9.dbghelp or false) ||
      (backtrace_0_3_9.dbghelp or false);
    backtrace_sys_0_1_24.default = true;
    cfg_if_0_1_6.default = true;
    libc_0_2_43.default = true;
    rustc_demangle_0_1_9.default = true;
    winapi_0_3_6.dbghelp = true;
    winapi_0_3_6.default = true;
    winapi_0_3_6.minwindef = true;
    winapi_0_3_6.processthreadsapi = true;
    winapi_0_3_6.std = true;
    winapi_0_3_6.winnt = true;
  }) [ cfg_if_0_1_6_features rustc_demangle_0_1_9_features backtrace_sys_0_1_24_features libc_0_2_43_features winapi_0_3_6_features ];
  backtrace_sys_0_1_24 = { features?(backtrace_sys_0_1_24_features {}) }: backtrace_sys_0_1_24_ {
    dependencies = mapFeatures features ([ libc_0_2_43 ]);
    buildDependencies = mapFeatures features ([ cc_1_0_25 ]);
  };
  backtrace_sys_0_1_24_features = f: updateFeatures f (rec {
    backtrace_sys_0_1_24.default = (f.backtrace_sys_0_1_24.default or true);
    cc_1_0_25.default = true;
    libc_0_2_43.default = true;
  }) [ libc_0_2_43_features cc_1_0_25_features ];
  bitflags_1_0_4 = { features?(bitflags_1_0_4_features {}) }: bitflags_1_0_4_ {
    features = mkFeatures (features.bitflags_1_0_4 or {});
  };
  bitflags_1_0_4_features = f: updateFeatures f (rec {
    bitflags_1_0_4.default = (f.bitflags_1_0_4.default or true);
  }) [];
  cc_1_0_25 = { features?(cc_1_0_25_features {}) }: cc_1_0_25_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.cc_1_0_25 or {});
  };
  cc_1_0_25_features = f: updateFeatures f (rec {
    cc_1_0_25.default = (f.cc_1_0_25.default or true);
    cc_1_0_25.rayon =
      (f.cc_1_0_25.rayon or false) ||
      (f.cc_1_0_25.parallel or false) ||
      (cc_1_0_25.parallel or false);
  }) [];
  cfg_if_0_1_6 = { features?(cfg_if_0_1_6_features {}) }: cfg_if_0_1_6_ {};
  cfg_if_0_1_6_features = f: updateFeatures f (rec {
    cfg_if_0_1_6.default = (f.cfg_if_0_1_6.default or true);
  }) [];
  clap_2_32_0 = { features?(clap_2_32_0_features {}) }: clap_2_32_0_ {
    dependencies = mapFeatures features ([ bitflags_1_0_4 textwrap_0_10_0 unicode_width_0_1_5 ]
      ++ (if features.clap_2_32_0.atty or false then [ atty_0_2_11 ] else [])
      ++ (if features.clap_2_32_0.strsim or false then [ strsim_0_7_0 ] else [])
      ++ (if features.clap_2_32_0.vec_map or false then [ vec_map_0_8_1 ] else []))
      ++ (if !(kernel == "windows") then mapFeatures features ([ ]
      ++ (if features.clap_2_32_0.ansi_term or false then [ ansi_term_0_11_0 ] else [])) else []);
    features = mkFeatures (features.clap_2_32_0 or {});
  };
  clap_2_32_0_features = f: updateFeatures f (rec {
    ansi_term_0_11_0.default = true;
    atty_0_2_11.default = true;
    bitflags_1_0_4.default = true;
    clap_2_32_0."yaml-rust" =
      (f.clap_2_32_0."yaml-rust" or false) ||
      (f.clap_2_32_0.yaml or false) ||
      (clap_2_32_0.yaml or false);
    clap_2_32_0.ansi_term =
      (f.clap_2_32_0.ansi_term or false) ||
      (f.clap_2_32_0.color or false) ||
      (clap_2_32_0.color or false);
    clap_2_32_0.atty =
      (f.clap_2_32_0.atty or false) ||
      (f.clap_2_32_0.color or false) ||
      (clap_2_32_0.color or false);
    clap_2_32_0.clippy =
      (f.clap_2_32_0.clippy or false) ||
      (f.clap_2_32_0.lints or false) ||
      (clap_2_32_0.lints or false);
    clap_2_32_0.color =
      (f.clap_2_32_0.color or false) ||
      (f.clap_2_32_0.default or false) ||
      (clap_2_32_0.default or false);
    clap_2_32_0.default = (f.clap_2_32_0.default or true);
    clap_2_32_0.strsim =
      (f.clap_2_32_0.strsim or false) ||
      (f.clap_2_32_0.suggestions or false) ||
      (clap_2_32_0.suggestions or false);
    clap_2_32_0.suggestions =
      (f.clap_2_32_0.suggestions or false) ||
      (f.clap_2_32_0.default or false) ||
      (clap_2_32_0.default or false);
    clap_2_32_0.term_size =
      (f.clap_2_32_0.term_size or false) ||
      (f.clap_2_32_0.wrap_help or false) ||
      (clap_2_32_0.wrap_help or false);
    clap_2_32_0.vec_map =
      (f.clap_2_32_0.vec_map or false) ||
      (f.clap_2_32_0.default or false) ||
      (clap_2_32_0.default or false);
    clap_2_32_0.yaml =
      (f.clap_2_32_0.yaml or false) ||
      (f.clap_2_32_0.doc or false) ||
      (clap_2_32_0.doc or false);
    strsim_0_7_0.default = true;
    textwrap_0_10_0.default = true;
    textwrap_0_10_0.term_size =
      (f.textwrap_0_10_0.term_size or false) ||
      (clap_2_32_0.wrap_help or false) ||
      (f.clap_2_32_0.wrap_help or false);
    unicode_width_0_1_5.default = true;
    vec_map_0_8_1.default = true;
  }) [ atty_0_2_11_features bitflags_1_0_4_features strsim_0_7_0_features textwrap_0_10_0_features unicode_width_0_1_5_features vec_map_0_8_1_features ansi_term_0_11_0_features ];
  failure_0_1_3 = { features?(failure_0_1_3_features {}) }: failure_0_1_3_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.failure_0_1_3.backtrace or false then [ backtrace_0_3_9 ] else [])
      ++ (if features.failure_0_1_3.failure_derive or false then [ failure_derive_0_1_3 ] else []));
    features = mkFeatures (features.failure_0_1_3 or {});
  };
  failure_0_1_3_features = f: updateFeatures f (rec {
    backtrace_0_3_9.default = true;
    failure_0_1_3.backtrace =
      (f.failure_0_1_3.backtrace or false) ||
      (f.failure_0_1_3.std or false) ||
      (failure_0_1_3.std or false);
    failure_0_1_3.default = (f.failure_0_1_3.default or true);
    failure_0_1_3.derive =
      (f.failure_0_1_3.derive or false) ||
      (f.failure_0_1_3.default or false) ||
      (failure_0_1_3.default or false);
    failure_0_1_3.failure_derive =
      (f.failure_0_1_3.failure_derive or false) ||
      (f.failure_0_1_3.derive or false) ||
      (failure_0_1_3.derive or false);
    failure_0_1_3.std =
      (f.failure_0_1_3.std or false) ||
      (f.failure_0_1_3.default or false) ||
      (failure_0_1_3.default or false);
    failure_derive_0_1_3.default = true;
  }) [ backtrace_0_3_9_features failure_derive_0_1_3_features ];
  failure_derive_0_1_3 = { features?(failure_derive_0_1_3_features {}) }: failure_derive_0_1_3_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_20 quote_0_6_8 syn_0_15_15 synstructure_0_10_1 ]);
    features = mkFeatures (features.failure_derive_0_1_3 or {});
  };
  failure_derive_0_1_3_features = f: updateFeatures f (rec {
    failure_derive_0_1_3.default = (f.failure_derive_0_1_3.default or true);
    proc_macro2_0_4_20.default = true;
    quote_0_6_8.default = true;
    syn_0_15_15.default = true;
    synstructure_0_10_1.default = true;
  }) [ proc_macro2_0_4_20_features quote_0_6_8_features syn_0_15_15_features synstructure_0_10_1_features ];
  libc_0_2_43 = { features?(libc_0_2_43_features {}) }: libc_0_2_43_ {
    features = mkFeatures (features.libc_0_2_43 or {});
  };
  libc_0_2_43_features = f: updateFeatures f (rec {
    libc_0_2_43.default = (f.libc_0_2_43.default or true);
    libc_0_2_43.use_std =
      (f.libc_0_2_43.use_std or false) ||
      (f.libc_0_2_43.default or false) ||
      (libc_0_2_43.default or false);
  }) [];
  nixdoc_1_0_1 = { features?(nixdoc_1_0_1_features {}) }: nixdoc_1_0_1_ {
    dependencies = mapFeatures features ([ failure_0_1_3 rnix_0_4_1 structopt_0_2_12 xml_rs_0_8_0 ]);
  };
  nixdoc_1_0_1_features = f: updateFeatures f (rec {
    failure_0_1_3.default = true;
    nixdoc_1_0_1.default = (f.nixdoc_1_0_1.default or true);
    rnix_0_4_1.default = true;
    structopt_0_2_12.default = true;
    xml_rs_0_8_0.default = true;
  }) [ failure_0_1_3_features rnix_0_4_1_features structopt_0_2_12_features xml_rs_0_8_0_features ];
  nodrop_0_1_12 = { features?(nodrop_0_1_12_features {}) }: nodrop_0_1_12_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.nodrop_0_1_12 or {});
  };
  nodrop_0_1_12_features = f: updateFeatures f (rec {
    nodrop_0_1_12."nodrop-union" =
      (f.nodrop_0_1_12."nodrop-union" or false) ||
      (f.nodrop_0_1_12.use_union or false) ||
      (nodrop_0_1_12.use_union or false);
    nodrop_0_1_12.default = (f.nodrop_0_1_12.default or true);
    nodrop_0_1_12.std =
      (f.nodrop_0_1_12.std or false) ||
      (f.nodrop_0_1_12.default or false) ||
      (nodrop_0_1_12.default or false);
  }) [];
  proc_macro2_0_4_20 = { features?(proc_macro2_0_4_20_features {}) }: proc_macro2_0_4_20_ {
    dependencies = mapFeatures features ([ unicode_xid_0_1_0 ]);
    features = mkFeatures (features.proc_macro2_0_4_20 or {});
  };
  proc_macro2_0_4_20_features = f: updateFeatures f (rec {
    proc_macro2_0_4_20."proc-macro" =
      (f.proc_macro2_0_4_20."proc-macro" or false) ||
      (f.proc_macro2_0_4_20.default or false) ||
      (proc_macro2_0_4_20.default or false) ||
      (f.proc_macro2_0_4_20.nightly or false) ||
      (proc_macro2_0_4_20.nightly or false);
    proc_macro2_0_4_20.default = (f.proc_macro2_0_4_20.default or true);
    unicode_xid_0_1_0.default = true;
  }) [ unicode_xid_0_1_0_features ];
  quote_0_6_8 = { features?(quote_0_6_8_features {}) }: quote_0_6_8_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_20 ]);
    features = mkFeatures (features.quote_0_6_8 or {});
  };
  quote_0_6_8_features = f: updateFeatures f (rec {
    proc_macro2_0_4_20."proc-macro" =
      (f.proc_macro2_0_4_20."proc-macro" or false) ||
      (quote_0_6_8."proc-macro" or false) ||
      (f.quote_0_6_8."proc-macro" or false);
    proc_macro2_0_4_20.default = (f.proc_macro2_0_4_20.default or false);
    quote_0_6_8."proc-macro" =
      (f.quote_0_6_8."proc-macro" or false) ||
      (f.quote_0_6_8.default or false) ||
      (quote_0_6_8.default or false);
    quote_0_6_8.default = (f.quote_0_6_8.default or true);
  }) [ proc_macro2_0_4_20_features ];
  redox_syscall_0_1_40 = { features?(redox_syscall_0_1_40_features {}) }: redox_syscall_0_1_40_ {};
  redox_syscall_0_1_40_features = f: updateFeatures f (rec {
    redox_syscall_0_1_40.default = (f.redox_syscall_0_1_40.default or true);
  }) [];
  redox_termios_0_1_1 = { features?(redox_termios_0_1_1_features {}) }: redox_termios_0_1_1_ {
    dependencies = mapFeatures features ([ redox_syscall_0_1_40 ]);
  };
  redox_termios_0_1_1_features = f: updateFeatures f (rec {
    redox_syscall_0_1_40.default = true;
    redox_termios_0_1_1.default = (f.redox_termios_0_1_1.default or true);
  }) [ redox_syscall_0_1_40_features ];
  rnix_0_4_1 = { features?(rnix_0_4_1_features {}) }: rnix_0_4_1_ {
    dependencies = mapFeatures features ([ arenatree_0_1_1 arrayvec_0_4_7 failure_0_1_3 ]
      ++ (if features.rnix_0_4_1.smol_str or false then [ smol_str_0_1_7 ] else []));
    features = mkFeatures (features.rnix_0_4_1 or {});
  };
  rnix_0_4_1_features = f: updateFeatures f (rec {
    arenatree_0_1_1.default = true;
    arrayvec_0_4_7.default = true;
    failure_0_1_3.default = true;
    rnix_0_4_1.default = (f.rnix_0_4_1.default or true);
    rnix_0_4_1.smol_str =
      (f.rnix_0_4_1.smol_str or false) ||
      (f.rnix_0_4_1.default or false) ||
      (rnix_0_4_1.default or false);
    smol_str_0_1_7.default = true;
  }) [ arenatree_0_1_1_features arrayvec_0_4_7_features failure_0_1_3_features smol_str_0_1_7_features ];
  rustc_demangle_0_1_9 = { features?(rustc_demangle_0_1_9_features {}) }: rustc_demangle_0_1_9_ {};
  rustc_demangle_0_1_9_features = f: updateFeatures f (rec {
    rustc_demangle_0_1_9.default = (f.rustc_demangle_0_1_9.default or true);
  }) [];
  smol_str_0_1_7 = { features?(smol_str_0_1_7_features {}) }: smol_str_0_1_7_ {
    dependencies = mapFeatures features ([]);
  };
  smol_str_0_1_7_features = f: updateFeatures f (rec {
    smol_str_0_1_7.default = (f.smol_str_0_1_7.default or true);
  }) [];
  strsim_0_7_0 = { features?(strsim_0_7_0_features {}) }: strsim_0_7_0_ {};
  strsim_0_7_0_features = f: updateFeatures f (rec {
    strsim_0_7_0.default = (f.strsim_0_7_0.default or true);
  }) [];
  structopt_0_2_12 = { features?(structopt_0_2_12_features {}) }: structopt_0_2_12_ {
    dependencies = mapFeatures features ([ clap_2_32_0 structopt_derive_0_2_12 ]);
    features = mkFeatures (features.structopt_0_2_12 or {});
  };
  structopt_0_2_12_features = f: updateFeatures f (rec {
    clap_2_32_0.color =
      (f.clap_2_32_0.color or false) ||
      (structopt_0_2_12.color or false) ||
      (f.structopt_0_2_12.color or false);
    clap_2_32_0.debug =
      (f.clap_2_32_0.debug or false) ||
      (structopt_0_2_12.debug or false) ||
      (f.structopt_0_2_12.debug or false);
    clap_2_32_0.default =
      (f.clap_2_32_0.default or false) ||
      (structopt_0_2_12.default or false) ||
      (f.structopt_0_2_12.default or false) ||
      false;
    clap_2_32_0.doc =
      (f.clap_2_32_0.doc or false) ||
      (structopt_0_2_12.doc or false) ||
      (f.structopt_0_2_12.doc or false);
    clap_2_32_0.lints =
      (f.clap_2_32_0.lints or false) ||
      (structopt_0_2_12.lints or false) ||
      (f.structopt_0_2_12.lints or false);
    clap_2_32_0.no_cargo =
      (f.clap_2_32_0.no_cargo or false) ||
      (structopt_0_2_12.no_cargo or false) ||
      (f.structopt_0_2_12.no_cargo or false);
    clap_2_32_0.suggestions =
      (f.clap_2_32_0.suggestions or false) ||
      (structopt_0_2_12.suggestions or false) ||
      (f.structopt_0_2_12.suggestions or false);
    clap_2_32_0.wrap_help =
      (f.clap_2_32_0.wrap_help or false) ||
      (structopt_0_2_12.wrap_help or false) ||
      (f.structopt_0_2_12.wrap_help or false);
    clap_2_32_0.yaml =
      (f.clap_2_32_0.yaml or false) ||
      (structopt_0_2_12.yaml or false) ||
      (f.structopt_0_2_12.yaml or false);
    structopt_0_2_12.default = (f.structopt_0_2_12.default or true);
    structopt_derive_0_2_12.default = true;
    structopt_derive_0_2_12.nightly =
      (f.structopt_derive_0_2_12.nightly or false) ||
      (structopt_0_2_12.nightly or false) ||
      (f.structopt_0_2_12.nightly or false);
  }) [ clap_2_32_0_features structopt_derive_0_2_12_features ];
  structopt_derive_0_2_12 = { features?(structopt_derive_0_2_12_features {}) }: structopt_derive_0_2_12_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_20 quote_0_6_8 syn_0_15_15 ]);
    features = mkFeatures (features.structopt_derive_0_2_12 or {});
  };
  structopt_derive_0_2_12_features = f: updateFeatures f (rec {
    proc_macro2_0_4_20.default = true;
    proc_macro2_0_4_20.nightly =
      (f.proc_macro2_0_4_20.nightly or false) ||
      (structopt_derive_0_2_12.nightly or false) ||
      (f.structopt_derive_0_2_12.nightly or false);
    quote_0_6_8.default = true;
    structopt_derive_0_2_12.default = (f.structopt_derive_0_2_12.default or true);
    syn_0_15_15.default = true;
  }) [ proc_macro2_0_4_20_features quote_0_6_8_features syn_0_15_15_features ];
  syn_0_15_15 = { features?(syn_0_15_15_features {}) }: syn_0_15_15_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_20 unicode_xid_0_1_0 ]
      ++ (if features.syn_0_15_15.quote or false then [ quote_0_6_8 ] else []));
    features = mkFeatures (features.syn_0_15_15 or {});
  };
  syn_0_15_15_features = f: updateFeatures f (rec {
    proc_macro2_0_4_20."proc-macro" =
      (f.proc_macro2_0_4_20."proc-macro" or false) ||
      (syn_0_15_15."proc-macro" or false) ||
      (f.syn_0_15_15."proc-macro" or false);
    proc_macro2_0_4_20.default = (f.proc_macro2_0_4_20.default or false);
    quote_0_6_8."proc-macro" =
      (f.quote_0_6_8."proc-macro" or false) ||
      (syn_0_15_15."proc-macro" or false) ||
      (f.syn_0_15_15."proc-macro" or false);
    quote_0_6_8.default = (f.quote_0_6_8.default or false);
    syn_0_15_15."clone-impls" =
      (f.syn_0_15_15."clone-impls" or false) ||
      (f.syn_0_15_15.default or false) ||
      (syn_0_15_15.default or false);
    syn_0_15_15."proc-macro" =
      (f.syn_0_15_15."proc-macro" or false) ||
      (f.syn_0_15_15.default or false) ||
      (syn_0_15_15.default or false);
    syn_0_15_15.default = (f.syn_0_15_15.default or true);
    syn_0_15_15.derive =
      (f.syn_0_15_15.derive or false) ||
      (f.syn_0_15_15.default or false) ||
      (syn_0_15_15.default or false);
    syn_0_15_15.parsing =
      (f.syn_0_15_15.parsing or false) ||
      (f.syn_0_15_15.default or false) ||
      (syn_0_15_15.default or false);
    syn_0_15_15.printing =
      (f.syn_0_15_15.printing or false) ||
      (f.syn_0_15_15.default or false) ||
      (syn_0_15_15.default or false);
    syn_0_15_15.quote =
      (f.syn_0_15_15.quote or false) ||
      (f.syn_0_15_15.printing or false) ||
      (syn_0_15_15.printing or false);
    unicode_xid_0_1_0.default = true;
  }) [ proc_macro2_0_4_20_features quote_0_6_8_features unicode_xid_0_1_0_features ];
  synstructure_0_10_1 = { features?(synstructure_0_10_1_features {}) }: synstructure_0_10_1_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_20 quote_0_6_8 syn_0_15_15 unicode_xid_0_1_0 ]);
    features = mkFeatures (features.synstructure_0_10_1 or {});
  };
  synstructure_0_10_1_features = f: updateFeatures f (rec {
    proc_macro2_0_4_20.default = true;
    quote_0_6_8.default = true;
    syn_0_15_15."extra-traits" = true;
    syn_0_15_15.default = true;
    syn_0_15_15.visit = true;
    synstructure_0_10_1.default = (f.synstructure_0_10_1.default or true);
    unicode_xid_0_1_0.default = true;
  }) [ proc_macro2_0_4_20_features quote_0_6_8_features syn_0_15_15_features unicode_xid_0_1_0_features ];
  termion_1_5_1 = { features?(termion_1_5_1_features {}) }: termion_1_5_1_ {
    dependencies = (if !(kernel == "redox") then mapFeatures features ([ libc_0_2_43 ]) else [])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_40 redox_termios_0_1_1 ]) else []);
  };
  termion_1_5_1_features = f: updateFeatures f (rec {
    libc_0_2_43.default = true;
    redox_syscall_0_1_40.default = true;
    redox_termios_0_1_1.default = true;
    termion_1_5_1.default = (f.termion_1_5_1.default or true);
  }) [ libc_0_2_43_features redox_syscall_0_1_40_features redox_termios_0_1_1_features ];
  textwrap_0_10_0 = { features?(textwrap_0_10_0_features {}) }: textwrap_0_10_0_ {
    dependencies = mapFeatures features ([ unicode_width_0_1_5 ]);
  };
  textwrap_0_10_0_features = f: updateFeatures f (rec {
    textwrap_0_10_0.default = (f.textwrap_0_10_0.default or true);
    unicode_width_0_1_5.default = true;
  }) [ unicode_width_0_1_5_features ];
  unicode_width_0_1_5 = { features?(unicode_width_0_1_5_features {}) }: unicode_width_0_1_5_ {
    features = mkFeatures (features.unicode_width_0_1_5 or {});
  };
  unicode_width_0_1_5_features = f: updateFeatures f (rec {
    unicode_width_0_1_5.default = (f.unicode_width_0_1_5.default or true);
  }) [];
  unicode_xid_0_1_0 = { features?(unicode_xid_0_1_0_features {}) }: unicode_xid_0_1_0_ {
    features = mkFeatures (features.unicode_xid_0_1_0 or {});
  };
  unicode_xid_0_1_0_features = f: updateFeatures f (rec {
    unicode_xid_0_1_0.default = (f.unicode_xid_0_1_0.default or true);
  }) [];
  vec_map_0_8_1 = { features?(vec_map_0_8_1_features {}) }: vec_map_0_8_1_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.vec_map_0_8_1 or {});
  };
  vec_map_0_8_1_features = f: updateFeatures f (rec {
    vec_map_0_8_1.default = (f.vec_map_0_8_1.default or true);
    vec_map_0_8_1.serde =
      (f.vec_map_0_8_1.serde or false) ||
      (f.vec_map_0_8_1.eders or false) ||
      (vec_map_0_8_1.eders or false);
  }) [];
  winapi_0_3_6 = { features?(winapi_0_3_6_features {}) }: winapi_0_3_6_ {
    dependencies = (if kernel == "i686-pc-windows-gnu" then mapFeatures features ([ winapi_i686_pc_windows_gnu_0_4_0 ]) else [])
      ++ (if kernel == "x86_64-pc-windows-gnu" then mapFeatures features ([ winapi_x86_64_pc_windows_gnu_0_4_0 ]) else []);
    features = mkFeatures (features.winapi_0_3_6 or {});
  };
  winapi_0_3_6_features = f: updateFeatures f (rec {
    winapi_0_3_6.default = (f.winapi_0_3_6.default or true);
    winapi_i686_pc_windows_gnu_0_4_0.default = true;
    winapi_x86_64_pc_windows_gnu_0_4_0.default = true;
  }) [ winapi_i686_pc_windows_gnu_0_4_0_features winapi_x86_64_pc_windows_gnu_0_4_0_features ];
  winapi_i686_pc_windows_gnu_0_4_0 = { features?(winapi_i686_pc_windows_gnu_0_4_0_features {}) }: winapi_i686_pc_windows_gnu_0_4_0_ {};
  winapi_i686_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_i686_pc_windows_gnu_0_4_0.default = (f.winapi_i686_pc_windows_gnu_0_4_0.default or true);
  }) [];
  winapi_x86_64_pc_windows_gnu_0_4_0 = { features?(winapi_x86_64_pc_windows_gnu_0_4_0_features {}) }: winapi_x86_64_pc_windows_gnu_0_4_0_ {};
  winapi_x86_64_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_x86_64_pc_windows_gnu_0_4_0.default = (f.winapi_x86_64_pc_windows_gnu_0_4_0.default or true);
  }) [];
  xml_rs_0_8_0 = { features?(xml_rs_0_8_0_features {}) }: xml_rs_0_8_0_ {};
  xml_rs_0_8_0_features = f: updateFeatures f (rec {
    xml_rs_0_8_0.default = (f.xml_rs_0_8_0.default or true);
  }) [];
}
