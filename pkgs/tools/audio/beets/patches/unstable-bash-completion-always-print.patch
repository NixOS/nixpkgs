diff --git a/beets/ui/commands.py b/beets/ui/commands.py
index 1377ad0c..e178eeae 100755
--- a/beets/ui/commands.py
+++ b/beets/ui/commands.py
@@ -1831,20 +1831,6 @@ default_commands.append(config_cmd)
 def print_completion(*args):
     for line in completion_script(default_commands + plugins.commands()):
         print_(line, end='')
-    if not any(os.path.isfile(syspath(p)) for p in BASH_COMPLETION_PATHS):
-        log.warning('Warning: Unable to find the bash-completion package. '
-                    'Command line completion might not work.')
-
-
-BASH_COMPLETION_PATHS = [
-    b'/etc/bash_completion',
-    b'/usr/share/bash-completion/bash_completion',
-    b'/usr/local/share/bash-completion/bash_completion',
-    # SmartOS
-    b'/opt/local/share/bash-completion/bash_completion',
-    # Homebrew (before bash-completion2)
-    b'/usr/local/etc/bash_completion',
-]
 
 
 def completion_script(commands):
diff --git a/test/test_ui.py b/test/test_ui.py
index f66917dc..f3d934c6 100644
--- a/test/test_ui.py
+++ b/test/test_ui.py
@@ -1310,12 +1310,7 @@ class CompletionTest(_common.TestCase, TestHelper):
                                   stdout=subprocess.PIPE, env=env)
 
         # Load bash_completion library.
-        for path in commands.BASH_COMPLETION_PATHS:
-            if os.path.exists(syspath(path)):
-                bash_completion = path
-                break
-        else:
-            self.skipTest('bash-completion script not found')
+        self.skipTest('bash-completion script not found')
         try:
             with open(util.syspath(bash_completion), 'rb') as f:
                 tester.stdin.writelines(f)
