# Generated by carnix 0.10.0: carnix generate-nix
{ lib, buildPlatform, buildRustCrate, buildRustCrateHelpers, cratesIO, fetchgit }:
with buildRustCrateHelpers;
let inherit (lib.lists) fold;
    inherit (lib.attrsets) recursiveUpdate;
in
rec {
  crates = cratesIO;
  svg_tikz = crates.crates.svg_tikz."0.2.0" deps;
  __all = [ (svg_tikz {}) ];
  deps.aho_corasick."0.7.3" = {
    memchr = "2.2.0";
  };
  deps.ansi_term."0.11.0" = {
    winapi = "0.3.6";
  };
  deps.atty."0.2.11" = {
    termion = "1.5.1";
    libc = "0.2.51";
    winapi = "0.3.6";
  };
  deps.autocfg."0.1.2" = {};
  deps.backtrace."0.3.15" = {
    cfg_if = "0.1.7";
    rustc_demangle = "0.1.13";
    autocfg = "0.1.2";
    backtrace_sys = "0.1.28";
    libc = "0.2.51";
    winapi = "0.3.6";
  };
  deps.backtrace_sys."0.1.28" = {
    libc = "0.2.51";
    cc = "1.0.35";
  };
  deps.bitflags."1.0.4" = {};
  deps.cc."1.0.35" = {};
  deps.cfg_if."0.1.7" = {};
  deps.clap."2.33.0" = {
    atty = "0.2.11";
    bitflags = "1.0.4";
    strsim = "0.8.0";
    textwrap = "0.11.0";
    unicode_width = "0.1.5";
    vec_map = "0.8.1";
    ansi_term = "0.11.0";
  };
  deps.env_logger."0.5.13" = {
    atty = "0.2.11";
    humantime = "1.2.0";
    log = "0.4.6";
    regex = "1.1.5";
    termcolor = "1.0.4";
  };
  deps.failure."0.1.5" = {
    backtrace = "0.3.15";
    failure_derive = "0.1.5";
  };
  deps.failure_derive."0.1.5" = {
    proc_macro2 = "0.4.27";
    quote = "0.6.11";
    syn = "0.15.30";
    synstructure = "0.10.1";
  };
  deps.hex."0.3.2" = {};
  deps.humantime."1.2.0" = {
    quick_error = "1.2.2";
  };
  deps.lazy_static."1.3.0" = {};
  deps.libc."0.2.51" = {};
  deps.log."0.4.6" = {
    cfg_if = "0.1.7";
  };
  deps.memchr."2.2.0" = {};
  deps.proc_macro2."0.4.27" = {
    unicode_xid = "0.1.0";
  };
  deps.quick_error."1.2.2" = {};
  deps.quote."0.6.11" = {
    proc_macro2 = "0.4.27";
  };
  deps.redox_syscall."0.1.52" = {};
  deps.redox_termios."0.1.1" = {
    redox_syscall = "0.1.52";
  };
  deps.regex."1.1.5" = {
    aho_corasick = "0.7.3";
    memchr = "2.2.0";
    regex_syntax = "0.6.6";
    thread_local = "0.3.6";
    utf8_ranges = "1.0.2";
  };
  deps.regex_syntax."0.6.6" = {
    ucd_util = "0.1.3";
  };
  deps.rustc_demangle."0.1.13" = {};
  deps.strsim."0.8.0" = {};
  deps.svg."0.5.12" = {};
  deps.svg_tikz."0.2.0" = {
    clap = "2.33.0";
    env_logger = "0.5.13";
    failure = "0.1.5";
    hex = "0.3.2";
    log = "0.4.6";
    regex = "1.1.5";
    svg = "0.5.12";
  };
  deps.syn."0.15.30" = {
    proc_macro2 = "0.4.27";
    quote = "0.6.11";
    unicode_xid = "0.1.0";
  };
  deps.synstructure."0.10.1" = {
    proc_macro2 = "0.4.27";
    quote = "0.6.11";
    syn = "0.15.30";
    unicode_xid = "0.1.0";
  };
  deps.termcolor."1.0.4" = {
    wincolor = "1.0.1";
  };
  deps.termion."1.5.1" = {
    libc = "0.2.51";
    redox_syscall = "0.1.52";
    redox_termios = "0.1.1";
  };
  deps.textwrap."0.11.0" = {
    unicode_width = "0.1.5";
  };
  deps.thread_local."0.3.6" = {
    lazy_static = "1.3.0";
  };
  deps.ucd_util."0.1.3" = {};
  deps.unicode_width."0.1.5" = {};
  deps.unicode_xid."0.1.0" = {};
  deps.utf8_ranges."1.0.2" = {};
  deps.vec_map."0.8.1" = {};
  deps.winapi."0.3.6" = {
    winapi_i686_pc_windows_gnu = "0.4.0";
    winapi_x86_64_pc_windows_gnu = "0.4.0";
  };
  deps.winapi_i686_pc_windows_gnu."0.4.0" = {};
  deps.winapi_util."0.1.2" = {
    winapi = "0.3.6";
  };
  deps.winapi_x86_64_pc_windows_gnu."0.4.0" = {};
  deps.wincolor."1.0.1" = {
    winapi = "0.3.6";
    winapi_util = "0.1.2";
  };
}
