diff --git a/homeassistant/components/ffmpeg/__init__.py b/homeassistant/components/ffmpeg/__init__.py
index 74c826f47d..91f359da2a 100644
--- a/homeassistant/components/ffmpeg/__init__.py
+++ b/homeassistant/components/ffmpeg/__init__.py
@@ -40,7 +40,7 @@ CONF_FFMPEG_BIN = "ffmpeg_bin"
 CONF_EXTRA_ARGUMENTS = "extra_arguments"
 CONF_OUTPUT = "output"
 
-DEFAULT_BINARY = "ffmpeg"
+DEFAULT_BINARY = "@ffmpeg@"
 
 CONFIG_SCHEMA = vol.Schema(
     {
diff --git a/tests/components/ffmpeg/test_init.py b/tests/components/ffmpeg/test_init.py
index e1730ffdab..e9cd7934fd 100644
--- a/tests/components/ffmpeg/test_init.py
+++ b/tests/components/ffmpeg/test_init.py
@@ -87,7 +87,7 @@ class TestFFmpegSetup:
         with assert_setup_component(1):
             setup_component(self.hass, ffmpeg.DOMAIN, {ffmpeg.DOMAIN: {}})
 
-        assert self.hass.data[ffmpeg.DATA_FFMPEG].binary == "ffmpeg"
+        assert self.hass.data[ffmpeg.DATA_FFMPEG].binary == "@ffmpeg@"
 
     def test_setup_component_test_service(self):
         """Set up ffmpeg component test services."""
diff --git a/tests/components/ffmpeg/test_sensor.py b/tests/components/ffmpeg/test_sensor.py
index a6c9c1f441..f13091da1a 100644
--- a/tests/components/ffmpeg/test_sensor.py
+++ b/tests/components/ffmpeg/test_sensor.py
@@ -27,7 +27,7 @@ class TestFFmpegNoiseSetup:
             setup_component(self.hass, "binary_sensor", self.config)
         self.hass.block_till_done()
 
-        assert self.hass.data["ffmpeg"].binary == "ffmpeg"
+        assert self.hass.data["ffmpeg"].binary == "@ffmpeg@"
         assert self.hass.states.get("binary_sensor.ffmpeg_noise") is not None
 
     @patch("haffmpeg.sensor.SensorNoise.open_sensor", return_value=mock_coro())
@@ -37,7 +37,7 @@ class TestFFmpegNoiseSetup:
             setup_component(self.hass, "binary_sensor", self.config)
         self.hass.block_till_done()
 
-        assert self.hass.data["ffmpeg"].binary == "ffmpeg"
+        assert self.hass.data["ffmpeg"].binary == "@ffmpeg@"
         assert self.hass.states.get("binary_sensor.ffmpeg_noise") is not None
 
         self.hass.start()
@@ -53,7 +53,7 @@ class TestFFmpegNoiseSetup:
             setup_component(self.hass, "binary_sensor", self.config)
         self.hass.block_till_done()
 
-        assert self.hass.data["ffmpeg"].binary == "ffmpeg"
+        assert self.hass.data["ffmpeg"].binary == "@ffmpeg@"
         assert self.hass.states.get("binary_sensor.ffmpeg_noise") is not None
 
         self.hass.start()
@@ -89,7 +89,7 @@ class TestFFmpegMotionSetup:
             setup_component(self.hass, "binary_sensor", self.config)
         self.hass.block_till_done()
 
-        assert self.hass.data["ffmpeg"].binary == "ffmpeg"
+        assert self.hass.data["ffmpeg"].binary == "@ffmpeg@"
         assert self.hass.states.get("binary_sensor.ffmpeg_motion") is not None
 
     @patch("haffmpeg.sensor.SensorMotion.open_sensor", return_value=mock_coro())
@@ -99,7 +99,7 @@ class TestFFmpegMotionSetup:
             setup_component(self.hass, "binary_sensor", self.config)
         self.hass.block_till_done()
 
-        assert self.hass.data["ffmpeg"].binary == "ffmpeg"
+        assert self.hass.data["ffmpeg"].binary == "@ffmpeg@"
         assert self.hass.states.get("binary_sensor.ffmpeg_motion") is not None
 
         self.hass.start()
@@ -115,7 +115,7 @@ class TestFFmpegMotionSetup:
             setup_component(self.hass, "binary_sensor", self.config)
         self.hass.block_till_done()
 
-        assert self.hass.data["ffmpeg"].binary == "ffmpeg"
+        assert self.hass.data["ffmpeg"].binary == "@ffmpeg@"
         assert self.hass.states.get("binary_sensor.ffmpeg_motion") is not None
 
         self.hass.start()
