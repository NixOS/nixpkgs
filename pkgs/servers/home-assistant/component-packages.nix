# Generated by parse-requirements.py
# Do not edit!

{
  version = "0.96.2";
  components = {
    "abode" = ps: with ps; [  ];
    "acer_projector" = ps: with ps; [ pyserial ];
    "actiontec" = ps: with ps; [  ];
    "adguard" = ps: with ps; [  ];
    "ads" = ps: with ps; [  ];
    "aftership" = ps: with ps; [  ];
    "air_quality" = ps: with ps; [  ];
    "airvisual" = ps: with ps; [ pyairvisual ];
    "aladdin_connect" = ps: with ps; [  ];
    "alarm_control_panel" = ps: with ps; [  ];
    "alarmdecoder" = ps: with ps; [  ];
    "alarmdotcom" = ps: with ps; [  ];
    "alert" = ps: with ps; [  ];
    "alexa" = ps: with ps; [ aiohttp-cors ];
    "alpha_vantage" = ps: with ps; [  ];
    "amazon_polly" = ps: with ps; [ boto3 ];
    "ambiclimate" = ps: with ps; [  ];
    "ambient_station" = ps: with ps; [  ];
    "amcrest" = ps: with ps; [ ha-ffmpeg ];
    "ampio" = ps: with ps; [  ];
    "android_ip_webcam" = ps: with ps; [  ];
    "androidtv" = ps: with ps; [  ];
    "anel_pwrctrl" = ps: with ps; [  ];
    "anthemav" = ps: with ps; [  ];
    "apcupsd" = ps: with ps; [  ];
    "api" = ps: with ps; [ aiohttp-cors ];
    "apns" = ps: with ps; [  ];
    "apple_tv" = ps: with ps; [ pyatv ];
    "aprs" = ps: with ps; [  ];
    "aqualogic" = ps: with ps; [  ];
    "aquostv" = ps: with ps; [  ];
    "arcam_fmj" = ps: with ps; [  ];
    "arduino" = ps: with ps; [  ];
    "arest" = ps: with ps; [  ];
    "arlo" = ps: with ps; [ ha-ffmpeg ];
    "aruba" = ps: with ps; [ pexpect ];
    "arwn" = ps: with ps; [ aiohttp-cors hbmqtt paho-mqtt ];
    "asterisk_cdr" = ps: with ps; [  ];
    "asterisk_mbox" = ps: with ps; [  ];
    "asuswrt" = ps: with ps; [  ];
    "august" = ps: with ps; [  ];
    "aurora" = ps: with ps; [  ];
    "aurora_abb_powerone" = ps: with ps; [  ];
    "auth" = ps: with ps; [ aiohttp-cors ];
    "automatic" = ps: with ps; [ aiohttp-cors ];
    "automation" = ps: with ps; [ aiohttp-cors ];
    "avion" = ps: with ps; [  ];
    "awair" = ps: with ps; [  ];
    "aws" = ps: with ps; [  ];
    "axis" = ps: with ps; [  ];
    "azure_event_hub" = ps: with ps; [  ];
    "baidu" = ps: with ps; [  ];
    "bayesian" = ps: with ps; [  ];
    "bbb_gpio" = ps: with ps; [  ];
    "bbox" = ps: with ps; [  ];
    "bh1750" = ps: with ps; [  ];
    "binary_sensor" = ps: with ps; [  ];
    "bitcoin" = ps: with ps; [  ];
    "bizkaibus" = ps: with ps; [  ];
    "blackbird" = ps: with ps; [  ];
    "blink" = ps: with ps; [  ];
    "blinksticklight" = ps: with ps; [ BlinkStick ];
    "blinkt" = ps: with ps; [  ];
    "blockchain" = ps: with ps; [  ];
    "bloomsky" = ps: with ps; [  ];
    "bluesound" = ps: with ps; [ xmltodict ];
    "bluetooth_le_tracker" = ps: with ps; [  ];
    "bluetooth_tracker" = ps: with ps; [ bt_proximity ];
    "bme280" = ps: with ps; [  ];
    "bme680" = ps: with ps; [  ];
    "bmw_connected_drive" = ps: with ps; [  ];
    "bom" = ps: with ps; [  ];
    "braviatv" = ps: with ps; [  ];
    "broadlink" = ps: with ps; [ broadlink ];
    "brottsplatskartan" = ps: with ps; [  ];
    "browser" = ps: with ps; [  ];
    "brunt" = ps: with ps; [  ];
    "bt_home_hub_5" = ps: with ps; [  ];
    "bt_smarthub" = ps: with ps; [  ];
    "buienradar" = ps: with ps; [  ];
    "caldav" = ps: with ps; [ caldav ];
    "calendar" = ps: with ps; [ aiohttp-cors ];
    "camera" = ps: with ps; [ aiohttp-cors ];
    "canary" = ps: with ps; [ ha-ffmpeg ];
    "cast" = ps: with ps; [ PyChromecast ];
    "cert_expiry" = ps: with ps; [  ];
    "channels" = ps: with ps; [  ];
    "cisco_ios" = ps: with ps; [ pexpect ];
    "cisco_mobility_express" = ps: with ps; [  ];
    "cisco_webex_teams" = ps: with ps; [  ];
    "ciscospark" = ps: with ps; [  ];
    "citybikes" = ps: with ps; [  ];
    "clementine" = ps: with ps; [  ];
    "clickatell" = ps: with ps; [  ];
    "clicksend" = ps: with ps; [  ];
    "clicksend_tts" = ps: with ps; [  ];
    "climate" = ps: with ps; [  ];
    "cloud" = ps: with ps; [ aiohttp-cors ];
    "cloudflare" = ps: with ps; [  ];
    "cmus" = ps: with ps; [  ];
    "co2signal" = ps: with ps; [  ];
    "coinbase" = ps: with ps; [  ];
    "coinmarketcap" = ps: with ps; [ coinmarketcap ];
    "comed_hourly_pricing" = ps: with ps; [  ];
    "comfoconnect" = ps: with ps; [  ];
    "command_line" = ps: with ps; [  ];
    "concord232" = ps: with ps; [  ];
    "config" = ps: with ps; [ aiohttp-cors ];
    "configurator" = ps: with ps; [  ];
    "conversation" = ps: with ps; [ aiohttp-cors ];
    "coolmaster" = ps: with ps; [  ];
    "counter" = ps: with ps; [  ];
    "cover" = ps: with ps; [  ];
    "cppm_tracker" = ps: with ps; [  ];
    "cpuspeed" = ps: with ps; [ py-cpuinfo ];
    "crimereports" = ps: with ps; [  ];
    "cups" = ps: with ps; [ pycups ];
    "currencylayer" = ps: with ps; [  ];
    "daikin" = ps: with ps; [  ];
    "danfoss_air" = ps: with ps; [  ];
    "darksky" = ps: with ps; [ python-forecastio ];
    "datadog" = ps: with ps; [ datadog ];
    "ddwrt" = ps: with ps; [  ];
    "deconz" = ps: with ps; [  ];
    "decora" = ps: with ps; [  ];
    "decora_wifi" = ps: with ps; [  ];
    "default_config" = ps: with ps; [ pynacl aiohttp-cors distro netdisco sqlalchemy zeroconf ];
    "deluge" = ps: with ps; [ deluge-client ];
    "demo" = ps: with ps; [ aiohttp-cors ];
    "denon" = ps: with ps; [  ];
    "denonavr" = ps: with ps; [  ];
    "deutsche_bahn" = ps: with ps; [  ];
    "device_automation" = ps: with ps; [ aiohttp-cors ];
    "device_sun_light_trigger" = ps: with ps; [  ];
    "device_tracker" = ps: with ps; [  ];
    "dht" = ps: with ps; [  ];
    "dialogflow" = ps: with ps; [ aiohttp-cors ];
    "digital_ocean" = ps: with ps; [ digital-ocean ];
    "digitalloggers" = ps: with ps; [  ];
    "directv" = ps: with ps; [  ];
    "discogs" = ps: with ps; [ discogs_client ];
    "discord" = ps: with ps; [ discordpy ];
    "discovery" = ps: with ps; [ netdisco ];
    "dlib_face_detect" = ps: with ps; [ face_recognition ];
    "dlib_face_identify" = ps: with ps; [ face_recognition ];
    "dlink" = ps: with ps; [  ];
    "dlna_dmr" = ps: with ps; [  ];
    "dnsip" = ps: with ps; [ aiodns ];
    "dominos" = ps: with ps; [ aiohttp-cors ];
    "doorbird" = ps: with ps; [  ];
    "dovado" = ps: with ps; [  ];
    "downloader" = ps: with ps; [  ];
    "dsmr" = ps: with ps; [  ];
    "dte_energy_bridge" = ps: with ps; [  ];
    "dublin_bus_transport" = ps: with ps; [  ];
    "duckdns" = ps: with ps; [  ];
    "duke_energy" = ps: with ps; [  ];
    "dunehd" = ps: with ps; [  ];
    "dwd_weather_warnings" = ps: with ps; [  ];
    "dweet" = ps: with ps; [  ];
    "dyson" = ps: with ps; [  ];
    "ebox" = ps: with ps; [  ];
    "ebusd" = ps: with ps; [  ];
    "ecoal_boiler" = ps: with ps; [  ];
    "ecobee" = ps: with ps; [  ];
    "econet" = ps: with ps; [  ];
    "ecovacs" = ps: with ps; [  ];
    "eddystone_temperature" = ps: with ps; [ construct ];
    "edimax" = ps: with ps; [  ];
    "edp_redy" = ps: with ps; [  ];
    "ee_brightbox" = ps: with ps; [  ];
    "efergy" = ps: with ps; [  ];
    "egardia" = ps: with ps; [  ];
    "eight_sleep" = ps: with ps; [  ];
    "eliqonline" = ps: with ps; [  ];
    "elkm1" = ps: with ps; [  ];
    "elv" = ps: with ps; [  ];
    "emby" = ps: with ps; [  ];
    "emoncms" = ps: with ps; [  ];
    "emoncms_history" = ps: with ps; [  ];
    "emulated_hue" = ps: with ps; [ aiohttp-cors ];
    "emulated_roku" = ps: with ps; [  ];
    "enigma2" = ps: with ps; [  ];
    "enocean" = ps: with ps; [  ];
    "enphase_envoy" = ps: with ps; [  ];
    "entur_public_transport" = ps: with ps; [  ];
    "environment_canada" = ps: with ps; [  ];
    "envirophat" = ps: with ps; [  ];
    "envisalink" = ps: with ps; [  ];
    "ephember" = ps: with ps; [  ];
    "epson" = ps: with ps; [  ];
    "epsonworkforce" = ps: with ps; [  ];
    "eq3btsmart" = ps: with ps; [ construct ];
    "esphome" = ps: with ps; [ aioesphomeapi ];
    "essent" = ps: with ps; [  ];
    "etherscan" = ps: with ps; [  ];
    "eufy" = ps: with ps; [  ];
    "everlights" = ps: with ps; [  ];
    "evohome" = ps: with ps; [  ];
    "facebook" = ps: with ps; [  ];
    "facebox" = ps: with ps; [  ];
    "fail2ban" = ps: with ps; [  ];
    "familyhub" = ps: with ps; [  ];
    "fan" = ps: with ps; [  ];
    "fastdotcom" = ps: with ps; [  ];
    "fedex" = ps: with ps; [  ];
    "feedreader" = ps: with ps; [  ];
    "ffmpeg" = ps: with ps; [ ha-ffmpeg ];
    "ffmpeg_motion" = ps: with ps; [ ha-ffmpeg ];
    "ffmpeg_noise" = ps: with ps; [ ha-ffmpeg ];
    "fibaro" = ps: with ps; [  ];
    "fido" = ps: with ps; [  ];
    "file" = ps: with ps; [  ];
    "filesize" = ps: with ps; [  ];
    "filter" = ps: with ps; [  ];
    "fints" = ps: with ps; [ fints ];
    "fitbit" = ps: with ps; [ aiohttp-cors fitbit ];
    "fixer" = ps: with ps; [  ];
    "flexit" = ps: with ps; [  ];
    "flic" = ps: with ps; [  ];
    "flock" = ps: with ps; [  ];
    "flunearyou" = ps: with ps; [  ];
    "flux" = ps: with ps; [  ];
    "flux_led" = ps: with ps; [  ];
    "folder" = ps: with ps; [  ];
    "folder_watcher" = ps: with ps; [ watchdog ];
    "foobot" = ps: with ps; [  ];
    "foscam" = ps: with ps; [  ];
    "foursquare" = ps: with ps; [ aiohttp-cors ];
    "free_mobile" = ps: with ps; [  ];
    "freebox" = ps: with ps; [  ];
    "freedns" = ps: with ps; [  ];
    "fritz" = ps: with ps; [ fritzconnection ];
    "fritzbox" = ps: with ps; [  ];
    "fritzbox_callmonitor" = ps: with ps; [ fritzconnection ];
    "fritzbox_netmonitor" = ps: with ps; [ fritzconnection ];
    "fritzdect" = ps: with ps; [  ];
    "fronius" = ps: with ps; [  ];
    "frontend" = ps: with ps; [ aiohttp-cors ];
    "frontier_silicon" = ps: with ps; [  ];
    "futurenow" = ps: with ps; [  ];
    "garadget" = ps: with ps; [  ];
    "gc100" = ps: with ps; [  ];
    "gearbest" = ps: with ps; [  ];
    "geizhals" = ps: with ps; [  ];
    "generic" = ps: with ps; [  ];
    "generic_thermostat" = ps: with ps; [  ];
    "geniushub" = ps: with ps; [  ];
    "geo_json_events" = ps: with ps; [  ];
    "geo_location" = ps: with ps; [  ];
    "geo_rss_events" = ps: with ps; [  ];
    "geofency" = ps: with ps; [ aiohttp-cors ];
    "github" = ps: with ps; [ PyGithub ];
    "gitlab_ci" = ps: with ps; [ python-gitlab ];
    "gitter" = ps: with ps; [  ];
    "glances" = ps: with ps; [  ];
    "gntp" = ps: with ps; [  ];
    "goalfeed" = ps: with ps; [  ];
    "gogogate2" = ps: with ps; [  ];
    "google" = ps: with ps; [ google_api_python_client httplib2 oauth2client ];
    "google_assistant" = ps: with ps; [ aiohttp-cors ];
    "google_cloud" = ps: with ps; [ google_cloud_texttospeech ];
    "google_domains" = ps: with ps; [  ];
    "google_maps" = ps: with ps; [  ];
    "google_pubsub" = ps: with ps; [ google_cloud_pubsub ];
    "google_translate" = ps: with ps; [ gtts-token ];
    "google_travel_time" = ps: with ps; [  ];
    "google_wifi" = ps: with ps; [  ];
    "googlehome" = ps: with ps; [  ];
    "gpmdp" = ps: with ps; [ websocket_client ];
    "gpsd" = ps: with ps; [  ];
    "gpslogger" = ps: with ps; [ aiohttp-cors ];
    "graphite" = ps: with ps; [  ];
    "greeneye_monitor" = ps: with ps; [  ];
    "greenwave" = ps: with ps; [  ];
    "group" = ps: with ps; [  ];
    "gstreamer" = ps: with ps; [  ];
    "gtfs" = ps: with ps; [  ];
    "gtt" = ps: with ps; [  ];
    "habitica" = ps: with ps; [  ];
    "hangouts" = ps: with ps; [  ];
    "harman_kardon_avr" = ps: with ps; [  ];
    "harmony" = ps: with ps; [  ];
    "hassio" = ps: with ps; [ aiohttp-cors ];
    "haveibeenpwned" = ps: with ps; [  ];
    "hddtemp" = ps: with ps; [  ];
    "hdmi_cec" = ps: with ps; [  ];
    "heatmiser" = ps: with ps; [  ];
    "heos" = ps: with ps; [  ];
    "hikvision" = ps: with ps; [  ];
    "hikvisioncam" = ps: with ps; [  ];
    "hipchat" = ps: with ps; [  ];
    "history" = ps: with ps; [ aiohttp-cors sqlalchemy ];
    "history_graph" = ps: with ps; [ aiohttp-cors sqlalchemy ];
    "history_stats" = ps: with ps; [ aiohttp-cors sqlalchemy ];
    "hitron_coda" = ps: with ps; [  ];
    "hive" = ps: with ps; [  ];
    "hlk_sw16" = ps: with ps; [  ];
    "homeassistant" = ps: with ps; [  ];
    "homekit" = ps: with ps; [  ];
    "homekit_controller" = ps: with ps; [  ];
    "homematic" = ps: with ps; [ pyhomematic ];
    "homematicip_cloud" = ps: with ps; [  ];
    "homeworks" = ps: with ps; [  ];
    "honeywell" = ps: with ps; [  ];
    "hook" = ps: with ps; [  ];
    "horizon" = ps: with ps; [  ];
    "hp_ilo" = ps: with ps; [  ];
    "html5" = ps: with ps; [ aiohttp-cors pywebpush ];
    "http" = ps: with ps; [ aiohttp-cors ];
    "htu21d" = ps: with ps; [  ];
    "huawei_lte" = ps: with ps; [  ];
    "huawei_router" = ps: with ps; [  ];
    "hue" = ps: with ps; [ aiohue ];
    "hunterdouglas_powerview" = ps: with ps; [  ];
    "hydrawise" = ps: with ps; [  ];
    "hydroquebec" = ps: with ps; [  ];
    "hyperion" = ps: with ps; [  ];
    "ialarm" = ps: with ps; [  ];
    "icloud" = ps: with ps; [  ];
    "idteck_prox" = ps: with ps; [  ];
    "ifttt" = ps: with ps; [ aiohttp-cors pyfttt ];
    "iglo" = ps: with ps; [  ];
    "ign_sismologia" = ps: with ps; [  ];
    "ihc" = ps: with ps; [ defusedxml ];
    "image_processing" = ps: with ps; [ aiohttp-cors ];
    "imap" = ps: with ps; [  ];
    "imap_email_content" = ps: with ps; [  ];
    "incomfort" = ps: with ps; [  ];
    "influxdb" = ps: with ps; [ influxdb ];
    "input_boolean" = ps: with ps; [  ];
    "input_datetime" = ps: with ps; [  ];
    "input_number" = ps: with ps; [  ];
    "input_select" = ps: with ps; [  ];
    "input_text" = ps: with ps; [  ];
    "insteon" = ps: with ps; [  ];
    "integration" = ps: with ps; [  ];
    "intent_script" = ps: with ps; [  ];
    "ios" = ps: with ps; [ aiohttp-cors zeroconf ];
    "iota" = ps: with ps; [  ];
    "iperf3" = ps: with ps; [  ];
    "ipma" = ps: with ps; [  ];
    "iqvia" = ps: with ps; [ numpy ];
    "irish_rail_transport" = ps: with ps; [  ];
    "islamic_prayer_times" = ps: with ps; [  ];
    "iss" = ps: with ps; [  ];
    "isy994" = ps: with ps; [  ];
    "itach" = ps: with ps; [  ];
    "itunes" = ps: with ps; [  ];
    "jewish_calendar" = ps: with ps; [  ];
    "joaoapps_join" = ps: with ps; [  ];
    "juicenet" = ps: with ps; [  ];
    "kankun" = ps: with ps; [  ];
    "keenetic_ndms2" = ps: with ps; [  ];
    "keyboard" = ps: with ps; [  ];
    "keyboard_remote" = ps: with ps; [ evdev ];
    "kira" = ps: with ps; [  ];
    "kiwi" = ps: with ps; [  ];
    "knx" = ps: with ps; [  ];
    "kodi" = ps: with ps; [ jsonrpc-async jsonrpc-websocket ];
    "konnected" = ps: with ps; [ aiohttp-cors ];
    "kwb" = ps: with ps; [  ];
    "lacrosse" = ps: with ps; [  ];
    "lametric" = ps: with ps; [  ];
    "lannouncer" = ps: with ps; [  ];
    "lastfm" = ps: with ps; [ pylast ];
    "launch_library" = ps: with ps; [  ];
    "lcn" = ps: with ps; [  ];
    "lg_netcast" = ps: with ps; [  ];
    "lg_soundbar" = ps: with ps; [  ];
    "life360" = ps: with ps; [  ];
    "lifx" = ps: with ps; [ aiolifx aiolifx-effects ];
    "lifx_cloud" = ps: with ps; [  ];
    "lifx_legacy" = ps: with ps; [  ];
    "light" = ps: with ps; [  ];
    "lightwave" = ps: with ps; [  ];
    "limitlessled" = ps: with ps; [ limitlessled ];
    "linksys_ap" = ps: with ps; [ beautifulsoup4 ];
    "linksys_smart" = ps: with ps; [  ];
    "linky" = ps: with ps; [  ];
    "linode" = ps: with ps; [ linode-api ];
    "linux_battery" = ps: with ps; [ batinfo ];
    "lirc" = ps: with ps; [  ];
    "litejet" = ps: with ps; [  ];
    "liveboxplaytv" = ps: with ps; [  ];
    "llamalab_automate" = ps: with ps; [  ];
    "local_file" = ps: with ps; [  ];
    "locative" = ps: with ps; [ aiohttp-cors ];
    "lock" = ps: with ps; [  ];
    "lockitron" = ps: with ps; [  ];
    "logbook" = ps: with ps; [ aiohttp-cors sqlalchemy ];
    "logentries" = ps: with ps; [  ];
    "logger" = ps: with ps; [  ];
    "logi_circle" = ps: with ps; [ ha-ffmpeg ];
    "london_air" = ps: with ps; [  ];
    "london_underground" = ps: with ps; [  ];
    "loopenergy" = ps: with ps; [  ];
    "lovelace" = ps: with ps; [  ];
    "luci" = ps: with ps; [  ];
    "luftdaten" = ps: with ps; [ luftdaten ];
    "lupusec" = ps: with ps; [  ];
    "lutron" = ps: with ps; [  ];
    "lutron_caseta" = ps: with ps; [  ];
    "lw12wifi" = ps: with ps; [  ];
    "lyft" = ps: with ps; [  ];
    "magicseaweed" = ps: with ps; [  ];
    "mailbox" = ps: with ps; [ aiohttp-cors ];
    "mailgun" = ps: with ps; [ aiohttp-cors ];
    "manual" = ps: with ps; [  ];
    "manual_mqtt" = ps: with ps; [ aiohttp-cors hbmqtt paho-mqtt ];
    "map" = ps: with ps; [ aiohttp-cors ];
    "marytts" = ps: with ps; [  ];
    "mastodon" = ps: with ps; [  ];
    "matrix" = ps: with ps; [ matrix-client ];
    "maxcube" = ps: with ps; [  ];
    "mcp23017" = ps: with ps; [  ];
    "media_extractor" = ps: with ps; [ aiohttp-cors youtube-dl-light ];
    "media_player" = ps: with ps; [ aiohttp-cors ];
    "mediaroom" = ps: with ps; [  ];
    "melissa" = ps: with ps; [  ];
    "meraki" = ps: with ps; [ aiohttp-cors ];
    "message_bird" = ps: with ps; [  ];
    "met" = ps: with ps; [  ];
    "meteo_france" = ps: with ps; [  ];
    "meteoalarm" = ps: with ps; [  ];
    "metoffice" = ps: with ps; [  ];
    "mfi" = ps: with ps; [  ];
    "mhz19" = ps: with ps; [  ];
    "microsoft" = ps: with ps; [  ];
    "microsoft_face" = ps: with ps; [ aiohttp-cors ];
    "microsoft_face_detect" = ps: with ps; [ aiohttp-cors ];
    "microsoft_face_identify" = ps: with ps; [ aiohttp-cors ];
    "miflora" = ps: with ps; [  ];
    "mikrotik" = ps: with ps; [  ];
    "mill" = ps: with ps; [  ];
    "min_max" = ps: with ps; [  ];
    "mitemp_bt" = ps: with ps; [  ];
    "mjpeg" = ps: with ps; [  ];
    "mobile_app" = ps: with ps; [ pynacl aiohttp-cors ];
    "mochad" = ps: with ps; [  ];
    "modbus" = ps: with ps; [  ];
    "modem_callerid" = ps: with ps; [  ];
    "mold_indicator" = ps: with ps; [  ];
    "monoprice" = ps: with ps; [  ];
    "moon" = ps: with ps; [  ];
    "mopar" = ps: with ps; [  ];
    "mpchc" = ps: with ps; [  ];
    "mpd" = ps: with ps; [ mpd2 ];
    "mqtt" = ps: with ps; [ aiohttp-cors hbmqtt paho-mqtt ];
    "mqtt_eventstream" = ps: with ps; [ aiohttp-cors hbmqtt paho-mqtt ];
    "mqtt_json" = ps: with ps; [ aiohttp-cors hbmqtt paho-mqtt ];
    "mqtt_room" = ps: with ps; [ aiohttp-cors hbmqtt paho-mqtt ];
    "mqtt_statestream" = ps: with ps; [ aiohttp-cors hbmqtt paho-mqtt ];
    "mvglive" = ps: with ps; [ PyMVGLive ];
    "mychevy" = ps: with ps; [  ];
    "mycroft" = ps: with ps; [  ];
    "myq" = ps: with ps; [  ];
    "mysensors" = ps: with ps; [  ];
    "mystrom" = ps: with ps; [ aiohttp-cors ];
    "mythicbeastsdns" = ps: with ps; [  ];
    "n26" = ps: with ps; [  ];
    "nad" = ps: with ps; [  ];
    "namecheapdns" = ps: with ps; [ defusedxml ];
    "nanoleaf" = ps: with ps; [  ];
    "neato" = ps: with ps; [ pybotvac ];
    "nederlandse_spoorwegen" = ps: with ps; [  ];
    "nello" = ps: with ps; [  ];
    "ness_alarm" = ps: with ps; [  ];
    "nest" = ps: with ps; [  ];
    "netatmo" = ps: with ps; [ aiohttp-cors pyatmo ];
    "netdata" = ps: with ps; [  ];
    "netgear" = ps: with ps; [  ];
    "netgear_lte" = ps: with ps; [  ];
    "netio" = ps: with ps; [ aiohttp-cors ];
    "neurio_energy" = ps: with ps; [  ];
    "nextbus" = ps: with ps; [  ];
    "nfandroidtv" = ps: with ps; [  ];
    "niko_home_control" = ps: with ps; [  ];
    "nilu" = ps: with ps; [  ];
    "nissan_leaf" = ps: with ps; [  ];
    "nmap_tracker" = ps: with ps; [  ];
    "nmbs" = ps: with ps; [  ];
    "no_ip" = ps: with ps; [  ];
    "noaa_tides" = ps: with ps; [  ];
    "norway_air" = ps: with ps; [  ];
    "notify" = ps: with ps; [  ];
    "notion" = ps: with ps; [  ];
    "nsw_fuel_station" = ps: with ps; [  ];
    "nsw_rural_fire_service_feed" = ps: with ps; [  ];
    "nuheat" = ps: with ps; [  ];
    "nuimo_controller" = ps: with ps; [  ];
    "nuki" = ps: with ps; [  ];
    "nut" = ps: with ps; [  ];
    "nx584" = ps: with ps; [  ];
    "nzbget" = ps: with ps; [  ];
    "oasa_telematics" = ps: with ps; [  ];
    "octoprint" = ps: with ps; [  ];
    "oem" = ps: with ps; [  ];
    "ohmconnect" = ps: with ps; [ defusedxml ];
    "onboarding" = ps: with ps; [ aiohttp-cors ];
    "onewire" = ps: with ps; [  ];
    "onkyo" = ps: with ps; [ onkyo-eiscp ];
    "onvif" = ps: with ps; [ ha-ffmpeg ];
    "openalpr_cloud" = ps: with ps; [  ];
    "openalpr_local" = ps: with ps; [  ];
    "opencv" = ps: with ps; [ numpy ];
    "openevse" = ps: with ps; [  ];
    "openexchangerates" = ps: with ps; [  ];
    "opengarage" = ps: with ps; [  ];
    "openhardwaremonitor" = ps: with ps; [  ];
    "openhome" = ps: with ps; [  ];
    "opensensemap" = ps: with ps; [  ];
    "opensky" = ps: with ps; [  ];
    "opentherm_gw" = ps: with ps; [  ];
    "openuv" = ps: with ps; [  ];
    "openweathermap" = ps: with ps; [ pyowm ];
    "opple" = ps: with ps; [  ];
    "orangepi_gpio" = ps: with ps; [  ];
    "orvibo" = ps: with ps; [  ];
    "osramlightify" = ps: with ps; [  ];
    "otp" = ps: with ps; [ pyotp ];
    "owlet" = ps: with ps; [  ];
    "owntracks" = ps: with ps; [ pynacl aiohttp-cors ];
    "panasonic_bluray" = ps: with ps; [  ];
    "panasonic_viera" = ps: with ps; [ wakeonlan ];
    "pandora" = ps: with ps; [ pexpect ];
    "panel_custom" = ps: with ps; [ aiohttp-cors ];
    "panel_iframe" = ps: with ps; [ aiohttp-cors ];
    "pencom" = ps: with ps; [  ];
    "persistent_notification" = ps: with ps; [  ];
    "person" = ps: with ps; [  ];
    "philips_js" = ps: with ps; [  ];
    "pi_hole" = ps: with ps; [  ];
    "picotts" = ps: with ps; [  ];
    "piglow" = ps: with ps; [  ];
    "pilight" = ps: with ps; [  ];
    "ping" = ps: with ps; [  ];
    "pioneer" = ps: with ps; [  ];
    "pjlink" = ps: with ps; [  ];
    "plaato" = ps: with ps; [ aiohttp-cors ];
    "plant" = ps: with ps; [  ];
    "plex" = ps: with ps; [  ];
    "plum_lightpad" = ps: with ps; [  ];
    "pocketcasts" = ps: with ps; [  ];
    "point" = ps: with ps; [ aiohttp-cors ];
    "postnl" = ps: with ps; [  ];
    "prezzibenzina" = ps: with ps; [  ];
    "proliphix" = ps: with ps; [  ];
    "prometheus" = ps: with ps; [ aiohttp-cors prometheus_client ];
    "prowl" = ps: with ps; [  ];
    "proximity" = ps: with ps; [  ];
    "proxy" = ps: with ps; [ pillow ];
    "ps4" = ps: with ps; [  ];
    "ptvsd" = ps: with ps; [  ];
    "pulseaudio_loopback" = ps: with ps; [  ];
    "push" = ps: with ps; [ aiohttp-cors ];
    "pushbullet" = ps: with ps; [ pushbullet ];
    "pushetta" = ps: with ps; [  ];
    "pushover" = ps: with ps; [ python-pushover ];
    "pushsafer" = ps: with ps; [  ];
    "pvoutput" = ps: with ps; [  ];
    "pyload" = ps: with ps; [  ];
    "python_script" = ps: with ps; [  ];
    "qbittorrent" = ps: with ps; [  ];
    "qld_bushfire" = ps: with ps; [  ];
    "qnap" = ps: with ps; [  ];
    "qrcode" = ps: with ps; [ pillow ];
    "quantum_gateway" = ps: with ps; [  ];
    "qwikswitch" = ps: with ps; [  ];
    "rachio" = ps: with ps; [  ];
    "radarr" = ps: with ps; [  ];
    "radiotherm" = ps: with ps; [  ];
    "rainbird" = ps: with ps; [  ];
    "raincloud" = ps: with ps; [  ];
    "rainmachine" = ps: with ps; [  ];
    "random" = ps: with ps; [  ];
    "raspihats" = ps: with ps; [  ];
    "raspyrfm" = ps: with ps; [  ];
    "recollect_waste" = ps: with ps; [  ];
    "recorder" = ps: with ps; [ sqlalchemy ];
    "recswitch" = ps: with ps; [  ];
    "reddit" = ps: with ps; [ praw ];
    "rejseplanen" = ps: with ps; [  ];
    "remember_the_milk" = ps: with ps; [ httplib2 ];
    "remote" = ps: with ps; [  ];
    "remote_rpi_gpio" = ps: with ps; [  ];
    "repetier" = ps: with ps; [  ];
    "rest" = ps: with ps; [  ];
    "rest_command" = ps: with ps; [  ];
    "rflink" = ps: with ps; [  ];
    "rfxtrx" = ps: with ps; [  ];
    "ring" = ps: with ps; [ ha-ffmpeg ];
    "ripple" = ps: with ps; [  ];
    "ritassist" = ps: with ps; [  ];
    "rmvtransport" = ps: with ps; [  ];
    "rocketchat" = ps: with ps; [  ];
    "roku" = ps: with ps; [  ];
    "roomba" = ps: with ps; [  ];
    "route53" = ps: with ps; [ boto3 ];
    "rova" = ps: with ps; [  ];
    "rpi_camera" = ps: with ps; [  ];
    "rpi_gpio" = ps: with ps; [  ];
    "rpi_gpio_pwm" = ps: with ps; [  ];
    "rpi_pfio" = ps: with ps; [  ];
    "rpi_rf" = ps: with ps; [  ];
    "rss_feed_template" = ps: with ps; [ aiohttp-cors ];
    "rtorrent" = ps: with ps; [  ];
    "russound_rio" = ps: with ps; [  ];
    "russound_rnet" = ps: with ps; [  ];
    "ruter" = ps: with ps; [  ];
    "sabnzbd" = ps: with ps; [  ];
    "samsungtv" = ps: with ps; [ wakeonlan ];
    "satel_integra" = ps: with ps; [  ];
    "scene" = ps: with ps; [  ];
    "scrape" = ps: with ps; [ beautifulsoup4 ];
    "script" = ps: with ps; [  ];
    "scsgate" = ps: with ps; [  ];
    "season" = ps: with ps; [ ephem ];
    "sendgrid" = ps: with ps; [  ];
    "sense" = ps: with ps; [  ];
    "sensehat" = ps: with ps; [  ];
    "sensibo" = ps: with ps; [  ];
    "sensor" = ps: with ps; [  ];
    "serial" = ps: with ps; [  ];
    "serial_pm" = ps: with ps; [  ];
    "sesame" = ps: with ps; [  ];
    "seven_segments" = ps: with ps; [  ];
    "seventeentrack" = ps: with ps; [  ];
    "shell_command" = ps: with ps; [  ];
    "shiftr" = ps: with ps; [ paho-mqtt ];
    "shodan" = ps: with ps; [ shodan ];
    "shopping_list" = ps: with ps; [ aiohttp-cors ];
    "sht31" = ps: with ps; [  ];
    "sigfox" = ps: with ps; [  ];
    "simplepush" = ps: with ps; [  ];
    "simplisafe" = ps: with ps; [  ];
    "simulated" = ps: with ps; [  ];
    "sisyphus" = ps: with ps; [  ];
    "sky_hub" = ps: with ps; [  ];
    "skybeacon" = ps: with ps; [  ];
    "skybell" = ps: with ps; [  ];
    "slack" = ps: with ps; [  ];
    "sleepiq" = ps: with ps; [  ];
    "sma" = ps: with ps; [  ];
    "smappee" = ps: with ps; [  ];
    "smarthab" = ps: with ps; [  ];
    "smartthings" = ps: with ps; [ aiohttp-cors ];
    "smarty" = ps: with ps; [  ];
    "smhi" = ps: with ps; [  ];
    "smtp" = ps: with ps; [  ];
    "snapcast" = ps: with ps; [ snapcast ];
    "snips" = ps: with ps; [ aiohttp-cors hbmqtt paho-mqtt ];
    "snmp" = ps: with ps; [ pysnmp ];
    "sochain" = ps: with ps; [  ];
    "socialblade" = ps: with ps; [  ];
    "solaredge" = ps: with ps; [ stringcase ];
    "solaredge_local" = ps: with ps; [  ];
    "solax" = ps: with ps; [  ];
    "somfy" = ps: with ps; [  ];
    "somfy_mylink" = ps: with ps; [  ];
    "sonarr" = ps: with ps; [  ];
    "songpal" = ps: with ps; [  ];
    "sonos" = ps: with ps; [ pysonos ];
    "sony_projector" = ps: with ps; [  ];
    "soundtouch" = ps: with ps; [ libsoundtouch ];
    "spaceapi" = ps: with ps; [ aiohttp-cors ];
    "spc" = ps: with ps; [  ];
    "speedtestdotnet" = ps: with ps; [ speedtest-cli ];
    "spider" = ps: with ps; [  ];
    "splunk" = ps: with ps; [  ];
    "spotcrime" = ps: with ps; [  ];
    "spotify" = ps: with ps; [ aiohttp-cors ];
    "sql" = ps: with ps; [ sqlalchemy ];
    "squeezebox" = ps: with ps; [  ];
    "srp_energy" = ps: with ps; [  ];
    "ssdp" = ps: with ps; [ netdisco ];
    "starlingbank" = ps: with ps; [  ];
    "startca" = ps: with ps; [ xmltodict ];
    "statistics" = ps: with ps; [  ];
    "statsd" = ps: with ps; [ statsd ];
    "steam_online" = ps: with ps; [  ];
    "stiebel_eltron" = ps: with ps; [  ];
    "stream" = ps: with ps; [ aiohttp-cors av ];
    "streamlabswater" = ps: with ps; [  ];
    "stride" = ps: with ps; [  ];
    "sun" = ps: with ps; [  ];
    "supervisord" = ps: with ps; [  ];
    "supla" = ps: with ps; [  ];
    "swiss_hydrological_data" = ps: with ps; [  ];
    "swiss_public_transport" = ps: with ps; [  ];
    "swisscom" = ps: with ps; [  ];
    "switch" = ps: with ps; [  ];
    "switchbot" = ps: with ps; [  ];
    "switcher_kis" = ps: with ps; [  ];
    "switchmate" = ps: with ps; [  ];
    "syncthru" = ps: with ps; [  ];
    "synology" = ps: with ps; [  ];
    "synology_chat" = ps: with ps; [  ];
    "synology_srm" = ps: with ps; [  ];
    "synologydsm" = ps: with ps; [  ];
    "syslog" = ps: with ps; [  ];
    "system_health" = ps: with ps; [ aiohttp-cors ];
    "system_log" = ps: with ps; [ aiohttp-cors ];
    "systemmonitor" = ps: with ps; [ psutil ];
    "sytadin" = ps: with ps; [ beautifulsoup4 ];
    "tado" = ps: with ps; [  ];
    "tahoma" = ps: with ps; [  ];
    "tank_utility" = ps: with ps; [  ];
    "tapsaff" = ps: with ps; [  ];
    "tautulli" = ps: with ps; [  ];
    "tcp" = ps: with ps; [  ];
    "ted5000" = ps: with ps; [ xmltodict ];
    "teksavvy" = ps: with ps; [  ];
    "telegram" = ps: with ps; [ aiohttp-cors python-telegram-bot ];
    "telegram_bot" = ps: with ps; [ aiohttp-cors python-telegram-bot ];
    "tellduslive" = ps: with ps; [  ];
    "tellstick" = ps: with ps; [  ];
    "telnet" = ps: with ps; [  ];
    "temper" = ps: with ps; [  ];
    "template" = ps: with ps; [  ];
    "tensorflow" = ps: with ps; [ numpy pillow protobuf ];
    "tesla" = ps: with ps; [  ];
    "tfiac" = ps: with ps; [  ];
    "thermoworks_smoke" = ps: with ps; [ stringcase ];
    "thethingsnetwork" = ps: with ps; [  ];
    "thingspeak" = ps: with ps; [  ];
    "thinkingcleaner" = ps: with ps; [  ];
    "thomson" = ps: with ps; [  ];
    "threshold" = ps: with ps; [  ];
    "tibber" = ps: with ps; [  ];
    "tikteck" = ps: with ps; [  ];
    "tile" = ps: with ps; [  ];
    "time_date" = ps: with ps; [  ];
    "timer" = ps: with ps; [  ];
    "tod" = ps: with ps; [  ];
    "todoist" = ps: with ps; [ todoist ];
    "tof" = ps: with ps; [  ];
    "tomato" = ps: with ps; [  ];
    "toon" = ps: with ps; [  ];
    "torque" = ps: with ps; [ aiohttp-cors ];
    "totalconnect" = ps: with ps; [  ];
    "touchline" = ps: with ps; [  ];
    "tplink" = ps: with ps; [  ];
    "tplink_lte" = ps: with ps; [  ];
    "traccar" = ps: with ps; [ stringcase ];
    "trackr" = ps: with ps; [  ];
    "tradfri" = ps: with ps; [  ];
    "trafikverket_train" = ps: with ps; [  ];
    "trafikverket_weatherstation" = ps: with ps; [  ];
    "transmission" = ps: with ps; [ transmissionrpc ];
    "transport_nsw" = ps: with ps; [  ];
    "travisci" = ps: with ps; [  ];
    "trend" = ps: with ps; [ numpy ];
    "tts" = ps: with ps; [ aiohttp-cors mutagen ];
    "tuya" = ps: with ps; [  ];
    "twilio" = ps: with ps; [ aiohttp-cors twilio ];
    "twilio_call" = ps: with ps; [ aiohttp-cors twilio ];
    "twilio_sms" = ps: with ps; [ aiohttp-cors twilio ];
    "twitch" = ps: with ps; [  ];
    "twitter" = ps: with ps; [  ];
    "ubee" = ps: with ps; [  ];
    "ubus" = ps: with ps; [  ];
    "ue_smart_radio" = ps: with ps; [  ];
    "uk_transport" = ps: with ps; [  ];
    "unifi" = ps: with ps; [ aiounifi ];
    "unifi_direct" = ps: with ps; [ pexpect ];
    "universal" = ps: with ps; [  ];
    "upc_connect" = ps: with ps; [ defusedxml ];
    "upcloud" = ps: with ps; [  ];
    "updater" = ps: with ps; [ distro ];
    "upnp" = ps: with ps; [  ];
    "ups" = ps: with ps; [  ];
    "uptime" = ps: with ps; [  ];
    "uptimerobot" = ps: with ps; [  ];
    "uscis" = ps: with ps; [  ];
    "usgs_earthquakes_feed" = ps: with ps; [  ];
    "usps" = ps: with ps; [  ];
    "utility_meter" = ps: with ps; [  ];
    "uvc" = ps: with ps; [  ];
    "vacuum" = ps: with ps; [  ];
    "vallox" = ps: with ps; [  ];
    "vasttrafik" = ps: with ps; [  ];
    "velbus" = ps: with ps; [  ];
    "velux" = ps: with ps; [  ];
    "venstar" = ps: with ps; [  ];
    "vera" = ps: with ps; [  ];
    "verisure" = ps: with ps; [  ];
    "version" = ps: with ps; [  ];
    "vesync" = ps: with ps; [  ];
    "viaggiatreno" = ps: with ps; [  ];
    "vizio" = ps: with ps; [  ];
    "vlc" = ps: with ps; [  ];
    "vlc_telnet" = ps: with ps; [  ];
    "voicerss" = ps: with ps; [  ];
    "volkszaehler" = ps: with ps; [  ];
    "volumio" = ps: with ps; [  ];
    "volvooncall" = ps: with ps; [  ];
    "vultr" = ps: with ps; [ vultr ];
    "w800rf32" = ps: with ps; [  ];
    "wake_on_lan" = ps: with ps; [ wakeonlan ];
    "waqi" = ps: with ps; [  ];
    "water_heater" = ps: with ps; [  ];
    "waterfurnace" = ps: with ps; [  ];
    "watson_iot" = ps: with ps; [  ];
    "watson_tts" = ps: with ps; [  ];
    "waze_travel_time" = ps: with ps; [ WazeRouteCalculator ];
    "weather" = ps: with ps; [  ];
    "webhook" = ps: with ps; [ aiohttp-cors ];
    "weblink" = ps: with ps; [  ];
    "webostv" = ps: with ps; [ websockets ];
    "websocket_api" = ps: with ps; [ aiohttp-cors ];
    "wemo" = ps: with ps; [  ];
    "whois" = ps: with ps; [  ];
    "wink" = ps: with ps; [  ];
    "wirelesstag" = ps: with ps; [  ];
    "workday" = ps: with ps; [  ];
    "worldclock" = ps: with ps; [  ];
    "worldtidesinfo" = ps: with ps; [  ];
    "worxlandroid" = ps: with ps; [  ];
    "wsdot" = ps: with ps; [  ];
    "wunderground" = ps: with ps; [  ];
    "wunderlist" = ps: with ps; [  ];
    "wwlln" = ps: with ps; [  ];
    "x10" = ps: with ps; [  ];
    "xbox_live" = ps: with ps; [  ];
    "xeoma" = ps: with ps; [  ];
    "xfinity" = ps: with ps; [  ];
    "xiaomi" = ps: with ps; [ ha-ffmpeg ];
    "xiaomi_aqara" = ps: with ps; [  ];
    "xiaomi_miio" = ps: with ps; [ construct ];
    "xiaomi_tv" = ps: with ps; [  ];
    "xmpp" = ps: with ps; [ slixmpp ];
    "xs1" = ps: with ps; [  ];
    "yale_smart_alarm" = ps: with ps; [  ];
    "yamaha" = ps: with ps; [  ];
    "yamaha_musiccast" = ps: with ps; [  ];
    "yandextts" = ps: with ps; [  ];
    "yeelight" = ps: with ps; [  ];
    "yeelightsunflower" = ps: with ps; [  ];
    "yessssms" = ps: with ps; [  ];
    "yi" = ps: with ps; [ aioftp ha-ffmpeg ];
    "yr" = ps: with ps; [ xmltodict ];
    "yweather" = ps: with ps; [ yahooweather ];
    "zabbix" = ps: with ps; [  ];
    "zamg" = ps: with ps; [  ];
    "zengge" = ps: with ps; [  ];
    "zeroconf" = ps: with ps; [ aiohttp-cors zeroconf ];
    "zestimate" = ps: with ps; [ xmltodict ];
    "zha" = ps: with ps; [  ];
    "zhong_hong" = ps: with ps; [  ];
    "zigbee" = ps: with ps; [  ];
    "ziggo_mediabox_xl" = ps: with ps; [  ];
    "zone" = ps: with ps; [  ];
    "zoneminder" = ps: with ps; [ zm-py ];
    "zwave" = ps: with ps; [ homeassistant-pyozw pydispatcher ];
  };
}
