--- a/data/org.gnome.Shell.Extensions.GSConnect.desktop
+++ b/data/org.gnome.Shell.Extensions.GSConnect.desktop
@@ -1,7 +1,7 @@
 [Desktop Entry]
 Type=Application
 Name=GSConnect
-Exec=gapplication launch org.gnome.Shell.Extensions.GSConnect %U
+Exec=@gapplication@ launch org.gnome.Shell.Extensions.GSConnect %U
 Terminal=false
 NoDisplay=true
 Icon=org.gnome.Shell.Extensions.GSConnect
--- a/src/extension.js
+++ b/src/extension.js
@@ -1,5 +1,7 @@
 'use strict';
 
+'@typelibPath@'.split(':').forEach(path => imports.gi.GIRepository.Repository.prepend_search_path(path));
+
 const Gio = imports.gi.Gio;
 const GLib = imports.gi.GLib;
 const Gtk = imports.gi.Gtk;
--- a/src/prefs.js
+++ b/src/prefs.js
@@ -1,5 +1,7 @@
 'use strict';
 
+'@typelibPath@'.split(':').forEach(path => imports.gi.GIRepository.Repository.prepend_search_path(path));
+
 const Gio = imports.gi.Gio;
 const GLib = imports.gi.GLib;
 const Gtk = imports.gi.Gtk;
--- a/src/preferences/service.js
+++ b/src/preferences/service.js
@@ -435,9 +435,9 @@ var Window = GObject.registerClass({
 
     _restoreGeometry() {
         if (this._mutterSettings === undefined) {
-            this._mutterSettings = new Gio.Settings({
-                schema_id: 'org.gnome.mutter'
-            });
+            const _schema_source = Gio.SettingsSchemaSource.new_from_directory('@mutter_gsettings_path@', Gio.SettingsSchemaSource.get_default(), true);
+            const _schema = _schema_source.lookup('org.gnome.mutter', false);
+            this._mutterSettings = new Gio.Settings({settings_schema: _schema});
         }
 
         // Restore geometry, even if we're going to maximize
--- a/src/service/ui/messaging.js
+++ b/src/service/ui/messaging.js
@@ -891,9 +891,9 @@ var Window = GObject.registerClass({
      */
     _restoreGeometry() {
         if (this._mutterSettings === undefined) {
-            this._mutterSettings = new Gio.Settings({
-                schema_id: 'org.gnome.mutter'
-            });
+            const _schema_source = Gio.SettingsSchemaSource.new_from_directory('@mutter_gsettings_path@', Gio.SettingsSchemaSource.get_default(), true);
+            const _schema = _schema_source.lookup('org.gnome.mutter', false);
+            this._mutterSettings = new Gio.Settings({settings_schema: _schema});
         }
 
