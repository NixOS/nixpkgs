diff --git a/src/addressbook/libebook/e-book-client.c b/src/addressbook/libebook/e-book-client.c
index 7888e69..c3b695c 100644
--- a/src/addressbook/libebook/e-book-client.c
+++ b/src/addressbook/libebook/e-book-client.c
@@ -1983,7 +1983,18 @@ e_book_client_get_self (ESourceRegistry *registry,
 
 	*out_client = book_client;
 
-	settings = g_settings_new (SELF_UID_PATH_ID);
+	{
+		g_autoptr(GSettingsSchemaSource) schema_source;
+		g_autoptr(GSettingsSchema) schema;
+		schema_source = g_settings_schema_source_new_from_directory("@EDS_GSETTINGS_PATH@",
+									    g_settings_schema_source_get_default(),
+									    TRUE,
+									    NULL);
+		schema = g_settings_schema_source_lookup(schema_source,
+							 SELF_UID_PATH_ID,
+							 FALSE);
+		settings = g_settings_new_full(schema, NULL, NULL);
+	}
 	uid = g_settings_get_string (settings, SELF_UID_KEY);
 	g_object_unref (settings);
 
@@ -2051,7 +2062,18 @@ e_book_client_set_self (EBookClient *client,
 	g_return_val_if_fail (
 		e_contact_get_const (contact, E_CONTACT_UID) != NULL, FALSE);
 
-	settings = g_settings_new (SELF_UID_PATH_ID);
+	{
+		g_autoptr(GSettingsSchemaSource) schema_source;
+		g_autoptr(GSettingsSchema) schema;
+		schema_source = g_settings_schema_source_new_from_directory("@EDS_GSETTINGS_PATH@",
+									    g_settings_schema_source_get_default(),
+									    TRUE,
+									    NULL);
+		schema = g_settings_schema_source_lookup(schema_source,
+							 SELF_UID_PATH_ID,
+							 FALSE);
+		settings = g_settings_new_full(schema, NULL, NULL);
+	}
 	g_settings_set_string (
 		settings, SELF_UID_KEY,
 		e_contact_get_const (contact, E_CONTACT_UID));
@@ -2087,8 +2109,18 @@ e_book_client_is_self (EContact *contact)
 	 * unfortunately the API doesn't allow that.
 	 */
 	g_mutex_lock (&mutex);
-	if (!settings)
-		settings = g_settings_new (SELF_UID_PATH_ID);
+	if (!settings) {
+		g_autoptr(GSettingsSchemaSource) schema_source;
+		g_autoptr(GSettingsSchema) schema;
+		schema_source = g_settings_schema_source_new_from_directory("@EDS_GSETTINGS_PATH@",
+									    g_settings_schema_source_get_default(),
+									    TRUE,
+									    NULL);
+		schema = g_settings_schema_source_lookup(schema_source,
+							 SELF_UID_PATH_ID,
+							 FALSE);
+		settings = g_settings_new_full(schema, NULL, NULL);
+	}
 	uid = g_settings_get_string (settings, SELF_UID_KEY);
 	g_mutex_unlock (&mutex);
 
diff --git a/src/addressbook/libebook/e-book.c b/src/addressbook/libebook/e-book.c
index 8dfff6d..cd88392 100644
--- a/src/addressbook/libebook/e-book.c
+++ b/src/addressbook/libebook/e-book.c
@@ -2587,7 +2587,18 @@ e_book_get_self (ESourceRegistry *registry,
 		return FALSE;
 	}
 
-	settings = g_settings_new (SELF_UID_PATH_ID);
+	{
+		g_autoptr(GSettingsSchemaSource) schema_source;
+		g_autoptr(GSettingsSchema) schema;
+		schema_source = g_settings_schema_source_new_from_directory("@EDS_GSETTINGS_PATH@",
+									    g_settings_schema_source_get_default(),
+									    TRUE,
+									    NULL);
+		schema = g_settings_schema_source_lookup(schema_source,
+							 SELF_UID_PATH_ID,
+							 FALSE);
+		settings = g_settings_new_full(schema, NULL, NULL);
+	}
 	uid = g_settings_get_string (settings, SELF_UID_KEY);
 	g_object_unref (settings);
 
@@ -2642,7 +2653,18 @@ e_book_set_self (EBook *book,
 	g_return_val_if_fail (E_IS_BOOK (book), FALSE);
 	g_return_val_if_fail (E_IS_CONTACT (contact), FALSE);
 
-	settings = g_settings_new (SELF_UID_PATH_ID);
+	{
+		g_autoptr(GSettingsSchemaSource) schema_source;
+		g_autoptr(GSettingsSchema) schema;
+		schema_source = g_settings_schema_source_new_from_directory("@EDS_GSETTINGS_PATH@",
+									    g_settings_schema_source_get_default(),
+									    TRUE,
+									    NULL);
+		schema = g_settings_schema_source_lookup(schema_source,
+							 SELF_UID_PATH_ID,
+							 FALSE);
+		settings = g_settings_new_full(schema, NULL, NULL);
+	}
 	g_settings_set_string (
 		settings, SELF_UID_KEY,
 		e_contact_get_const (contact, E_CONTACT_UID));
@@ -2670,7 +2692,18 @@ e_book_is_self (EContact *contact)
 
 	g_return_val_if_fail (E_IS_CONTACT (contact), FALSE);
 
-	settings = g_settings_new (SELF_UID_PATH_ID);
+	{
+		g_autoptr(GSettingsSchemaSource) schema_source;
+		g_autoptr(GSettingsSchema) schema;
+		schema_source = g_settings_schema_source_new_from_directory("@EDS_GSETTINGS_PATH@",
+									    g_settings_schema_source_get_default(),
+									    TRUE,
+									    NULL);
+		schema = g_settings_schema_source_lookup(schema_source,
+							 SELF_UID_PATH_ID,
+							 FALSE);
+		settings = g_settings_new_full(schema, NULL, NULL);
+	}
 	uid = g_settings_get_string (settings, SELF_UID_KEY);
 	g_object_unref (settings);
 
diff --git a/src/calendar/backends/contacts/e-cal-backend-contacts.c b/src/calendar/backends/contacts/e-cal-backend-contacts.c
index e696861..52af238 100644
--- a/src/calendar/backends/contacts/e-cal-backend-contacts.c
+++ b/src/calendar/backends/contacts/e-cal-backend-contacts.c
@@ -1387,7 +1387,18 @@ e_cal_backend_contacts_init (ECalBackendContacts *cbc)
 		(GDestroyNotify) g_free,
 		(GDestroyNotify) contact_record_free);
 
-	cbc->priv->settings = g_settings_new ("org.gnome.evolution-data-server.calendar");
+	{
+		g_autoptr(GSettingsSchemaSource) schema_source;
+		g_autoptr(GSettingsSchema) schema;
+		schema_source = g_settings_schema_source_new_from_directory("@EDS_GSETTINGS_PATH@",
+									    g_settings_schema_source_get_default(),
+									    TRUE,
+									    NULL);
+		schema = g_settings_schema_source_lookup(schema_source,
+							 "org.gnome.evolution-data-server.calendar",
+							 FALSE);
+		cbc->priv->settings = g_settings_new_full(schema, NULL, NULL);
+	}
 	cbc->priv->notifyid = 0;
 	cbc->priv->update_alarms_id = 0;
 	cbc->priv->alarm_enabled = FALSE;
diff --git a/src/calendar/libecal/e-reminder-watcher.c b/src/calendar/libecal/e-reminder-watcher.c
index a24ede2..5d2a032 100644
--- a/src/calendar/libecal/e-reminder-watcher.c
+++ b/src/calendar/libecal/e-reminder-watcher.c
@@ -2477,7 +2477,19 @@ e_reminder_watcher_init (EReminderWatcher *watcher)
 
 	watcher->priv = e_reminder_watcher_get_instance_private (watcher);
 	watcher->priv->cancellable = g_cancellable_new ();
-	watcher->priv->settings = g_settings_new ("org.gnome.evolution-data-server.calendar");
+	{
+		g_autoptr(GSettingsSchemaSource) schema_source;
+		g_autoptr(GSettingsSchema) schema;
+		schema_source = g_settings_schema_source_new_from_directory("@EDS_GSETTINGS_PATH@",
+									    g_settings_schema_source_get_default(),
+									    TRUE,
+									    NULL);
+		schema = g_settings_schema_source_lookup(schema_source,
+							 "org.gnome.evolution-data-server.calendar",
+							 FALSE);
+		watcher->priv->settings = g_settings_new_full(schema, NULL,
+							      NULL);
+	}
 	watcher->priv->scheduled = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, e_reminder_watcher_free_rd_slist);
 	watcher->priv->default_zone = e_cal_util_copy_timezone (zone);
 	watcher->priv->timers_enabled = TRUE;
diff --git a/src/camel/camel-cipher-context.c b/src/camel/camel-cipher-context.c
index 8013ba7..ba74769 100644
--- a/src/camel/camel-cipher-context.c
+++ b/src/camel/camel-cipher-context.c
@@ -1625,7 +1625,18 @@ camel_cipher_can_load_photos (void)
 	GSettings *settings;
 	gboolean load_photos;
 
-	settings = g_settings_new ("org.gnome.evolution-data-server");
+	{
+		g_autoptr(GSettingsSchemaSource) schema_source;
+		g_autoptr(GSettingsSchema) schema;
+		schema_source = g_settings_schema_source_new_from_directory("@EDS_GSETTINGS_PATH@",
+									    g_settings_schema_source_get_default(),
+									    TRUE,
+									    NULL);
+		schema = g_settings_schema_source_lookup(schema_source,
+							 "org.gnome.evolution-data-server",
+							 FALSE);
+		settings = g_settings_new_full(schema, NULL, NULL);
+	}
 	load_photos = g_settings_get_boolean (settings, "camel-cipher-load-photos");
 	g_clear_object (&settings);
 
diff --git a/src/camel/camel-gpg-context.c b/src/camel/camel-gpg-context.c
index 685d3ab..521d91f 100644
--- a/src/camel/camel-gpg-context.c
+++ b/src/camel/camel-gpg-context.c
@@ -571,7 +571,18 @@ gpg_ctx_get_executable_name (void)
 		GSettings *settings;
 		gchar *path;
 
-		settings = g_settings_new ("org.gnome.evolution-data-server");
+		{
+			g_autoptr(GSettingsSchemaSource) schema_source;
+			g_autoptr(GSettingsSchema) schema;
+			schema_source = g_settings_schema_source_new_from_directory("@EDS_GSETTINGS_PATH@",
+										    g_settings_schema_source_get_default(),
+										    TRUE,
+										    NULL);
+			schema = g_settings_schema_source_lookup(schema_source,
+								 "org.gnome.evolution-data-server",
+								 FALSE);
+			settings = g_settings_new_full(schema, NULL, NULL);
+		}
 		path = g_settings_get_string (settings, "camel-gpg-binary");
 		g_clear_object (&settings);
 
diff --git a/src/camel/camel-utils.c b/src/camel/camel-utils.c
index e61160c..d17871a 100644
--- a/src/camel/camel-utils.c
+++ b/src/camel/camel-utils.c
@@ -362,7 +362,19 @@ void
 _camel_utils_initialize (void)
 {
 	G_LOCK (mi_user_headers);
-	mi_user_headers_settings = g_settings_new ("org.gnome.evolution-data-server");
+	{
+		g_autoptr(GSettingsSchemaSource) schema_source;
+		g_autoptr(GSettingsSchema) schema;
+		schema_source = g_settings_schema_source_new_from_directory("@EDS_GSETTINGS_PATH@",
+									    g_settings_schema_source_get_default(),
+									    TRUE,
+									    NULL);
+		schema = g_settings_schema_source_lookup(schema_source,
+							 "org.gnome.evolution-data-server",
+							 FALSE);
+		mi_user_headers_settings = g_settings_new_full(schema, NULL,
+							       NULL);
+	}
 	g_signal_connect (mi_user_headers_settings, "changed::camel-message-info-user-headers",
 		G_CALLBACK (mi_user_headers_settings_changed_cb), NULL);
 	G_UNLOCK (mi_user_headers);
diff --git a/src/camel/providers/smtp/camel-smtp-transport.c b/src/camel/providers/smtp/camel-smtp-transport.c
index f535ad6..30130b9 100644
--- a/src/camel/providers/smtp/camel-smtp-transport.c
+++ b/src/camel/providers/smtp/camel-smtp-transport.c
@@ -1458,7 +1458,18 @@ smtp_helo (CamelSmtpTransport *transport,
 		transport->authtypes = NULL;
 	}
 
-	settings = g_settings_new ("org.gnome.evolution-data-server");
+	{
+		g_autoptr(GSettingsSchemaSource) schema_source;
+		g_autoptr(GSettingsSchema) schema;
+		schema_source = g_settings_schema_source_new_from_directory("@EDS_GSETTINGS_PATH@",
+									    g_settings_schema_source_get_default(),
+									    TRUE,
+									    NULL);
+		schema = g_settings_schema_source_lookup(schema_source,
+							 "org.gnome.evolution-data-server",
+							 FALSE);
+		settings = g_settings_new_full(schema, NULL, NULL);
+	}
 	name = g_settings_get_string (settings, "camel-smtp-helo-argument");
 	g_clear_object (&settings);
 
diff --git a/src/libedataserver/e-network-monitor.c b/src/libedataserver/e-network-monitor.c
index 188f276..7c4db94 100644
--- a/src/libedataserver/e-network-monitor.c
+++ b/src/libedataserver/e-network-monitor.c
@@ -256,7 +256,18 @@ e_network_monitor_constructed (GObject *object)
 	/* Chain up to parent's method. */
 	G_OBJECT_CLASS (e_network_monitor_parent_class)->constructed (object);
 
-	settings = g_settings_new ("org.gnome.evolution-data-server");
+	{
+		g_autoptr(GSettingsSchemaSource) schema_source;
+		g_autoptr(GSettingsSchema) schema;
+		schema_source = g_settings_schema_source_new_from_directory("@EDS_GSETTINGS_PATH@",
+									    g_settings_schema_source_get_default(),
+									    TRUE,
+									    NULL);
+		schema = g_settings_schema_source_lookup(schema_source,
+							 "org.gnome.evolution-data-server",
+							 FALSE);
+		settings = g_settings_new_full(schema, NULL, NULL);
+	}
 	g_settings_bind (
 		settings, "network-monitor-gio-name",
 		object, "gio-name",
diff --git a/src/libedataserver/e-oauth2-service-google.c b/src/libedataserver/e-oauth2-service-google.c
index f9d9056..115d344 100644
--- a/src/libedataserver/e-oauth2-service-google.c
+++ b/src/libedataserver/e-oauth2-service-google.c
@@ -70,7 +70,18 @@ eos_google_read_settings (EOAuth2Service *service,
 	if (!value) {
 		GSettings *settings;
 
-		settings = g_settings_new ("org.gnome.evolution-data-server");
+		{
+			g_autoptr(GSettingsSchemaSource) schema_source;
+			g_autoptr(GSettingsSchema) schema;
+			schema_source = g_settings_schema_source_new_from_directory("@EDS_GSETTINGS_PATH@",
+										    g_settings_schema_source_get_default(),
+										    TRUE,
+										    NULL);
+			schema = g_settings_schema_source_lookup(schema_source,
+								 "org.gnome.evolution-data-server",
+								 FALSE);
+			settings = g_settings_new_full(schema, NULL, NULL);
+		}
 		value = g_settings_get_string (settings, key_name);
 		g_object_unref (settings);
 
diff --git a/src/libedataserver/e-oauth2-service-outlook.c b/src/libedataserver/e-oauth2-service-outlook.c
index 687c10d..ac1deae 100644
--- a/src/libedataserver/e-oauth2-service-outlook.c
+++ b/src/libedataserver/e-oauth2-service-outlook.c
@@ -70,7 +70,18 @@ eos_outlook_read_settings (EOAuth2Service *service,
 	if (!value) {
 		GSettings *settings;
 
-		settings = g_settings_new ("org.gnome.evolution-data-server");
+		{
+			g_autoptr(GSettingsSchemaSource) schema_source;
+			g_autoptr(GSettingsSchema) schema;
+			schema_source = g_settings_schema_source_new_from_directory("@EDS_GSETTINGS_PATH@",
+										    g_settings_schema_source_get_default(),
+										    TRUE,
+										    NULL);
+			schema = g_settings_schema_source_lookup(schema_source,
+								 "org.gnome.evolution-data-server",
+								 FALSE);
+			settings = g_settings_new_full(schema, NULL, NULL);
+		}
 		value = g_settings_get_string (settings, key_name);
 		g_object_unref (settings);
 
diff --git a/src/libedataserver/e-oauth2-service-yahoo.c b/src/libedataserver/e-oauth2-service-yahoo.c
index 329a38c..f541393 100644
--- a/src/libedataserver/e-oauth2-service-yahoo.c
+++ b/src/libedataserver/e-oauth2-service-yahoo.c
@@ -66,7 +66,18 @@ eos_yahoo_read_settings (EOAuth2Service *service,
 	if (!value) {
 		GSettings *settings;
 
-		settings = g_settings_new ("org.gnome.evolution-data-server");
+		{
+			g_autoptr(GSettingsSchemaSource) schema_source;
+			g_autoptr(GSettingsSchema) schema;
+			schema_source = g_settings_schema_source_new_from_directory("@EDS_GSETTINGS_PATH@",
+										    g_settings_schema_source_get_default(),
+										    TRUE,
+										    NULL);
+			schema = g_settings_schema_source_lookup(schema_source,
+								 "org.gnome.evolution-data-server",
+								 FALSE);
+			settings = g_settings_new_full(schema, NULL, NULL);
+		}
 		value = g_settings_get_string (settings, key_name);
 		g_object_unref (settings);
 
diff --git a/src/libedataserver/e-oauth2-service.c b/src/libedataserver/e-oauth2-service.c
index 979095b..ecac6bb 100644
--- a/src/libedataserver/e-oauth2-service.c
+++ b/src/libedataserver/e-oauth2-service.c
@@ -89,7 +89,18 @@ eos_default_guess_can_process (EOAuth2Service *service,
 	name_len = strlen (name);
 	hostname_len = strlen (hostname);
 
-	settings = g_settings_new ("org.gnome.evolution-data-server");
+	{
+		g_autoptr(GSettingsSchemaSource) schema_source;
+		g_autoptr(GSettingsSchema) schema;
+		schema_source = g_settings_schema_source_new_from_directory("@EDS_GSETTINGS_PATH@",
+									    g_settings_schema_source_get_default(),
+									    TRUE,
+									    NULL);
+		schema = g_settings_schema_source_lookup(schema_source,
+							 "org.gnome.evolution-data-server",
+							 FALSE);
+		settings = g_settings_new_full(schema, NULL, NULL);
+	}
 	values = g_settings_get_strv (settings, "oauth2-services-hint");
 	g_object_unref (settings);
 
diff --git a/src/libedataserver/e-proxy.c b/src/libedataserver/e-proxy.c
index bcd07f9..17db26c 100644
--- a/src/libedataserver/e-proxy.c
+++ b/src/libedataserver/e-proxy.c
@@ -957,8 +957,33 @@ e_proxy_init (EProxy *proxy)
 
 	proxy->priv->type = PROXY_TYPE_SYSTEM;
 
-	proxy->priv->evolution_proxy_settings = g_settings_new ("org.gnome.evolution.shell.network-config");
-	proxy->priv->proxy_settings = g_settings_new ("org.gnome.system.proxy");
+	{
+		g_autoptr(GSettingsSchemaSource) schema_source;
+		g_autoptr(GSettingsSchema) schema;
+		schema_source = g_settings_schema_source_new_from_directory("@EDS_GSETTINGS_PATH@",
+									    g_settings_schema_source_get_default(),
+									    TRUE,
+									    NULL);
+		schema = g_settings_schema_source_lookup(schema_source,
+							 "org.gnome.evolution.shell.network-config",
+							 FALSE);
+		proxy->priv->evolution_proxy_settings = g_settings_new_full(schema,
+									    NULL,
+									    NULL);
+	}
+	{
+		g_autoptr(GSettingsSchemaSource) schema_source;
+		g_autoptr(GSettingsSchema) schema;
+		schema_source = g_settings_schema_source_new_from_directory("@GDS_GSETTINGS_PATH@",
+									    g_settings_schema_source_get_default(),
+									    TRUE,
+									    NULL);
+		schema = g_settings_schema_source_lookup(schema_source,
+							 "org.gnome.system.proxy",
+							 FALSE);
+		proxy->priv->proxy_settings = g_settings_new_full(schema,
+								  NULL, NULL);
+	}
 	proxy->priv->proxy_http_settings = g_settings_get_child (proxy->priv->proxy_settings, "http");
 	proxy->priv->proxy_https_settings = g_settings_get_child (proxy->priv->proxy_settings, "https");
 	proxy->priv->proxy_socks_settings = g_settings_get_child (proxy->priv->proxy_settings, "socks");
diff --git a/src/libedataserver/e-source-registry.c b/src/libedataserver/e-source-registry.c
index 837e940..4bbd00d 100644
--- a/src/libedataserver/e-source-registry.c
+++ b/src/libedataserver/e-source-registry.c
@@ -1769,7 +1769,19 @@ e_source_registry_init (ESourceRegistry *registry)
 
 	g_mutex_init (&registry->priv->sources_lock);
 
-	registry->priv->settings = g_settings_new (GSETTINGS_SCHEMA);
+	{
+		g_autoptr(GSettingsSchemaSource) schema_source;
+		g_autoptr(GSettingsSchema) schema;
+		schema_source = g_settings_schema_source_new_from_directory("@EDS_GSETTINGS_PATH@",
+									    g_settings_schema_source_get_default(),
+									    TRUE,
+									    NULL);
+		schema = g_settings_schema_source_lookup(schema_source,
+							 GSETTINGS_SCHEMA,
+							 FALSE);
+		registry->priv->settings = g_settings_new_full(schema, NULL,
+							       NULL);
+	}
 
 	g_signal_connect (
 		registry->priv->settings, "changed",
diff --git a/src/libedataserverui/e-reminders-widget.c b/src/libedataserverui/e-reminders-widget.c
index d18474d..418ccc2 100644
--- a/src/libedataserverui/e-reminders-widget.c
+++ b/src/libedataserverui/e-reminders-widget.c
@@ -1874,7 +1874,19 @@ static void
 e_reminders_widget_init (ERemindersWidget *reminders)
 {
 	reminders->priv = e_reminders_widget_get_instance_private (reminders);
-	reminders->priv->settings = g_settings_new ("org.gnome.evolution-data-server.calendar");
+	{
+		g_autoptr(GSettingsSchemaSource) schema_source;
+		g_autoptr(GSettingsSchema) schema;
+		schema_source = g_settings_schema_source_new_from_directory("@EDS_GSETTINGS_PATH@",
+									    g_settings_schema_source_get_default(),
+									    TRUE,
+									    NULL);
+		schema = g_settings_schema_source_lookup(schema_source,
+							 "org.gnome.evolution-data-server.calendar",
+							 FALSE);
+		reminders->priv->settings = g_settings_new_full(schema, NULL,
+								NULL);
+	}
 	reminders->priv->cancellable = g_cancellable_new ();
 	reminders->priv->is_empty = TRUE;
 	reminders->priv->is_mapped = FALSE;
diff --git a/src/services/evolution-source-registry/evolution-source-registry-autoconfig.c b/src/services/evolution-source-registry/evolution-source-registry-autoconfig.c
index 6f03053..127c92e 100644
--- a/src/services/evolution-source-registry/evolution-source-registry-autoconfig.c
+++ b/src/services/evolution-source-registry/evolution-source-registry-autoconfig.c
@@ -706,7 +706,18 @@ evolution_source_registry_merge_autoconfig_sources (ESourceRegistryServer *serve
 	gchar *autoconfig_directory;
 	gint ii;
 
-	settings = g_settings_new ("org.gnome.evolution-data-server");
+	{
+		g_autoptr(GSettingsSchemaSource) schema_source;
+		g_autoptr(GSettingsSchema) schema;
+		schema_source = g_settings_schema_source_new_from_directory("@EDS_GSETTINGS_PATH@",
+									    g_settings_schema_source_get_default(),
+									    TRUE,
+									    NULL);
+		schema = g_settings_schema_source_lookup(schema_source,
+							 "org.gnome.evolution-data-server",
+							 FALSE);
+		settings = g_settings_new_full(schema, NULL, NULL);
+	}
 
 	autoconfig_sources = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, e_autoconfig_free_merge_source_data);
 
diff --git a/src/services/evolution-source-registry/evolution-source-registry-migrate-proxies.c b/src/services/evolution-source-registry/evolution-source-registry-migrate-proxies.c
index d531cb9..3d8807c 100644
--- a/src/services/evolution-source-registry/evolution-source-registry-migrate-proxies.c
+++ b/src/services/evolution-source-registry/evolution-source-registry-migrate-proxies.c
@@ -61,7 +61,18 @@ evolution_source_registry_migrate_proxies (ESourceRegistryServer *server)
 	extension_name = E_SOURCE_EXTENSION_PROXY;
 	extension = e_source_get_extension (source, extension_name);
 
-	settings = g_settings_new (NETWORK_CONFIG_SCHEMA_ID);
+	{
+		g_autoptr(GSettingsSchemaSource) schema_source;
+		g_autoptr(GSettingsSchema) schema;
+		schema_source = g_settings_schema_source_new_from_directory("@EDS_GSETTINGS_PATH@",
+									    g_settings_schema_source_get_default(),
+									    TRUE,
+									    NULL);
+			schema = g_settings_schema_source_lookup(schema_source,
+								 NETWORK_CONFIG_SCHEMA_ID,
+								 FALSE);
+			settings = g_settings_new_full(schema, NULL, NULL);
+	}
 
 	switch (g_settings_get_int (settings, "proxy-type")) {
 		case 1:
diff --git a/src/services/evolution-source-registry/evolution-source-registry.c b/src/services/evolution-source-registry/evolution-source-registry.c
index 1c0a113..d26b059 100644
--- a/src/services/evolution-source-registry/evolution-source-registry.c
+++ b/src/services/evolution-source-registry/evolution-source-registry.c
@@ -181,7 +181,18 @@ main (gint argc,
 
 reload:
 
-	settings = g_settings_new ("org.gnome.evolution-data-server");
+	{
+		g_autoptr(GSettingsSchemaSource) schema_source;
+		g_autoptr(GSettingsSchema) schema;
+		schema_source = g_settings_schema_source_new_from_directory("@EDS_GSETTINGS_PATH@",
+									    g_settings_schema_source_get_default(),
+									    TRUE,
+									    NULL);
+		schema = g_settings_schema_source_lookup(schema_source,
+							 "org.gnome.evolution-data-server",
+							 FALSE);
+		settings = g_settings_new_full(schema, NULL, NULL);
+	}
 
 	if (!opt_disable_migration && !g_settings_get_boolean (settings, "migrated")) {
 		g_settings_set_boolean (settings, "migrated", TRUE);
