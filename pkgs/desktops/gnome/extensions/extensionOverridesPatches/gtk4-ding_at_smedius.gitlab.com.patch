diff --git a/app/enums.js b/app/enums.js
index 2b541f3..b20d3ac 100644
--- a/app/enums.js
+++ b/app/enums.js
@@ -124,7 +124,7 @@ export const THUMBNAILS_DIR = '.cache/thumbnails';
 export const DND_HOVER_TIMEOUT = 500; // In milliseconds
 export const DND_SHELL_HOVER_POLL = 200; // In milliseconds
 export const TOOLTIP_HOVER_TIMEOUT = 1000; // In milliseconds
-export const XDG_EMAIL_CMD = 'xdg-email';
+export const XDG_EMAIL_CMD = '@xdg_utils@/bin/xdg-email';
 export const XDG_EMAIL_CMD_OPTIONS = '--attach';
 export const ZIP_CMD = 'zip';
 export const ZIP_CMD_OPTIONS = '-r';
diff --git a/app/preferences.js b/app/preferences.js
index 6849a86..83a7247 100644
--- a/app/preferences.js
+++ b/app/preferences.js
@@ -29,6 +29,7 @@ const Preferences = class {
         this._programVersion = Data.programversion;
         this._Enums = Data.Enums;
         let schemaSource = GioSSS.get_default();
+        const schemaSourceNautilus = Gio.SettingsSchemaSource.new_from_directory('@nautilus_gsettings_path@', Gio.SettingsSchemaSource.get_default(), true);
         this._desktopManager = null;
 
         // Gtk
@@ -36,7 +37,7 @@ const Preferences = class {
         this.gtkSettings = new Gio.Settings({settings_schema: schemaGtk});
 
         // Gnome Files
-        let schemaObj = schemaSource.lookup(this._Enums.SCHEMA_NAUTILUS, true);
+        let schemaObj = schemaSourceNautilus.lookup(this._Enums.SCHEMA_NAUTILUS, true);
         if (!schemaObj) {
             this.nautilusSettings = null;
             this.CLICK_POLICY_SINGLE = false;
@@ -48,7 +49,7 @@ const Preferences = class {

 
         // Compression
-        const compressionSchema = schemaSource.lookup(this._Enums.SCHEMA_NAUTILUS_COMPRESSION, true);
+        const compressionSchema = schemaSourceNautilus.lookup(this._Enums.SCHEMA_NAUTILUS_COMPRESSION, true);
         if (!compressionSchema)
             this.nautilusCompression = null;
         else
diff --git a/dingManager.js b/dingManager.js
index f1b497f..29f2156 100644
--- a/dingManager.js
+++ b/dingManager.js
@@ -401,7 +401,7 @@ const DingManager = class {
     async _doKillAllOldDesktopProcesses() {
         const procFolder = Gio.File.new_for_path('/proc');
         const processes = await FileUtils.enumerateDir(procFolder);
-        const thisPath = `gjs ${GLib.build_filenamev([
+        const thisPath = `@gjs@/bin/gjs ${GLib.build_filenamev([
             this.path,
             'app',
             'ding.js',
@@ -425,7 +425,7 @@ const DingManager = class {
                 }
 
                 if (contents.startsWith(thisPath)) {
-                    let proc = new Gio.Subprocess({argv: ['/bin/kill', filename]});
+                    let proc = new Gio.Subprocess({argv: ['@util_linux@/bin/kill', filename]});
                     proc.init(null);
                     console.log(`Killing old DING process ${filename}`);
                     await proc.wait_async_promise(null);
