diff -ur plasma-workspace-5.6.1.orig/startkde/startplasma.cmake plasma-workspace-5.6.1/startkde/startplasma.cmake
--- plasma-workspace-5.6.1.orig/startkde/startplasma.cmake	2016-04-05 16:02:38.171589424 +0200
+++ plasma-workspace-5.6.1/startkde/startplasma.cmake	2016-04-06 23:26:48.218952829 +0200
@@ -26,12 +26,6 @@
 
 [ -r $configDir/startupconfig ] && . $configDir/startupconfig
 
-if test "$kcmfonts_general_forcefontdpi" -ne 0; then
-    xrdb -quiet -merge -nocpp <<EOF
-Xft.dpi: $kcmfonts_general_forcefontdpi
-EOF
-fi
-
 dl=$DESKTOP_LOCKED
 unset DESKTOP_LOCKED # Don't want it in the environment
 
@@ -40,7 +34,7 @@
   # the splashscreen and progress indicator
   case "$ksplashrc_ksplash_engine" in
     KSplashQML)
-      ksplash_pid=`ksplashqml "${ksplashrc_ksplash_theme}" --pid`
+      ksplash_pid=`@out@/bin/ksplashqml "${ksplashrc_ksplash_theme}" --pid`
       ;;
     None)
       ;;
@@ -71,7 +65,7 @@
 usr_fdir=$HOME/.fonts
 
 if test -n "$KDEDIRS"; then
-  kdedirs_first=`echo "$KDEDIRS"|sed -e 's/:.*//'`
+  kdedirs_first=`echo "$KDEDIRS" | @gnused@/bin/sed -e 's/:.*//'`
   sys_odir=$kdedirs_first/share/fonts/override
   sys_fdir=$kdedirs_first/share/fonts
 else
@@ -84,13 +78,13 @@
 # add the user's dirs to the font path, as they might simply have been made
 # read-only by the administrator, for whatever reason.
 
-test -d "$sys_odir" && xset +fp "$sys_odir"
-test -d "$usr_odir" && (mkfontdir "$usr_odir" ; xset +fp "$usr_odir")
-test -d "$usr_fdir" && (mkfontdir "$usr_fdir" ; xset fp+ "$usr_fdir")
-test -d "$sys_fdir" && xset fp+ "$sys_fdir"
+test -d "$sys_odir" && @xset@/bin/xset +fp "$sys_odir"
+test -d "$usr_odir" && ( @mkfontdir@/bin/mkfontdir "$usr_odir" ; @xset@/bin/xset +fp "$usr_odir")
+test -d "$usr_fdir" && ( @mkfontdir@/bin/mkfontdir "$usr_fdir" ; @xset@/bin/xset fp+ "$usr_fdir")
+test -d "$sys_fdir" && @xset@/bin/xset fp+ "$sys_fdir"
 
 # Ask X11 to rebuild its font list.
-xset fp rehash
+@xset@/bin/xset fp rehash
 
 # Set a left cursor instead of the standard X11 "X" cursor, since I've heard
 # from some users that they're confused and don't know what to do. This is
@@ -100,7 +94,7 @@
 # If the user has overwritten fonts, the cursor font may be different now
 # so don't move this up.
 #
-xsetroot -cursor_name left_ptr
+@xsetroot@/bin/xsetroot -cursor_name left_ptr
 
 # Get Ghostscript to look into user's KDE fonts dir for additional Fontmap
 if test -n "$GS_LIB" ; then
@@ -114,20 +108,26 @@
 echo 'startplasma: Starting up...'  1>&2
 
 # export our session variables to the Xwayland server
-xprop -root -f KDE_FULL_SESSION 8t -set KDE_FULL_SESSION true
-xprop -root -f KDE_SESSION_VERSION 32c -set KDE_SESSION_VERSION 5
+@xprop@/bin/xprop -root -f KDE_FULL_SESSION 8t -set KDE_FULL_SESSION true
+@xprop@/bin/xprop -root -f KDE_SESSION_VERSION 32c -set KDE_SESSION_VERSION 5
 
 # We set LD_BIND_NOW to increase the efficiency of kdeinit.
 # kdeinit unsets this variable before loading applications.
-LD_BIND_NOW=true @CMAKE_INSTALL_FULL_LIBEXECDIR_KF5@/start_kdeinit_wrapper --kded +kcminit_startup
+# XDG_DATA_DIRS= is to long (>4096) for kdeinit
+XDG_DATA_DIRS=$XDG_DATA_DIRS_OLD XDG_DATA_DIRS_OLD= LD_BIND_NOW=true @kinit@/lib/libexec/kf5/start_kdeinit_wrapper --kded +kcminit_startup
 if test $? -ne 0; then
   # Startup error
   echo 'startplasma: Could not start kdeinit5. Check your installation.'  1>&2
   test -n "$ksplash_pid" && kill "$ksplash_pid" 2>/dev/null
-  xmessage -geometry 500x100 "Could not start kdeinit5. Check your installation."
+  @xmessage@/bin/xmessage -geometry 500x100 "Could not start kdeinit5. Check your installation."
   exit 1
 fi
 
+# (NixOS) We run kbuildsycoca5 before starting the user session because things
+# may be missing or moved if they have run nixos-rebuild and it may not be
+# possible for them to start Konsole to run it manually!
+@kservice@/bin/kbuildsycoca5
+
 # finally, give the session control to the session manager
 # see kdebase/ksmserver for the description of the rest of the startup sequence
 # if the KDEWM environment variable has been set, then it will be used as KDE's
@@ -141,27 +141,27 @@
 # If the session should be locked from the start (locked autologin),
 # lock now and do the rest of the KDE startup underneath the locker.
 KSMSERVEROPTIONS=" --no-lockscreen"
-kwrapper5 @CMAKE_INSTALL_FULL_BINDIR@/ksmserver $KDEWM $KSMSERVEROPTIONS
+@kinit@/bin/kwrapper5 @CMAKE_INSTALL_FULL_BINDIR@/ksmserver $KDEWM $KSMSERVEROPTIONS
 if test $? -eq 255; then
   # Startup error
   echo 'startplasma: Could not start ksmserver. Check your installation.'  1>&2
   test -n "$ksplash_pid" && kill "$ksplash_pid" 2>/dev/null
-  xmessage -geometry 500x100 "Could not start ksmserver. Check your installation."
+  @xmessage@/bin/xmessage -geometry 500x100 "Could not start ksmserver. Check your installation."
 fi
 
-wait_drkonqi=`kreadconfig5 --file startkderc --group WaitForDrKonqi --key Enabled --default true`
+wait_drkonqi=`@kconfig@/bin/kreadconfig5 --file startkderc --group WaitForDrKonqi --key Enabled --default true`
 
 if test x"$wait_drkonqi"x = x"true"x ; then
     # wait for remaining drkonqi instances with timeout (in seconds)
-    wait_drkonqi_timeout=`kreadconfig5 --file startkderc --group WaitForDrKonqi --key Timeout --default 900`
+    wait_drkonqi_timeout=`@kinit@/bin/kreadconfig5 --file startkderc --group WaitForDrKonqi --key Timeout --default 900`
     wait_drkonqi_counter=0
-    while $qdbus | grep "^[^w]*org.kde.drkonqi" > /dev/null ; do
+    while @qttools@/bin/qdbus | grep "^[^w]*org.kde.drkonqi" > /dev/null ; do
         sleep 5
         wait_drkonqi_counter=$((wait_drkonqi_counter+5))
         if test "$wait_drkonqi_counter" -ge "$wait_drkonqi_timeout" ; then
             # ask remaining drkonqis to die in a graceful way
-            $qdbus | grep 'org.kde.drkonqi-' | while read address ; do
-                $qdbus "$address" "/MainApplication" "quit"
+            @qttools@/bin/qdbus | @gnugrep@/bin/grep 'org.kde.drkonqi-' | while read address ; do
+                @qttools@/bin/qdbus "$address" "/MainApplication" "quit"
             done
             break
         fi
@@ -173,12 +173,12 @@
 test -n "$ksplash_pid" && kill "$ksplash_pid" 2>/dev/null
 
 # Clean up
-kdeinit5_shutdown
+@kinit@/bin/kdeinit5_shutdown
 
 unset KDE_FULL_SESSION
-xprop -root -remove KDE_FULL_SESSION
+@xprop@/bin/xprop -root -remove KDE_FULL_SESSION
 unset KDE_SESSION_VERSION
-xprop -root -remove KDE_SESSION_VERSION
+@xprop@/bin/xprop -root -remove KDE_SESSION_VERSION
 unset KDE_SESSION_UID
 
 echo 'startplasma: Done.'  1>&2
diff -ur plasma-workspace-5.6.1.orig/startkde/startplasmacompositor.cmake plasma-workspace-5.6.1/startkde/startplasmacompositor.cmake
--- plasma-workspace-5.6.1.orig/startkde/startplasmacompositor.cmake	2016-04-05 16:02:38.171589424 +0200
+++ plasma-workspace-5.6.1/startkde/startplasmacompositor.cmake	2016-04-06 23:54:02.495264026 +0200
@@ -3,19 +3,6 @@
 #  DEFAULT KDE STARTUP SCRIPT ( @PROJECT_VERSION@ )
 #
 
-# in case we have been started with full pathname spec without being in PATH
-bindir=`echo "$0" | sed -n 's,^\(/.*\)/[^/][^/]*$,\1,p'`
-if [ -n "$bindir" ]; then
-  qbindir=`qtpaths --binaries-dir`
-  qdbus=$qbindir/qdbus
-  case $PATH in
-    $bindir|$bindir:*|*:$bindir|*:$bindir:*) ;;
-    *) PATH=$bindir:$PATH; export PATH;;
-  esac
-else
-  qdbus=qdbus
-fi
-
 # We need to create config folder so we can write startupconfigkeys
 if [  ${XDG_CONFIG_HOME} ]; then
   configDir=$XDG_CONFIG_HOME;
@@ -62,39 +49,7 @@
 EOF
 }
 
-# Make sure the Oxygen font is installed
-# This is necessary for setups where CMAKE_INSTALL_PREFIX
-# is not in /usr. fontconfig looks in /usr, ~/.fonts and
-# $XDG_DATA_HOME for fonts. In this case, we symlink the
-# Oxygen font under ${XDG_DATA_HOME} and make it known to
-# fontconfig
-
-usr_share="/usr/share"
-install_share="@KDE_INSTALL_FULL_DATADIR@"
-
-if [ ! $install_share = $usr_share ]; then
-
-    if [ ${XDG_DATA_HOME} ]; then
-        fontsDir="${XDG_DATA_HOME}/fonts"
-    else
-        fontsDir="${HOME}/.fonts"
-    fi
-
-    test -d $fontsDir || {
-        mkdir -p $fontsDir
-    }
-
-    oxygenDir=$fontsDir/truetype/oxygen
-    prefixDir="@KDE_INSTALL_FULL_DATADIR@/fonts/truetype/oxygen"
-
-    # if the oxygen dir doesn't exist, create a symlink to be sure that the
-    # Oxygen font is available to the user
-    test -d $oxygenDir || test -d $prefixDir && {
-        test -h $oxygenDir || ln -s $prefixDir $oxygenDir && fc-cache $oxygenDir
-    }
-fi
-
-kstartupconfig5
+@out@/bin/kstartupconfig5
 returncode=$?
 if test $returncode -ne 0; then
     exit 1
@@ -105,9 +60,11 @@
     export QT_DEVICE_PIXEL_RATIO=$kdeglobals_kscreen_scalefactor
 fi
 
+XCURSOR_PATH=~/.icons:$(echo "$XDG_DATA_DIRS" | @coreutils@/bin/tr ":" "\n" | @gnused@/bin/sed 's,$,/icons,g' | @coreutils@/bin/tr "\n" ":")
+export XCURSOR_PATH
+
 # XCursor mouse theme needs to be applied here to work even for kded or ksmserver
 if test -n "$kcminputrc_mouse_cursortheme" -o -n "$kcminputrc_mouse_cursorsize" ; then
-    @EXPORT_XCURSOR_PATH@
 
     # TODO: is kapplymousetheme a core app?
     #kapplymousetheme "$kcminputrc_mouse_cursortheme" "$kcminputrc_mouse_cursorsize"
@@ -139,7 +96,7 @@
 # better use the Autostart folder.
 
 # TODO: Use GenericConfigLocation once we depend on Qt 5.4
-scriptpath=`qtpaths --paths ConfigLocation | tr ':' '\n' | sed 's,$,/plasma-workspace,g'`
+scriptpath=`@qttools@/bin/qtpaths --paths ConfigLocation | tr ':' '\n' | sed 's,$,/plasma-workspace,g'`
 
 # Add /env/ to the directory to locate the scripts to be sourced
 for prefix in `echo $scriptpath`; do
@@ -160,7 +117,7 @@
 export XDG_DATA_DIRS
 
 # Make sure that D-Bus is running
-if $qdbus >/dev/null 2>/dev/null; then
+if @qttools@/bin/qdbus >/dev/null 2>/dev/null; then
     : # ok
 else
     echo 'startplasmacompositor: Could not start D-Bus. Can you call qdbus?'  1>&2
@@ -219,7 +176,7 @@
   exit 1
 fi
 
-@KWIN_WAYLAND_BIN_PATH@ --xwayland --libinput --exit-with-session=@CMAKE_INSTALL_FULL_LIBEXECDIR@/startplasma
+XDG_DATA_DIRS_OLD=$XDG_DATA_DIRS @KWIN_WAYLAND_BIN_PATH@ --xwayland --libinput --exit-with-session=@CMAKE_INSTALL_FULL_LIBEXECDIR@/startplasma
 
 echo 'startplasmacompositor: Shutting down...'  1>&2
 
