# There are underlying problems in Nixpkgs' Qt5 packaging that cause needless bloat in this package & the earlier Qt5 changes
# * qtPrepareTool function is broken, unable to find Perl scripts (https://github.com/NixOS/nixpkgs/issues/76080)
# * qmlplugindump in qtbase needs wrapping with QT_PLUGIN_PATH to run correctly
# * wrapper.sh script generated by Qt overrides QML2_IMPORT_PATH
# * pkg-config files generated by Qt for Qt modules in external derivations like this have paths to qtbase
{ mkDerivation, fetchFromGitHub, lib
, qmake, perl, pkg-config
, qtbase, glib, libnih, qtpim, qtquickcontrols2, qtsystems, lttng-ust, qtgraphicaleffects, qtfeedback, python3
}:

mkDerivation rec {
  pname = "ubuntu-ui-toolkit-unstable";
  version = "2020-11-06";

  src = fetchFromGitHub {
    owner = "ubports";
    repo = "ubuntu-ui-toolkit";
    # current branch to follow is "xenial_-_qt-5-12"
    rev = "201d27b3efcdcb10d14f8aedada7b28a463b3eac";
    sha256 = "1c7pb13h43rgzyyiim6dfar366krn1gmy4gqkqimhd5gff6lij0q";
  };

  nativeBuildInputs = [ qmake perl pkg-config ];

  buildInputs = [ qtbase glib libnih qtpim qtquickcontrols2 qtsystems lttng-ust qtgraphicaleffects qtfeedback python3 ];

  postPatch = ''
    substituteInPlace features/ubuntu_common.prf \
      --replace 'CONFIG += warnings_are_errors' 'CONFIG += warnings_are_errors''\nQMAKE_CXXFLAGS_WARN_ON += -Wno-error=deprecated-declarations'
    substituteInPlace tests/unit/plugin_dependency.pri \
      --replace '-Werror' '-Werror -Wno-error=deprecated-declarations'
    substituteInPlace tests/tests.pro \
      --replace 'PYTHONDIR =' 'PYTHONDIR = ${placeholder "out"}/${python3.sitePackages} #'
    substituteInPlace po/po.pro \
      --replace 'mo_targetpath = $(INSTALL_ROOT)''\$$[QT_INSTALL_PREFIX]' 'mo_targetpath = ${placeholder "out"}'
    for tkTarget in app-launch-profiler ubuntu-ui-toolkit-launcher; do
      substituteInPlace "$tkTarget/$tkTarget".pro \
        --replace 'installPath = ''\$$[QT_INSTALL_PREFIX]' 'installPath = ${placeholder "out"}'
    done
    substituteInPlace apicheck/apicheck.pro \
      --replace 'installPath = ''\$$[QT_INSTALL_LIBS]' 'installPath = ${placeholder "out"}/lib'

    # wrapper script calls qmlplugindump, crashes
    # > Could not find the Qt platform plugin "minimal" in ""
    # > Available platform plugins are: wayland-egl, wayland, wayland-xcomposite-egl, wayland-xcomposite-glx.
    export QT_PLUGIN_PATH=${qtbase.bin}/lib/qt-${qtbase.version}/plugins
  '';

  qmakeFlags = [
    "CONFIG+=no_docs"
  ];

  postConfigure = ''
    # syncqt.pl from qtbase has broken shebang: copy, fix and put in PATH
    cp ${qtbase.dev}/bin/syncqt.pl syncqt.pl
    patchShebangs syncqt.pl
    export PATH="$PWD":"$PATH"
    echo ${python3.sitePackages}
  '';

  preInstall = ''
    # Qt-generated wrapper script lacks QML paths to dependencies
    for qmlModule in Components PerformanceMetrics Test; do
      echo $qmlModule
      substituteInPlace src/imports/$qmlModule/wrapper.sh \
        --replace 'QML2_IMPORT_PATH=' 'QML2_IMPORT_PATH=${qtquickcontrols2.bin}/lib/qt-${qtbase.version}/qml:${qtgraphicaleffects}/lib/qt-${qtbase.version}/qml:${qtfeedback.bin}/lib/qt-${qtbase.version}/qml:'
      cat src/imports/$qmlModule/wrapper.sh
    done
  '';

  postInstall = ''
    # Qt-generated pkg-config files have qtbase's prefix
    for pcFile in Ubuntu{Gestures,Metrics,Toolkit}.pc; do
      substituteInPlace $out/lib/pkgconfig/$pcFile \
        --replace "prefix=${if (lib.versions.majorMinor qtbase.version) == "5.12" then qtbase.out else qtbase.dev}" "prefix=$out" \
        --replace "libdir=${qtbase.out}" 'libdir=''\${prefix}' \
        --replace "includedir=${qtbase.dev}" 'includedir=''\${prefix}'
    done
  '';

  meta = with lib; {
    description = "The Ubuntu UI toolkit used in Ubuntu Touch";
    longDescription = ''
      This project consists of a set of QML components to ease the creation of
      beautiful applications in QML for Ubuntu.

      QML alone lacks built-in components for basic widgets like Button, Slider,
      Scrollbar, etc, meaning a developer has to build them from scratch.
      This toolkit aims to stop this duplication of work, supplying beautiful
      components ready-made and with a clear and consistent API.

      These components are fully themeable so the look and feel can be easily
      customized. Resolution independence technology is built in so UIs are scaled to
      best suit the display.
    '';
    homepage = "https://launchpad.net/ubuntu-ui-toolkit";
    license = with licenses; [ lgpl3Only cc-by-sa-30 ];
    maintainers = with maintainers; [ OPNA2608 ];
    platforms = platforms.linux;
  };
}
