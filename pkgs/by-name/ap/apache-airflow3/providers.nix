# Warning: generated by update-providers.py, do not update manually
{
  airbyte = {
    deps = [ "requests" ];
    imports = [ "airflow.providers.airbyte.get_provider_info" ];
    version = "5.2.3";
  };

  alibaba = {
    deps = [ "oss2" ];
    imports = [ "airflow.providers.alibaba.get_provider_info" ];
    version = "3.2.2";
  };

  amazon = {
    deps = [
      "aiobotocore"
      "asgiref"
      "boto3"
      "botocore"
      "inflection"
      "jmespath"
      "jsonpath-ng"
      "lxml"
      "marshmallow"
      "pyathena"
      "python3-saml"
      "redshift-connector"
      "s3fs"
      "xmlsec"
    ];
    imports = [ "airflow.providers.amazon.get_provider_info" ];
    version = "9.13.0";
  };

  apache_beam = {
    deps = [
      "apache-beam"
      "numpy"
      "pyarrow"
    ];
    imports = [ "airflow.providers.apache.beam.get_provider_info" ];
    version = "6.1.4";
  };

  apache_cassandra = {
    deps = [ "cassandra-driver" ];
    imports = [ "airflow.providers.apache.cassandra.get_provider_info" ];
    version = "3.8.2";
  };

  apache_drill = {
    deps = [ ];
    imports = [ "airflow.providers.apache.drill.get_provider_info" ];
    version = "3.1.2";
  };

  apache_druid = {
    deps = [ "pydruid" ];
    imports = [ "airflow.providers.apache.druid.get_provider_info" ];
    version = "4.3.0";
  };

  apache_flink = {
    deps = [ "cryptography" ];
    imports = [ "airflow.providers.apache.flink.get_provider_info" ];
    version = "1.7.2";
  };

  apache_hdfs = {
    deps = [
      "hdfs"
      "pandas"
    ];
    imports = [ "airflow.providers.apache.hdfs.get_provider_info" ];
    version = "4.10.2";
  };

  apache_hive = {
    deps = [
      "jmespath"
      "pandas"
      "thrift"
    ];
    imports = [ "airflow.providers.apache.hive.get_provider_info" ];
    version = "9.1.2";
  };

  apache_iceberg = {
    deps = [ ];
    imports = [ "airflow.providers.apache.iceberg.get_provider_info" ];
    version = "1.3.2";
  };

  apache_impala = {
    deps = [ "kerberos" ];
    imports = [ "airflow.providers.apache.impala.get_provider_info" ];
    version = "1.7.2";
  };

  apache_kafka = {
    deps = [
      "asgiref"
      "confluent-kafka"
    ];
    imports = [ "airflow.providers.apache.kafka.get_provider_info" ];
    version = "1.10.3";
  };

  apache_kylin = {
    deps = [ ];
    imports = [ "airflow.providers.apache.kylin.get_provider_info" ];
    version = "3.9.2";
  };

  apache_livy = {
    deps = [
      "aiohttp"
      "asgiref"
    ];
    imports = [ "airflow.providers.apache.livy.get_provider_info" ];
    version = "4.4.2";
  };

  apache_pig = {
    deps = [ ];
    imports = [ "airflow.providers.apache.pig.get_provider_info" ];
    version = "4.7.2";
  };

  apache_pinot = {
    deps = [ ];
    imports = [ "airflow.providers.apache.pinot.get_provider_info" ];
    version = "4.8.2";
  };

  apache_spark = {
    deps = [
      "grpcio-status"
      "pyspark"
    ];
    imports = [ "airflow.providers.apache.spark.get_provider_info" ];
    version = "5.3.2";
  };

  apache_tinkerpop = {
    deps = [ "gremlinpython" ];
    imports = [ "airflow.providers.apache.tinkerpop.get_provider_info" ];
    version = "1.0.3";
  };

  apprise = {
    deps = [ "apprise" ];
    imports = [ "airflow.providers.apprise.get_provider_info" ];
    version = "2.1.2";
  };

  arangodb = {
    deps = [ "python-arango" ];
    imports = [ "airflow.providers.arangodb.get_provider_info" ];
    version = "2.8.2";
  };

  asana = {
    deps = [ "asana" ];
    imports = [ "airflow.providers.asana.get_provider_info" ];
    version = "2.10.2";
  };

  atlassian_jira = {
    deps = [ "atlassian-python-api" ];
    imports = [ "airflow.providers.atlassian.jira.get_provider_info" ];
    version = "3.1.2";
  };

  celery = {
    deps = [
      "celery"
      "flower"
    ];
    imports = [ "airflow.providers.celery.get_provider_info" ];
    version = "3.12.3";
  };

  cloudant = {
    deps = [ ];
    imports = [ "airflow.providers.cloudant.get_provider_info" ];
    version = "4.2.2";
  };

  cncf_kubernetes = {
    deps = [
      "aiofiles"
      "asgiref"
      "cryptography"
      "kubernetes"
      "kubernetes-asyncio"
    ];
    imports = [ "airflow.providers.cncf.kubernetes.get_provider_info" ];
    version = "10.8.0";
  };

  cohere = {
    deps = [ "cohere" ];
    imports = [ "airflow.providers.cohere.get_provider_info" ];
    version = "1.5.3";
  };

  common_compat = {
    deps = [ ];
    imports = [ "airflow.providers.common.compat.get_provider_info" ];
    version = "1.7.3";
  };

  common_io = {
    deps = [ ];
    imports = [ "airflow.providers.common.io.get_provider_info" ];
    version = "1.6.2";
  };

  common_messaging = {
    deps = [ ];
    imports = [ "airflow.providers.common.messaging.get_provider_info" ];
    version = "2.0.0";
  };

  common_sql = {
    deps = [
      "methodtools"
      "more-itertools"
      "pandas"
      "polars"
      "sqlparse"
    ];
    imports = [ "airflow.providers.common.sql.get_provider_info" ];
    version = "1.28.0";
  };

  databricks = {
    deps = [
      "aiohttp"
      "azure-identity"
      "databricks-sdk"
      "databricks-sql-connector"
      "mergedeep"
      "pandas"
      "pyarrow"
      "requests"
    ];
    imports = [ "airflow.providers.databricks.get_provider_info" ];
    version = "7.7.2";
  };

  datadog = {
    deps = [ "datadog" ];
    imports = [ "airflow.providers.datadog.get_provider_info" ];
    version = "3.9.2";
  };

  dbt_cloud = {
    deps = [
      "aiohttp"
      "asgiref"
    ];
    imports = [ "airflow.providers.dbt.cloud.get_provider_info" ];
    version = "4.4.3";
  };

  dingding = {
    deps = [ ];
    imports = [ "airflow.providers.dingding.get_provider_info" ];
    version = "3.8.2";
  };

  discord = {
    deps = [ ];
    imports = [ "airflow.providers.discord.get_provider_info" ];
    version = "3.10.2";
  };

  docker = {
    deps = [
      "docker"
      "python-dotenv"
    ];
    imports = [ "airflow.providers.docker.get_provider_info" ];
    version = "4.4.2";
  };

  edge3 = {
    deps = [
      "pydantic"
      "retryhttp"
    ];
    imports = [ "airflow.providers.edge3.get_provider_info" ];
    version = "1.2.0";
  };

  elasticsearch = {
    deps = [ "elasticsearch" ];
    imports = [ "airflow.providers.elasticsearch.get_provider_info" ];
    version = "6.3.2";
  };

  exasol = {
    deps = [ "pandas" ];
    imports = [ "airflow.providers.exasol.get_provider_info" ];
    version = "4.8.2";
  };

  fab = {
    deps = [
      "blinker"
      "connexion"
      "flask"
      "flask-appbuilder"
      "flask-limiter"
      "flask-login"
      "flask-session"
      "flask-wtf"
      "jmespath"
      "kerberos"
      "werkzeug"
      "wtforms"
    ];
    imports = [ "airflow.providers.fab.get_provider_info" ];
    version = "2.4.2";
  };

  facebook = {
    deps = [ ];
    imports = [ "airflow.providers.facebook.get_provider_info" ];
    version = "3.8.2";
  };

  ftp = {
    deps = [ ];
    imports = [ "airflow.providers.ftp.get_provider_info" ];
    version = "3.13.2";
  };

  git = {
    deps = [ "gitpython" ];
    imports = [ "airflow.providers.git.get_provider_info" ];
    version = "0.0.7";
  };

  github = {
    deps = [ "pygithub" ];
    imports = [ "airflow.providers.github.get_provider_info" ];
    version = "2.9.2";
  };

  google = {
    deps = [
      "apache-beam"
      "asgiref"
      "dill"
      "gcsfs"
      "google-api-core"
      "google-api-python-client"
      "google-auth"
      "google-auth-httplib2"
      "google-cloud-automl"
      "google-cloud-bigquery"
      "google-cloud-bigquery-datatransfer"
      "google-cloud-bigquery-storage"
      "google-cloud-bigtable"
      "google-cloud-compute"
      "google-cloud-container"
      "google-cloud-datacatalog"
      "google-cloud-dataproc"
      "google-cloud-dlp"
      "google-cloud-kms"
      "google-cloud-language"
      "google-cloud-logging"
      "google-cloud-monitoring"
      "google-cloud-pubsub"
      "google-cloud-redis"
      "google-cloud-secret-manager"
      "google-cloud-spanner"
      "google-cloud-speech"
      "google-cloud-storage"
      "google-cloud-tasks"
      "google-cloud-texttospeech"
      "google-cloud-translate"
      "google-cloud-videointelligence"
      "google-cloud-vision"
      "google-cloud-workflows"
      "grpcio-gcp"
      "httpx"
      "immutabledict"
      "pandas"
      "plyvel"
      "proto-plus"
      "pyarrow"
      "pyopenssl"
      "python-slugify"
      "ray"
      "tenacity"
      "types-protobuf"
    ];
    imports = [ "airflow.providers.google.get_provider_info" ];
    version = "17.2.0";
  };

  grpc = {
    deps = [
      "google-auth"
      "google-auth-httplib2"
      "grpcio"
    ];
    imports = [ "airflow.providers.grpc.get_provider_info" ];
    version = "3.8.2";
  };

  hashicorp = {
    deps = [
      "boto3"
      "hvac"
    ];
    imports = [ "airflow.providers.hashicorp.get_provider_info" ];
    version = "4.3.2";
  };

  http = {
    deps = [
      "aiohttp"
      "asgiref"
      "requests"
      "requests-toolbelt"
    ];
    imports = [ "airflow.providers.http.get_provider_info" ];
    version = "5.3.4";
  };

  imap = {
    deps = [ ];
    imports = [ "airflow.providers.imap.get_provider_info" ];
    version = "3.9.2";
  };

  influxdb = {
    deps = [
      "influxdb-client"
      "requests"
    ];
    imports = [ "airflow.providers.influxdb.get_provider_info" ];
    version = "2.9.3";
  };

  jdbc = {
    deps = [ "jaydebeapi" ];
    imports = [ "airflow.providers.jdbc.get_provider_info" ];
    version = "5.2.3";
  };

  jenkins = {
    deps = [ "python-jenkins" ];
    imports = [ "airflow.providers.jenkins.get_provider_info" ];
    version = "4.1.2";
  };

  keycloak = {
    deps = [ "python-keycloak" ];
    imports = [ "airflow.providers.keycloak.get_provider_info" ];
    version = "0.1.0";
  };

  microsoft_azure = {
    deps = [
      "adal"
      "adlfs"
      "azure-batch"
      "azure-cosmos"
      "azure-datalake-store"
      "azure-identity"
      "azure-keyvault-secrets"
      "azure-kusto-data"
      "azure-mgmt-containerinstance"
      "azure-mgmt-containerregistry"
      "azure-mgmt-cosmosdb"
      "azure-mgmt-datafactory"
      "azure-mgmt-datalake-store"
      "azure-mgmt-resource"
      "azure-mgmt-storage"
      "azure-servicebus"
      "azure-storage-blob"
      "azure-storage-file-datalake"
      "azure-storage-file-share"
      "azure-synapse-artifacts"
      "azure-synapse-spark"
      "microsoft-kiota-abstractions"
      "microsoft-kiota-authentication-azure"
      "microsoft-kiota-http"
      "microsoft-kiota-serialization-json"
      "microsoft-kiota-serialization-text"
      "msal-extensions"
      "msgraph-core"
    ];
    imports = [ "airflow.providers.microsoft.azure.get_provider_info" ];
    version = "12.7.0";
  };

  microsoft_mssql = {
    deps = [
      "methodtools"
      "pymssql"
    ];
    imports = [ "airflow.providers.microsoft.mssql.get_provider_info" ];
    version = "4.3.2";
  };

  microsoft_psrp = {
    deps = [ "pypsrp" ];
    imports = [ "airflow.providers.microsoft.psrp.get_provider_info" ];
    version = "3.1.2";
  };

  microsoft_winrm = {
    deps = [ "pywinrm" ];
    imports = [ "airflow.providers.microsoft.winrm.get_provider_info" ];
    version = "3.11.0";
  };

  mongo = {
    deps = [
      "dnspython"
      "pymongo"
    ];
    imports = [ "airflow.providers.mongo.get_provider_info" ];
    version = "5.2.2";
  };

  mysql = {
    deps = [
      "aiomysql"
      "mysqlclient"
    ];
    imports = [ "airflow.providers.mysql.get_provider_info" ];
    version = "6.3.4";
  };

  neo4j = {
    deps = [ "neo4j" ];
    imports = [ "airflow.providers.neo4j.get_provider_info" ];
    version = "3.10.1";
  };

  odbc = {
    deps = [ "pyodbc" ];
    imports = [ "airflow.providers.odbc.get_provider_info" ];
    version = "4.10.2";
  };

  openai = {
    deps = [ "openai" ];
    imports = [ "airflow.providers.openai.get_provider_info" ];
    version = "1.6.2";
  };

  openfaas = {
    deps = [ ];
    imports = [ "airflow.providers.openfaas.get_provider_info" ];
    version = "3.8.2";
  };

  openlineage = {
    deps = [ "attrs" ];
    imports = [ "airflow.providers.openlineage.get_provider_info" ];
    version = "2.7.0";
  };

  opensearch = {
    deps = [ "opensearch-py" ];
    imports = [ "airflow.providers.opensearch.get_provider_info" ];
    version = "1.7.2";
  };

  opsgenie = {
    deps = [ ];
    imports = [ "airflow.providers.opsgenie.get_provider_info" ];
    version = "5.9.2";
  };

  oracle = {
    deps = [
      "numpy"
      "oracledb"
    ];
    imports = [ "airflow.providers.oracle.get_provider_info" ];
    version = "4.2.0";
  };

  pagerduty = {
    deps = [ ];
    imports = [ "airflow.providers.pagerduty.get_provider_info" ];
    version = "5.0.2";
  };

  papermill = {
    deps = [
      "ipykernel"
      "nbconvert"
      "pandas"
      "papermill"
    ];
    imports = [ "airflow.providers.papermill.get_provider_info" ];
    version = "3.11.2";
  };

  pgvector = {
    deps = [ "pgvector" ];
    imports = [ "airflow.providers.pgvector.get_provider_info" ];
    version = "1.5.2";
  };

  pinecone = {
    deps = [ ];
    imports = [ "airflow.providers.pinecone.get_provider_info" ];
    version = "2.3.4";
  };

  postgres = {
    deps = [
      "asyncpg"
      "pandas"
      "polars"
      "psycopg"
      "psycopg2-binary"
    ];
    imports = [ "airflow.providers.postgres.get_provider_info" ];
    version = "6.3.0";
  };

  presto = {
    deps = [
      "pandas"
      "presto-python-client"
    ];
    imports = [ "airflow.providers.presto.get_provider_info" ];
    version = "5.9.2";
  };

  qdrant = {
    deps = [ "qdrant-client" ];
    imports = [ "airflow.providers.qdrant.get_provider_info" ];
    version = "1.4.3";
  };

  redis = {
    deps = [ "redis" ];
    imports = [ "airflow.providers.redis.get_provider_info" ];
    version = "4.3.0";
  };

  salesforce = {
    deps = [
      "pandas"
      "simple-salesforce"
    ];
    imports = [ "airflow.providers.salesforce.get_provider_info" ];
    version = "5.11.3";
  };

  samba = {
    deps = [ "smbprotocol" ];
    imports = [ "airflow.providers.samba.get_provider_info" ];
    version = "4.11.0";
  };

  segment = {
    deps = [ ];
    imports = [ "airflow.providers.segment.get_provider_info" ];
    version = "3.8.2";
  };

  sendgrid = {
    deps = [
      "sendgrid"
      "werkzeug"
    ];
    imports = [ "airflow.providers.sendgrid.get_provider_info" ];
    version = "4.1.3";
  };

  sftp = {
    deps = [
      "asyncssh"
      "paramiko"
      "pysftp"
    ];
    imports = [ "airflow.providers.sftp.get_provider_info" ];
    version = "5.4.0";
  };

  singularity = {
    deps = [ "spython" ];
    imports = [ "airflow.providers.singularity.get_provider_info" ];
    version = "3.8.2";
  };

  slack = {
    deps = [ "slack-sdk" ];
    imports = [ "airflow.providers.slack.get_provider_info" ];
    version = "9.2.0";
  };

  smtp = {
    deps = [ ];
    imports = [ "airflow.providers.smtp.get_provider_info" ];
    version = "2.2.1";
  };

  snowflake = {
    deps = [
      "pandas"
      "pyarrow"
      "snowflake-connector-python"
      "snowflake-sqlalchemy"
    ];
    imports = [ "airflow.providers.snowflake.get_provider_info" ];
    version = "6.5.3";
  };

  sqlite = {
    deps = [ ];
    imports = [ "airflow.providers.sqlite.get_provider_info" ];
    version = "4.1.2";
  };

  ssh = {
    deps = [
      "paramiko"
      "sshtunnel"
    ];
    imports = [ "airflow.providers.ssh.get_provider_info" ];
    version = "4.1.3";
  };

  standard = {
    deps = [ ];
    imports = [ "airflow.providers.standard.get_provider_info" ];
    version = "1.7.0";
  };

  tableau = {
    deps = [ "tableauserverclient" ];
    imports = [ "airflow.providers.tableau.get_provider_info" ];
    version = "5.2.0";
  };

  telegram = {
    deps = [ "python-telegram-bot" ];
    imports = [ "airflow.providers.telegram.get_provider_info" ];
    version = "4.8.2";
  };

  teradata = {
    deps = [ ];
    imports = [ "airflow.providers.teradata.get_provider_info" ];
    version = "3.2.1";
  };

  trino = {
    deps = [ "pandas" ];
    imports = [ "airflow.providers.trino.get_provider_info" ];
    version = "6.3.3";
  };

  vertica = {
    deps = [ "vertica-python" ];
    imports = [ "airflow.providers.vertica.get_provider_info" ];
    version = "4.1.2";
  };

  weaviate = {
    deps = [
      "httpx"
      "pandas"
      "weaviate-client"
    ];
    imports = [ "airflow.providers.weaviate.get_provider_info" ];
    version = "3.2.3";
  };

  yandex = {
    deps = [ ];
    imports = [ "airflow.providers.yandex.get_provider_info" ];
    version = "4.2.0";
  };

  ydb = {
    deps = [ ];
    imports = [ "airflow.providers.ydb.get_provider_info" ];
    version = "2.2.2";
  };

  zendesk = {
    deps = [ ];
    imports = [ "airflow.providers.zendesk.get_provider_info" ];
    version = "4.10.2";
  };

}
