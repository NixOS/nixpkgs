{ lib
, fetchFromGitHub
, python3
}:

python3.pkgs.buildPythonApplication rec {
  pname = "smassh";
  version = "3.1.3";
  pyproject = true;

  src = fetchFromGitHub {
    owner = "kraanzu";
    repo = "smassh";
    rev = "v${version}";
    sha256 = "sha256-QE7TFf/5hdd2W2EsVbn3gV/FundhJNxHqv0JWV5dYDc=";
  };

  dependencies = with python3.pkgs; [
    (
      textual.overrideAttrs (oldAttrs: rec {
        version = "0.52.1";
        src = fetchPypi {
          pname = "textual";
          inherit version;
          sha256 = "sha256-QjLlwrQj7Xxjuq62AwNV4U4d4bnfCWyWVbaKHmDk3l8=";
        };
      })
    )
    click
    appdirs
    requests
  ];

  build-system = with python3.pkgs; [
    poetry-core
  ];

  meta = with lib; {
    description = "Smassh your Keyboard, TUI Edition";
    homepage = "https://github.com/kraanzu/smassh";
    changelog = "https://github.com/kraanzu/smassh/blob/main/CHANGELOG.md";
    license = licenses.gpl3Plus;
    maintainers = with maintainers; [ kanielrkirby ];
    mainProgram = "smassh";
    descriptionLong = ''
    Smassh is a TUI based typing test application inspired by MonkeyType
    -- A very popular online web-based typing application

    Smassh tries to be a full fledged typing test experience but not missing out on looks and feel!
    '';
  };
}

#{ lib
#, stdenv
#, python3
#, fetchFromGitHub
#, rustPlatform
#, SDL2
#, libiconv
#, darwin
#}:
#
#python3.pkgs.buildPythonApplication rec {
#  pname = "pyxel";
#  version = "2.0.7";
#  pyproject = true;
#
#  disabled = python3.pythonOlder "3.7";
#
#  src = fetchFromGitHub {
#    owner = "kitao";
#    repo = "pyxel";
#    rev = "v${version}";
#    hash = "sha256-5Jrwfi79HbS4hh+eMwI49Rsk4jrAdAuDhNpUT2cEvDo=";
#  };
#
#  patches = [
#    ./never-bundle-sdl2.patch
#    ./update-bindgen-f16-support.patch # can be removed once rust-bindgen gets a new release
#  ];
#
#  cargoRoot = "crates/pyxel-wrapper";
#
#  # Lockfile is generated by applying patches with `git apply`
#  # and then running `cargo generate-lockfile` in `crates/pyxel-wrapper`
#  cargoDeps = rustPlatform.importCargoLock {
#    lockFile = ./Cargo.lock;
#    outputHashes = {
#      "bindgen-0.69.1" = "sha256-1967EmuyWgmrKmhwAcW49dlmuWPNuKjuRr5/u7ZKpXQ=";
#    };
#  };
#
#  postPatch = ''
#    cp ${./Cargo.lock} crates/pyxel-wrapper/Cargo.lock
#  '';
#
#  nativeBuildInputs = with rustPlatform; [
#    cargoSetupHook
#    maturinBuildHook
#    bindgenHook
#  ];
#
#  buildInputs = [ SDL2 ] ++ lib.optionals stdenv.isDarwin [
#    libiconv
#    darwin.apple_sdk.frameworks.IOKit
#  ];
#
#  env.NIX_CFLAGS_COMPILE = "-I${lib.getDev SDL2}/include/SDL2";
#
#  # Tests can't use the display
#  dontCheck = true;
#
#  pythonImportsCheck = [
#    "pyxel"
#    "pyxel.pyxel_wrapper"
#  ];
#
#  meta = {
#    changelog = "https://github.com/kitao/pyxel/tree/${src.rev}/CHANGELOG.md";
#    description = "A retro game engine for Python";
#    homepage = "https://github.com/kitao/pyxel";
#    license = lib.licenses.mit;
#    mainProgram = "pyxel";
#    maintainers = with lib.maintainers; [ tomasajt ];
#    platforms = lib.platforms.linux ++ lib.platforms.darwin;
#  };
#}
