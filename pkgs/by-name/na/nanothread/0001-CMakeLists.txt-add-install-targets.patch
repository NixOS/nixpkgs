From 12f00300b2a3d25e15a7ed0b0233e4cfdd2d50f1 Mon Sep 17 00:00:00 2001
From: Someone Serge <sergei.kozlukov@aalto.fi>
Date: Tue, 21 Nov 2023 18:03:15 +0000
Subject: [PATCH 1/2] CMakeLists.txt: add install targets

---
 .gitignore             |  1 +
 CMakeLists.txt         | 68 +++++++++++++++++++++++-------------------
 nanothreadConfig.cmake |  1 +
 3 files changed, 39 insertions(+), 31 deletions(-)
 create mode 100644 nanothreadConfig.cmake

diff --git a/.gitignore b/.gitignore
index 8783593..3948241 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,6 +1,7 @@
 /.clangd
 /compile_commands.json
 *.cmake
+!nanothreadConfig.cmake
 CMakeCache.txt
 CMakeFiles
 Makefile
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 29fa840..4d6dd11 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -3,73 +3,79 @@
 # ----------------------------------------------------------
 cmake_minimum_required(VERSION 3.13...3.18)
 
-project(nanothread
-  DESCRIPTION
-    "nanothread"
-  LANGUAGES
-    CXX C
-)
+project(
+  nanothread
+  DESCRIPTION "nanothread"
+  LANGUAGES CXX C)
 
 # ----------------------------------------------------------
-#  Optional features available to users
+# Optional features available to users
 # ----------------------------------------------------------
 
 option(NANOTHREAD_ENABLE_TESTS "Build test suite?" OFF)
 
 # ----------------------------------------------------------
-#  Check if submodules have been checked out, or fail early
+# Check if submodules have been checked out, or fail early
 # ----------------------------------------------------------
 
-if (NOT EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/ext/cmake-defaults/CMakeLists.txt")
-  message(FATAL_ERROR "The nanothread dependencies are missing! "
-    "You probably did not clone the project with --recursive. It is possible to recover "
-    "by invoking\n$ git submodule update --init --recursive")
+if(NOT EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/ext/cmake-defaults/CMakeLists.txt")
+  message(
+    FATAL_ERROR
+      "The nanothread dependencies are missing! "
+      "You probably did not clone the project with --recursive. It is possible to recover "
+      "by invoking\n$ git submodule update --init --recursive")
 endif()
 
 # ----------------------------------------------------------
-#  Build defaults for projects by the Realistic Graphics Lab
+# Build defaults for projects by the Realistic Graphics Lab
 # ----------------------------------------------------------
 
 include(ext/cmake-defaults/CMakeLists.txt)
 
 # ----------------------------------------------------------
-#  Compile the nanothread library
+# Compile the nanothread library
 # ----------------------------------------------------------
 
-add_library(
-  nanothread SHARED
-  include/nanothread/nanothread.h
-  src/queue.cpp src/queue.h
-  src/nanothread.cpp
-)
+add_library(nanothread SHARED include/nanothread/nanothread.h src/queue.cpp
+                              src/queue.h src/nanothread.cpp)
 
 target_compile_features(nanothread PRIVATE cxx_std_11)
 target_include_directories(nanothread PRIVATE include)
 
-if (CMAKE_SYSTEM_PROCESSOR MATCHES "amd64.*|x86_64.*|AMD64.*")
-  if (CMAKE_CXX_COMPILER_ID MATCHES "GNU" OR CMAKE_C_COMPILER_ID MATCHES "Clang")
+if(CMAKE_SYSTEM_PROCESSOR MATCHES "amd64.*|x86_64.*|AMD64.*")
+  if(CMAKE_CXX_COMPILER_ID MATCHES "GNU" OR CMAKE_C_COMPILER_ID MATCHES "Clang")
     target_compile_options(nanothread PRIVATE -mcx16)
   endif()
 endif()
 
-if (CMAKE_CXX_COMPILER_ID MATCHES "GNU")
+if(CMAKE_CXX_COMPILER_ID MATCHES "GNU")
   # GCC needs libatomic for 16 byte CSA
   find_library(LIBATOMIC NAMES libatomic.so libatomic.so.1)
-  if (NOT LIBATOMIC)
+  if(NOT LIBATOMIC)
     message(FATAL_ERROR "libatomic could not be found!")
   endif()
   target_link_libraries(nanothread PRIVATE ${LIBATOMIC})
   mark_as_advanced(LIBATOMIC)
 endif()
 
-target_include_directories(nanothread
-  PUBLIC
-  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
-  $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
+target_include_directories(
+  nanothread PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
+                    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
 
 target_compile_definitions(nanothread PRIVATE -DNANOTHREAD_BUILD=1)
-set_target_properties(nanothread PROPERTIES INTERPROCEDURAL_OPTIMIZATION_RELEASE TRUE)
+set_target_properties(nanothread PROPERTIES INTERPROCEDURAL_OPTIMIZATION_RELEASE
+                                            TRUE)
 
-if (NANOTHREAD_ENABLE_TESTS)
-   add_subdirectory(tests)
+if(NANOTHREAD_ENABLE_TESTS)
+  add_subdirectory(tests)
 endif()
+
+configure_file(
+  nanothreadConfig.cmake
+  "${CMAKE_CURRENT_BINARY_DIR}/nanothread/nanothreadConfig.cmake" COPYONLY)
+install(FILES nanothreadConfig.cmake DESTINATION lib/cmake/nanothread)
+install(TARGETS nanothread EXPORT nanothreadTargets)
+install(
+  EXPORT nanothreadTargets
+  FILE nanothreadTargets.cmake
+  DESTINATION lib/cmake/nanothread)
diff --git a/nanothreadConfig.cmake b/nanothreadConfig.cmake
new file mode 100644
index 0000000..532c84e
--- /dev/null
+++ b/nanothreadConfig.cmake
@@ -0,0 +1 @@
+include("${CMAKE_CURRENT_LIST_DIR}/nanothreadTargets.cmake")
-- 
2.42.0

