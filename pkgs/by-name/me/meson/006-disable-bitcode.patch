diff --git a/mesonbuild/compilers/mixins/clang.py b/mesonbuild/compilers/mixins/clang.py
index d99dc3abf..6b8f75165 100644
--- a/mesonbuild/compilers/mixins/clang.py
+++ b/mesonbuild/compilers/mixins/clang.py
@@ -54,11 +54,7 @@ class ClangCompiler(GnuLikeCompiler):
             {OptionKey('b_colorout'), OptionKey('b_lto_threads'), OptionKey('b_lto_mode'), OptionKey('b_thinlto_cache'),
              OptionKey('b_thinlto_cache_dir')})
 
-        # TODO: this really should be part of the linker base_options, but
-        # linkers don't have base_options.
-        if isinstance(self.linker, AppleDynamicLinker):
-            self.base_options.add(OptionKey('b_bitcode'))
-        elif isinstance(self.linker, MSVCDynamicLinker):
+        if isinstance(self.linker, MSVCDynamicLinker):
             self.base_options.add(OptionKey('b_vscrt'))
         # All Clang backends can also do LLVM IR
         self.can_compile_suffixes.add('ll')
diff --git a/mesonbuild/linkers/linkers.py b/mesonbuild/linkers/linkers.py
index 4eec82edd..6db5c6af0 100644
--- a/mesonbuild/linkers/linkers.py
+++ b/mesonbuild/linkers/linkers.py
@@ -796,7 +796,7 @@ class AppleDynamicLinker(PosixDynamicLinkerMixin, DynamicLinker):
         return self._apply_prefix('-headerpad_max_install_names')
 
     def bitcode_args(self) -> T.List[str]:
-        return self._apply_prefix('-bitcode_bundle')
+        raise MesonException('Nixpkgs cctools does not support bitcode bundles')
 
     def fatal_warnings(self) -> T.List[str]:
         return self._apply_prefix('-fatal_warnings')
