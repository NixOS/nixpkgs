--- a/service/server/router_linux.cpp   2025-01-01 11:36:27.615658613 +0300
+++ b/service/server/router_linux.cpp   2025-01-01 18:07:57.300178080 +0300
@@ -19,9 +19,27 @@
 #include <stdio.h>
 #include <unistd.h>
 #include <QFileInfo>
+#include <QStringList>
+#include <QString>
 
 #include <core/networkUtilities.h>
 
+bool isServiceActive(const QString &serviceName) {
+    QProcess process;
+    process.start("systemctl", { "list-units", "--type=service", "--state=running", "--no-legend" });
+    process.waitForFinished();
+
+    QString output = process.readAllStandardOutput();
+    QStringList services = output.split('\n', Qt::SkipEmptyParts);
+
+    for (const QString &service : services) {
+        if (service.contains(serviceName)) {
+            return true;
+        }
+    }
+    return false;
+}
+
 RouterLinux &RouterLinux::Instance()
 {
     static RouterLinux s;
@@ -158,15 +176,14 @@
     p.setProcessChannelMode(QProcess::MergedChannels);
 
     //check what the dns manager use
-    if (QFileInfo::exists("/usr/bin/nscd")
-        || QFileInfo::exists("/usr/sbin/nscd")
-        || QFileInfo::exists("/usr/lib/systemd/system/nscd.service"))
-    {
-        p.start("systemctl restart nscd");
-    }
-    else
-    {
-        p.start("systemctl restart systemd-resolved");
+    if (isServiceActive("nscd.service")) {
+        qDebug() << "Restarting nscd.service";
+        p.start("systemctl", { "restart", "nscd" });
+    } else if (isServiceActive("systemd-resolved.service")) {
+        qDebug() << "Restarting systemd-resolved.service";
+        p.start("systemctl", { "restart", "systemd-resolved" });
+    } else {
+        qDebug() << "No suitable DNS manager found.";
     }
 
     p.waitForFinished();
