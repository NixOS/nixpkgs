diff --git a/src/lib.rs b/src/lib.rs
index ef4e6ab..ea05090 100644
--- a/src/lib.rs
+++ b/src/lib.rs
@@ -144,7 +144,7 @@ impl<'a> BuildType<'a> {
     }
 }
 
-fn args(tool: Tool, examples: Option<&str>) -> ArgMatches {
+fn args(tool: Tool, examples: Option<&str>) -> ArgMatches<'_> {
     let name = tool.name();
     let about = format!(
         "Proxy for the `llvm-{}` tool shipped with the Rust toolchain.",
diff --git a/src/postprocess.rs b/src/postprocess.rs
index 11eb8de..d2e0fad 100644
--- a/src/postprocess.rs
+++ b/src/postprocess.rs
@@ -7,7 +7,7 @@ use regex::{Captures, Regex};
 // UTF-8 then we don't touch it.
 
 // This pass demangles *all* the Rust symbols in the input
-pub fn demangle(bytes: &[u8]) -> Cow<[u8]> {
+pub fn demangle(bytes: &[u8]) -> Cow<'_, [u8]> {
     let re = Regex::new(r#"_Z.+?E\b"#).expect("BUG: Malformed Regex");
 
     if let Ok(text) = str::from_utf8(bytes) {
@@ -23,7 +23,7 @@ pub fn demangle(bytes: &[u8]) -> Cow<[u8]> {
 }
 
 // This pass turns the addresses in the output of `size -A` into hexadecimal format
-pub fn size(bytes: &[u8]) -> Cow<[u8]> {
+pub fn size(bytes: &[u8]) -> Cow<'_, [u8]> {
     if let Ok(text) = str::from_utf8(bytes) {
         let mut s = text
             .lines()
