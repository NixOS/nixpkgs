From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Morgan Helton <mhelton@gmail.com>
Date: Sun, 26 May 2024 12:17:01 -0500
Subject: [PATCH] envoy: allow specification of external binary

Signed-off-by: Luke Granger-Brown <git@lukegb.com>
---
 pkg/envoy/envoy.go | 23 +++++++++++++++++++----
 1 file changed, 19 insertions(+), 4 deletions(-)

diff --git a/pkg/envoy/envoy.go b/pkg/envoy/envoy.go
index 8224f364..c739b294 100644
--- a/pkg/envoy/envoy.go
+++ b/pkg/envoy/envoy.go
@@ -37,6 +37,8 @@ const (
 	configFileName = "envoy-config.yaml"
 )
 
+var OverrideEnvoyPath = ""
+
 // A Server is a pomerium proxy implemented via envoy.
 type Server struct {
 	ServerOptions
@@ -94,14 +96,27 @@ func NewServer(ctx context.Context, src config.Source, builder *envoyconfig.Buil
 		log.Ctx(ctx).Debug().Err(err).Msg("couldn't preserve RLIMIT_NOFILE before starting Envoy")
 	}
 
-	envoyPath, err := Extract()
-	if err != nil {
-		return nil, fmt.Errorf("extracting envoy: %w", err)
+	var envoyPath string
+	var workDir string
+	if OverrideEnvoyPath != "" {
+		envoyPath = OverrideEnvoyPath
+		var err error
+		workDir, err = os.MkdirTemp("", "envoywd")
+		if err != nil {
+			return nil, fmt.Errorf("forming envoy working directory: %w", err)
+		}
+	} else {
+		var err error
+		envoyPath, err = Extract()
+		if err != nil {
+			return nil, fmt.Errorf("extracting envoy: %w", err)
+		}
+		workDir = path.Dir(envoyPath)
 	}
 
 	srv := &Server{
 		ServerOptions: options,
-		wd:            path.Dir(envoyPath),
+		wd:            workDir,
 		builder:       builder,
 		grpcPort:      src.GetConfig().GRPCPort,
 		httpPort:      src.GetConfig().HTTPPort,
