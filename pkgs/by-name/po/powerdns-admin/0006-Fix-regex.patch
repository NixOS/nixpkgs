diff --git a/powerdnsadmin/lib/utils.py b/powerdnsadmin/lib/utils.py
index f8cc997..0de4c5c 100644
--- a/powerdnsadmin/lib/utils.py
+++ b/powerdnsadmin/lib/utils.py
@@ -121,7 +121,7 @@ def display_record_name(data):
     if record_name == domain_name:
         return '@'
     else:
-        return re.sub('\.{}$'.format(domain_name), '', record_name)
+        return re.sub(r'\.{}$'.format(domain_name), '', record_name)
 
 
 def display_master_name(data):
diff --git a/powerdnsadmin/models/domain.py b/powerdnsadmin/models/domain.py
index f0b9a30..84c6d1b 100644
--- a/powerdnsadmin/models/domain.py
+++ b/powerdnsadmin/models/domain.py
@@ -482,24 +482,24 @@ class Domain(db.Model):
         if re.search('ip6.arpa', reverse_host_address):
             for i in range(1, 32, 1):
                 address = re.search(
-                    '((([a-f0-9]\.){' + str(i) + '})(?P<ipname>.+6.arpa)\.?)',
+                    r'((([a-f0-9]\.){' + str(i) + r'})(?P<ipname>.+6\.arpa)\.?)',
                     reverse_host_address)
                 if None != self.get_id_by_name(address.group('ipname')):
                     c = i
                     break
             return re.search(
-                '((([a-f0-9]\.){' + str(c) + '})(?P<ipname>.+6.arpa)\.?)',
+                r'((([a-f0-9]\.){' + str(c) + r'})(?P<ipname>.+6\.arpa)\.?)',
                 reverse_host_address).group('ipname')
         else:
             for i in range(1, 4, 1):
                 address = re.search(
-                    '((([0-9]+\.){' + str(i) + '})(?P<ipname>.+r.arpa)\.?)',
+                    r'((([0-9]+\.){' + str(i) + r'})(?P<ipname>.+r\.arpa)\.?)',
                     reverse_host_address)
                 if None != self.get_id_by_name(address.group('ipname')):
                     c = i
                     break
             return re.search(
-                '((([0-9]+\.){' + str(c) + '})(?P<ipname>.+r.arpa)\.?)',
+                r'((([0-9]+\.){' + str(c) + r'})(?P<ipname>.+r\.arpa)\.?)',
                 reverse_host_address).group('ipname')
 
     def delete(self, domain_name):
