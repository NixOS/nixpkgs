From 8799541f99785d2bd881561386676fb0985e939e Mon Sep 17 00:00:00 2001
From: Moritz Sanft <58110325+msanft@users.noreply.github.com>
Date: Thu, 10 Oct 2024 14:32:42 +0200
Subject: [PATCH] fix library resolving

Signed-off-by: Moritz Sanft <58110325+msanft@users.noreply.github.com>
---
 src/ldcache.c     | 46 +++++++++++++++++-----------------------------
 src/ldcache.h     |  2 +-
 src/nvc_info.c    | 10 +++-------
 src/nvc_ldcache.c |  2 +-
 4 files changed, 22 insertions(+), 38 deletions(-)

diff --git a/src/ldcache.c b/src/ldcache.c
index 38bab055..8cd30a0f 100644
--- a/src/ldcache.c
+++ b/src/ldcache.c
@@ -108,40 +108,28 @@ ldcache_close(struct ldcache *ctx)

 int
 ldcache_resolve(struct ldcache *ctx, uint32_t arch, const char *root, const char * const libs[],
-    char *paths[], size_t size, ldcache_select_fn select, void *select_ctx)
+    char *paths[], size_t size, const char* version)
 {
         char path[PATH_MAX];
-        struct header_libc6 *h;
-        int override;
+        char dir[PATH_MAX];
+        char lib[PATH_MAX];

-        h = (struct header_libc6 *)ctx->ptr;
         memset(paths, 0, size * sizeof(*paths));

-        for (uint32_t i = 0; i < h->nlibs; ++i) {
-                int32_t flags = h->libs[i].flags;
-                char *key = (char *)ctx->ptr + h->libs[i].key;
-                char *value = (char *)ctx->ptr + h->libs[i].value;
-
-                if (!(flags & LD_ELF) || (flags & LD_ARCH_MASK) != arch)
-                        continue;
-
-                for (size_t j = 0; j < size; ++j) {
-                        if (!str_has_prefix(key, libs[j]))
-                                continue;
-                        if (path_resolve(ctx->err, path, root, value) < 0)
-                                return (-1);
-                        if (paths[j] != NULL && str_equal(paths[j], path))
-                                continue;
-                        if ((override = select(ctx->err, select_ctx, root, paths[j], path)) < 0)
-                                return (-1);
-                        if (override) {
-                                free(paths[j]);
-                                paths[j] = xstrdup(ctx->err, path);
-                                if (paths[j] == NULL)
-                                        return (-1);
-                        }
-                        break;
-                }
+        for (size_t j = 0; j < size; ++j) {
+                snprintf(dir, 100, "@driverLink@/lib");
+
+                if (!strncmp(libs[j], "libvdpau_nvidia.so", 100))
+                        strcat(dir, "/vdpau");
+                snprintf(lib, 100, "%s/%s.%s", dir, libs[j], version);
+                if (path_resolve_full(ctx->err, path, "/", lib) < 0)
+                        return (-1);
+                if (!file_exists(ctx->err, path))
+                         continue;
+
+                paths[j] = xstrdup(ctx->err, path);
+                if (paths[j] == NULL)
+                        return (-1);
         }
         return (0);
 }
diff --git a/src/ldcache.h b/src/ldcache.h
index 33d78dd7..2b087dbc 100644
--- a/src/ldcache.h
+++ b/src/ldcache.h
@@ -50,6 +50,6 @@ void ldcache_init(struct ldcache *, struct error *, const char *);
 int  ldcache_open(struct ldcache *);
 int  ldcache_close(struct ldcache *);
 int  ldcache_resolve(struct ldcache *, uint32_t, const char *, const char * const [],
-    char *[], size_t, ldcache_select_fn, void *);
+    char *[], size_t, const char*);

 #endif /* HEADER_LDCACHE_H */
diff --git a/src/nvc_info.c b/src/nvc_info.c
index b7b8adfa..d42f2beb 100644
--- a/src/nvc_info.c
+++ b/src/nvc_info.c
@@ -217,15 +217,13 @@ find_library_paths(struct error *err, struct dxcore_context *dxcore, struct nvc_
         if (path_resolve_full(err, path, root, ldcache) < 0)
                 return (-1);
         ldcache_init(&ld, err, path);
-        if (ldcache_open(&ld) < 0)
-                return (-1);

         info->nlibs = size;
         info->libs = array_new(err, size);
         if (info->libs == NULL)
                 goto fail;
         if (ldcache_resolve(&ld, LIB_ARCH, root, libs,
-            info->libs, info->nlibs, select_libraries_fn, info) < 0)
+            info->libs, info->nlibs, info->nvrm_version) < 0)
                 goto fail;

         info->nlibs32 = size;
@@ -233,13 +231,11 @@ find_library_paths(struct error *err, struct dxcore_context *dxcore, struct nvc_
         if (info->libs32 == NULL)
                 goto fail;
         if (ldcache_resolve(&ld, LIB32_ARCH, root, libs,
-            info->libs32, info->nlibs32, select_libraries_fn, info) < 0)
+            info->libs32, info->nlibs32, info->nvrm_version) < 0)
                 goto fail;
         rv = 0;

  fail:
-        if (ldcache_close(&ld) < 0)
-                return (-1);
         return (rv);
 }

@@ -253,7 +249,7 @@ find_binary_paths(struct error *err, struct dxcore_context* dxcore, struct nvc_d
         char path[PATH_MAX];
         int rv = -1;

-        if ((env = secure_getenv("PATH")) == NULL) {
+        if ((env = "/run/nvidia-docker/bin:/run/nvidia-docker/extras/bin") == NULL) {
                 error_setx(err, "environment variable PATH not found");
                 return (-1);
         }
diff --git a/src/nvc_ldcache.c b/src/nvc_ldcache.c
index db3b2f69..ae5def43 100644
--- a/src/nvc_ldcache.c
+++ b/src/nvc_ldcache.c
@@ -367,7 +367,7 @@ nvc_ldcache_update(struct nvc_context *ctx, const struct nvc_container *cnt)
         if (validate_args(ctx, cnt != NULL) < 0)
                 return (-1);

-        argv = (char * []){cnt->cfg.ldconfig, "-f", "/etc/ld.so.conf", "-C", "/etc/ld.so.cache", cnt->cfg.libs_dir, cnt->cfg.libs32_dir, NULL};
+        argv = (char * []){cnt->cfg.ldconfig, "-f", "/tmp/ld.so.conf.nvidia-host", "-C", "/tmp/ld.so.cache.nvidia-host", cnt->cfg.libs_dir, cnt->cfg.libs32_dir, NULL};
         if (*argv[0] == '@') {
                 /*
                  * We treat this path specially to be relative to the host filesystem.
--
2.46.0
