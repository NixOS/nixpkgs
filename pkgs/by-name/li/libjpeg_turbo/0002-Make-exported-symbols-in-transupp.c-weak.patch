Subject: [PATCH] Make exported symbols in transupp.c weak

The exported symbols are made weak to not conflict with users
of the library that already vendor this functionality.
--- a/src/transupp.c
+++ b/src/transupp.c
@@ -1392,7 +1392,7 @@
  * This code is loosely based on XParseGeometry from the X11 distribution.
  */
 
-GLOBAL(boolean)
+GLOBAL(boolean) __attribute__((weak))
 jtransform_parse_crop_spec(jpeg_transform_info *info, const char *spec)
 {
   info->crop = FALSE;
@@ -1492,7 +1492,7 @@
  * and transformation is not perfect.  Otherwise returns TRUE.
  */
 
-GLOBAL(boolean)
+GLOBAL(boolean) __attribute__((weak))
 jtransform_request_workspace(j_decompress_ptr srcinfo,
                              jpeg_transform_info *info)
 {
@@ -2039,7 +2039,7 @@
  * to jpeg_write_coefficients().
  */
 
-GLOBAL(jvirt_barray_ptr *)
+GLOBAL(jvirt_barray_ptr *) __attribute__((weak))
 jtransform_adjust_parameters(j_decompress_ptr srcinfo, j_compress_ptr dstinfo,
                              jvirt_barray_ptr *src_coef_arrays,
                              jpeg_transform_info *info)
@@ -2158,7 +2158,7 @@
  * Note that some transformations will modify the source data arrays!
  */
 
-GLOBAL(void)
+GLOBAL(void) __attribute__((weak))
 jtransform_execute_transform(j_decompress_ptr srcinfo, j_compress_ptr dstinfo,
                              jvirt_barray_ptr *src_coef_arrays,
                              jpeg_transform_info *info)
@@ -2270,7 +2270,7 @@
  *           (may use custom action then)
  */
 
-GLOBAL(boolean)
+GLOBAL(boolean) __attribute__((weak))
 jtransform_perfect_transform(JDIMENSION image_width, JDIMENSION image_height,
                              int MCU_width, int MCU_height,
                              JXFORM_CODE transform)
@@ -2309,7 +2309,7 @@
  * This must be called before jpeg_read_header() to have the desired effect.
  */
 
-GLOBAL(void)
+GLOBAL(void) __attribute__((weak))
 jcopy_markers_setup(j_decompress_ptr srcinfo, JCOPY_OPTION option)
 {
 #ifdef SAVE_MARKERS_SUPPORTED
@@ -2342,7 +2342,7 @@
  * JFIF APP0 or Adobe APP14 markers if selected.
  */
 
-GLOBAL(void)
+GLOBAL(void) __attribute__((weak))
 jcopy_markers_execute(j_decompress_ptr srcinfo, j_compress_ptr dstinfo,
                       JCOPY_OPTION option)
 {
