#! /usr/bin/env nix-shell
#! nix-shell -i bash --pure --keep GITHUB_TOKEN -p nix git curl cacert nix-prefetch-git jq

set -euo pipefail

cd $(readlink -e $(dirname "${BASH_SOURCE[0]}"))

find_url() {
    curl -sI "https://www.zotero.org/download/client/dl?platform=$1&channel=$2" | sed -n 's/^location: //ip' | tr -d '\r\n'
}

extract_version() {
    echo $1 | sed -n 's|.*/client/[^/]\{1,\}/\([^/]\{1,\}\)/.*|\1|p' | sed 's/%2B/+/g'
}

# darwin

darwin_url=$(find_url mac beta)

darwin_version=$(extract_version $darwin_url)

darwin_hash=$(nix-prefetch-url --name $(basename $(echo $darwin_url | sed 's/%2B/+/g')) $darwin_url)

# use friendlier hashes
darwin_hash=$(nix --extra-experimental-features nix-command hash convert --to sri --hash-algo sha256 "$darwin_hash")

# linux

linux_aarch64_url=$(find_url linux-arm64 beta)
linux_x86_64_url=$(find_url linux-x86_64 beta)

linux_aarch64_version=$(extract_version $linux_aarch64_url)
linux_x86_64_version=$(extract_version $linux_x86_64_url)

linux_aarch64_hash=$(nix-prefetch-url --name $(basename $(echo $linux_aarch64_url | sed 's/%2B/+/g')) $linux_aarch64_url)
linux_x86_64_hash=$(nix-prefetch-url --name $(basename $(echo $linux_x86_64_url | sed 's/%2B/+/g')) $linux_x86_64_url)

# use friendlier hashes
linux_aarch64_hash=$(nix --extra-experimental-features nix-command hash convert --to sri --hash-algo sha256 "$linux_aarch64_hash")
linux_x86_64_hash=$(nix --extra-experimental-features nix-command hash convert --to sri --hash-algo sha256 "$linux_x86_64_hash")

cat >sources.nix <<EOF
# Generated by ./update.sh - do not update manually!
# Last updated: $(date +%F)
{ fetchurl }:
let
  any-darwin = {
    version = "$darwin_version";
    src = fetchurl {
      url = "$darwin_url";
      hash = "$darwin_hash";
    };
  };
in
{
  aarch64-darwin = any-darwin;
  x86_64-darwin = any-darwin;
  aarch64-linux = {
    version = "$linux_aarch64_version";
    src = fetchurl {
      url = "$linux_aarch64_url";
      hash = "$linux_aarch64_hash";
    };
  };
  x86_64-linux = {
    version = "$linux_x86_64_version";
    src = fetchurl {
      url = "$linux_x86_64_url";
      hash = "$linux_x86_64_hash";
    };
  };
}
EOF
