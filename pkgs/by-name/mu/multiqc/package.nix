{ lib
, python3Packages
, fetchFromGitHub
, procps
, testers
, multiqc
,
}:

python3Packages.buildPythonApplication rec {
  pname = "multiqc";
  version = "1.25.1";
  pyproject = true;

  disabled = python3Packages.pythonOlder "3.8";

  # Two data sources. One for the code, another for the test data
  # thanks @rkoe. https://discourse.nixos.org/t/how-to-create-package-with-multiple-sources/9308/2
  srcs = [
    (fetchFromGitHub {
      name = pname;
      owner = "MultiQC";
      repo = "MultiQC";
      rev = "refs/tags/v${version}";
      sha256 = "sha256-N2De/3Z6A3YgitugKrTd0cEeN1J6v1xCovkASjvTF08";
    })
    (fetchFromGitHub {
      name = "test-data";
      owner = "ewels";
      repo = "MultiQC_TestData";
      rev = "bfecc7365746caba6fd80f20df9cd630db1c6f60";
      sha256 = "sha256-HPgPgeWf0K5jCVPcQj5ecsMWZixs3Nw5riwD4M1dr9E=";
    })
  ];

  sourceRoot = pname;

  build-system = [ python3Packages.setuptools ];

  postPatch = ''
    substituteInPlace multiqc/plots/plotly/plot.py \
      --replace-fail '"'ps'"' '"'${procps}/bin/ps'"'
    substituteInPlace tests/test_cmdline.py \
      --replace-fail '["'multiqc'"' '["'$out/bin/multiqc'"'
  '';

  preCheck = ''
    chmod -R u+w ../test-data
    ln -s ../test-data .
  '';

  dependencies = with python3Packages; [
    click
    humanize
    importlib-metadata
    jinja2
    kaleido
    markdown
    numpy
    packaging
    requests
    pillow
    plotly
    pyyaml
    rich
    rich-click
    coloredlogs
    spectra
    pydantic
    typeguard
    tqdm
  ];

  optional-dependencies = {
    dev = with python3Packages; [
      pre-commit-hooks
      pdoc3
      pytest
      pytest-cov
      pytest-xdist
      syrupy
      pygithub
      mypy
      types-pyyaml
      types-tqdm
      types-requests
      types-markdown
      types-beautifulsoup4
      types-pillow
    ];
  };

  nativeCheckInputs = with python3Packages; [
    pytest
    pytest-cov
    pytest-xdist
    pytestCheckHook
    syrupy
    pygithub
  ];

  passthru.tests.version = testers.testVersion {
    package = multiqc;
  };

  meta = {
    description = "Aggregate bioinformatics results across many samples into a single report";
    longDescription = ''
      MultiQC is a tool to create a single report with interactive plots for multiple bioinformatics analyses across many samples.

      Reports are generated by scanning given directories for recognised log files. These are parsed and a single HTML report is generated summarising the statistics for all logs found. MultiQC reports can describe multiple analysis steps and large numbers of samples within a single plot, and multiple analysis tools making it ideal for routine fast quality control.
    '';
    homepage = "https://multiqc.info";
    changelog = "https://github.com/MultiQC/MultiQC/blob/refs/tags/${version}/CHANGELOG.md";
    license = [ lib.licenses.gpl3Plus ];
    maintainers = [ lib.maintainers.dflores ];
    mainProgram = "multiqc";
    platforms = lib.platforms.unix;
  };

}
