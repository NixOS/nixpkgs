diff --git a/music_assistant/helpers/audio.py b/music_assistant/helpers/audio.py
index 482ab8e8..a02fc435 100644
--- a/music_assistant/helpers/audio.py
+++ b/music_assistant/helpers/audio.py
@@ -80,7 +80,7 @@ async def crossfade_pcm_parts(
         await outfile.write(fade_out_part)
     args = [
         # generic args
-        "ffmpeg",
+        "@ffmpeg@",
         "-hide_banner",
         "-loglevel",
         "quiet",
@@ -141,7 +141,7 @@ async def strip_silence(
     reverse: bool = False,
 ) -> bytes:
     """Strip silence from begin or end of pcm audio using ffmpeg."""
-    args = ["ffmpeg", "-hide_banner", "-loglevel", "quiet"]
+    args = ["@ffmpeg@", "-hide_banner", "-loglevel", "quiet"]
     args += [
         "-acodec",
         pcm_format.content_type.name.lower(),
@@ -912,7 +912,7 @@ async def get_silence(
         return
     # use ffmpeg for all other encodings
     args = [
-        "ffmpeg",
+        "@ffmpeg@",
         "-hide_banner",
         "-loglevel",
         "quiet",
diff --git a/music_assistant/helpers/ffmpeg.py b/music_assistant/helpers/ffmpeg.py
index 7c1c8d83..501a7370 100644
--- a/music_assistant/helpers/ffmpeg.py
+++ b/music_assistant/helpers/ffmpeg.py
@@ -218,7 +218,7 @@ def get_ffmpeg_args(
         extra_args = []
     # generic args
     generic_args = [
-        "ffmpeg",
+        "@ffmpeg@",
         "-hide_banner",
         "-loglevel",
         loglevel,
@@ -370,7 +370,7 @@ async def check_ffmpeg_version() -> None:
     """Check if ffmpeg is present (with libsoxr support)."""
     # check for FFmpeg presence
     try:
-        returncode, output = await check_output("ffmpeg", "-version")
+        returncode, output = await check_output("@ffmpeg@", "-version")
     except FileNotFoundError:
         raise AudioError(
             "FFmpeg binary is missing from system. "
diff --git a/music_assistant/helpers/tags.py b/music_assistant/helpers/tags.py
index 06c8bcb5..a703aacd 100644
--- a/music_assistant/helpers/tags.py
+++ b/music_assistant/helpers/tags.py
@@ -438,7 +438,7 @@ def parse_tags(input_file: str, file_size: int | None = None) -> AudioTags:
     Input_file may be a (local) filename or URL accessible by ffmpeg.
     """
     args = (
-        "ffprobe",
+        "@ffprobe@",
         "-hide_banner",
         "-loglevel",
         "fatal",
@@ -553,7 +553,7 @@ async def get_embedded_image(input_file: str) -> bytes | None:
     Input_file may be a (local) filename or URL accessible by ffmpeg.
     """
     args = (
-        "ffmpeg",
+        "@ffmpeg@",
         "-hide_banner",
         "-loglevel",
         "error",
