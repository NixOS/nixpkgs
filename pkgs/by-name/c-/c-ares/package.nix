{
  lib,
  cmake,
  curl, # sensitive downstream package
  fetchurl,
  grpc, # sensitive downstream package; consumes cmake config
  stdenv,
  writeTextDir,
  # Boolean flags
  withCMake ? true,
}:

# Note: this package is used for bootstrapping fetchurl, and thus
# cannot use fetchpatch! All mutable patches (generated by GitHub or
# cgit) that are needed here should be included directly in Nixpkgs as
# files.

stdenv.mkDerivation (finalAttrs: {
  pname = "c-ares";
  version = "1.27.0";

  src = fetchurl {
    url = "https://c-ares.org/download/c-ares-${finalAttrs.version}.tar.gz";
    hash = "sha256-CnK+ZpWZVcQ+KvL70DQY6Cor1UZGBOyaYhR+N6zrQgs=";
  };

  nativeBuildInputs = lib.optionals withCMake [ cmake ];

  cmakeFlags = lib.optionals withCMake [
    (lib.cmakeBool "ARES_SHARED" (!stdenv.hostPlatform.isStatic))
    (lib.cmakeBool "ARES_STATIC" stdenv.hostPlatform.isStatic)
  ];

  outputs = [ "out" "dev" "man" ];

  enableParallelBuilding = true;

  strictDeps = true;

  passthru.tests = {
    inherit grpc;
    curl = (curl.override { c-aresSupport = true; }).tests.withCheck;
  };

  meta = {
    homepage = "https://c-ares.org";
    description = "A C library for asynchronous DNS requests";
    changelog = "https://c-ares.org/changelog.html#${lib.replaceStrings [ "." ] [ "_" ] finalAttrs.version}";
    license = lib.licenses.mit;
    platforms = lib.platforms.all;
  };
})
