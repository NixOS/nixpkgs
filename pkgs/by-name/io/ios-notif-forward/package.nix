{
  lib,
  copyDesktopItems,
  fetchFromGitHub,
  makeDesktopItem,
  nix-update-script,
  rustPlatform,

  cmake,
  pkg-config,

  dbus,
  gtk3,
  libappindicator-gtk3,
  xdotool,
}:
rustPlatform.buildRustPackage (finalAttrs: {
  pname = "ios-notif-forward";
  version = "0.1.1";

  src = fetchFromGitHub {
    owner = "impiaaa";
    repo = "ios-notif-forward";
    tag = "v${finalAttrs.version}";
    hash = "sha256-QF2b5HyJ1Q8U38zgPtDqu8D/DrXlqMGwq0dSNlfaQYo=";
  };
  cargoHash = "sha256-m40166GESlBieAU+GmM2tmIduHTSUw+HlenYY3PR57Q=";

  nativeBuildInputs = [
    copyDesktopItems

    cmake
    pkg-config
  ];
  buildInputs = [
    dbus
    gtk3
    libappindicator-gtk3
    xdotool
  ];

  # Hardcode the path to a dynamically loaded library.
  postPatch = ''
    substituteInPlace $cargoDepsCopy/libappindicator-sys-*/src/lib.rs \
        --replace-fail "libappindicator3.so.1" "${lib.getLib libappindicator-gtk3}/lib/libappindicator3.so.1"
  '';

  # Upstream releases contain auxiliary files that are generated by a packaging script
  # that tries invoke cargo itself. Skip the script and create those files ourselves.
  # (Currently, we only cover Linux.)
  postInstall = ''
    install -Dm644 icon.svg $out/share/icons/hicolor/symbolic/apps/ios-notif-forward-symbolic.svg
    install -Dm644 icon.svg $out/share/icons/hicolor/scalable/apps/ios-notif-forward.svg
  '';
  # With updates from upstream HEAD
  desktopItems = [
    (makeDesktopItem {
      name = "ios-notif-forward";
      desktopName = "ios-notif-forward";
      icon = "ios-notif-forward";
      categories = [ "Utility" ];
      exec = "ios-notif-forward";
      terminal = false;
      extraConfig.X-GNOME-UsesNotifications = "true";
    })
  ];

  passthru.updateScript = nix-update-script { };

  meta = {
    description = "Forwards notifications from iOS devices over Bluetooth";
    homepage = "https://github.com/impiaaa/ios-notif-forward";
    license = lib.licenses.mit;
    platforms = lib.platforms.linux;
    mainProgram = "ios-notif-forward";
    maintainers = with lib.maintainers; [ howtonotwin ];
  };
})
