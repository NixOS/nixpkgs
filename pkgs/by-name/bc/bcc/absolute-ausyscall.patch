From 01e793163231c5085afced37471df32b94a313f5 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?J=C3=B6rg=20Thalheim?= <joerg@thalheim.io>
Date: Thu, 30 Dec 2021 06:34:41 +0100
Subject: [PATCH] absolute ausyscall
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: JÃ¶rg Thalheim <joerg@thalheim.io>
---
 libbpf-tools/syscall_helpers.c | 2 +-
 src/python/bcc/syscall.py      | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/libbpf-tools/syscall_helpers.c b/libbpf-tools/syscall_helpers.c
index e114a08f..62adea78 100644
--- a/libbpf-tools/syscall_helpers.c
+++ b/libbpf-tools/syscall_helpers.c
@@ -47,7 +47,7 @@ void init_syscall_names(void)
 	int err;
 	FILE *f;
 
-	f = popen("ausyscall --dump 2>/dev/null", "r");
+	f = popen("@ausyscall@ --dump 2>/dev/null", "r");
 	if (!f) {
 		warn("popen: ausyscall --dump: %s\n", strerror(errno));
 		return;
diff --git a/src/python/bcc/syscall.py b/src/python/bcc/syscall.py
index 1346b4e8..e7e29a11 100644
--- a/src/python/bcc/syscall.py
+++ b/src/python/bcc/syscall.py
@@ -376,7 +376,7 @@ def _parse_syscall(line):
 try:
     # Skip the first line, which is a header. The rest of the lines are simply
     # SYSCALL_NUM\tSYSCALL_NAME pairs.
-    out = subprocess.check_output(['ausyscall', '--dump'], stderr=subprocess.STDOUT)
+    out = subprocess.check_output(['@ausyscall@', '--dump'], stderr=subprocess.STDOUT)
     # remove the first line of expected output
     out = out.split(b'\n',1)[1]
     syscalls = dict(map(_parse_syscall, out.strip().split(b'\n')))
-- 
2.34.0

