diff --git a/src/main.rs b/src/main.rs
index a0e8f2e..07cf8b9 100644
--- a/src/main.rs
+++ b/src/main.rs
@@ -194,19 +194,19 @@ impl Application for App {
                         }
                     }
 
-                    page::Message::Language(message) => {
-                        if let Some(page) =
-                            self.pages.get_mut(&TypeId::of::<page::language::Page>())
-                        {
-                            return page
-                                .as_any()
-                                .downcast_mut::<page::language::Page>()
-                                .unwrap()
-                                .update(message)
-                                .map(Message::PageMessage)
-                                .map(cosmic::Action::App);
-                        }
-                    }
+                    // page::Message::Language(message) => {
+                    //     if let Some(page) =
+                    //         self.pages.get_mut(&TypeId::of::<page::language::Page>())
+                    //     {
+                    //         return page
+                    //             .as_any()
+                    //             .downcast_mut::<page::language::Page>()
+                    //             .unwrap()
+                    //             .update(message)
+                    //             .map(Message::PageMessage)
+                    //             .map(cosmic::Action::App);
+                    //     }
+                    // }
 
                     page::Message::Layout(message) => {
                         if let Some(page) = self.pages.get_mut(&TypeId::of::<page::layout::Page>())
diff --git a/src/page/mod.rs b/src/page/mod.rs
index 389728c..937a1b3 100644
--- a/src/page/mod.rs
+++ b/src/page/mod.rs
@@ -4,7 +4,7 @@ use std::any::{Any, TypeId};
 
 pub mod appearance;
 pub mod keyboard;
-pub mod language;
+// pub mod language;
 pub mod launcher;
 pub mod layout;
 pub mod location;
@@ -34,10 +34,10 @@ pub fn pages(mode: AppMode) -> IndexMap<TypeId, Box<dyn Page>> {
     if let AppMode::NewInstall { create_user } = mode {
         pages.insert(TypeId::of::<wifi::Page>(), Box::new(wifi::Page::default()));
 
-        pages.insert(
-            TypeId::of::<language::Page>(),
-            Box::new(language::Page::new()),
-        );
+        // pages.insert(
+        //     TypeId::of::<language::Page>(),
+        //     Box::new(language::Page::new()),
+        // );
 
         pages.insert(
             TypeId::of::<keyboard::Page>(),
@@ -95,7 +95,7 @@ pub fn pages(mode: AppMode) -> IndexMap<TypeId, Box<dyn Page>> {
 pub enum Message {
     Appearance(appearance::Message),
     Keyboard(keyboard::Message),
-    Language(language::Message),
+    // Language(language::Message),
     Layout(layout::Message),
     Location(location::Message),
     SetTheme(cosmic::Theme),
