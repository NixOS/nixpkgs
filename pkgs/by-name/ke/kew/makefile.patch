diff --git a/Makefile b/Makefile
index f4fd22d..020c256 100644
--- a/Makefile
+++ b/Makefile
@@ -7,9 +7,8 @@ PKG_CONFIG ?= pkg-config
 # To disable faad2, run:
 # make USE_FAAD=0
 
-# Detect system and architecture
+# Detect system for dbus auto-detection
 UNAME_S := $(shell uname -s)
-ARCH := $(shell uname -m)
 
 # Default USE_DBUS to auto-detect if not set by user
 ifeq ($(origin USE_DBUS), undefined)
@@ -20,82 +19,49 @@ ifeq ($(origin USE_DBUS), undefined)
   endif
 endif
 
-# Adjust the PREFIX for macOS and Linux
-ifeq ($(UNAME_S), Darwin)
-    ifeq ($(ARCH), arm64)
-        PREFIX ?= /usr/local
-        PKG_CONFIG_PATH := /opt/homebrew/lib/pkgconfig:/opt/homebrew/share/pkgconfig:$(PKG_CONFIG_PATH)
-    else
-        PREFIX ?= /usr/local
-        PKG_CONFIG_PATH := /usr/local/lib/pkgconfig:/usr/local/share/pkgconfig:$(PKG_CONFIG_PATH)
-    endif
-else
-    PREFIX ?= /usr
-    PKG_CONFIG_PATH := /usr/lib/pkgconfig:/usr/share/pkgconfig:$(PKG_CONFIG_PATH)
-endif
+PREFIX ?= /usr
 
-# Default USE_FAAD to auto-detect if not set by user
+# Default USE_FAAD to auto-detect using pkg-config if not set by user
 ifeq ($(origin USE_FAAD), undefined)
-
-  USE_FAAD = $(shell PKG_CONFIG_PATH=$(PKG_CONFIG_PATH) $(PKG_CONFIG) --exists faad && echo 1 || echo 0)
-
-  ifeq ($(USE_FAAD), 0)
-    # If pkg-config fails, try to find libfaad dynamically in common paths
-    USE_FAAD = $(shell [ -f /usr/lib/libfaad.so ] || [ -f /usr/local/lib/libfaad.so ] || \
-                       [ -f /opt/local/lib/libfaad.so ] || [ -f /opt/homebrew/lib/libfaad.dylib ] || \
-                       [ -f /opt/homebrew/opt/faad2/lib/libfaad.dylib ] || \
-                       [ -f /usr/local/lib/libfaad.dylib ] || [ -f /lib/x86_64-linux-gnu/libfaad.so.2 ] && echo 1 || echo 0)
-  endif
+  USE_FAAD = $(shell $(PKG_CONFIG) --exists faad2 && echo 1 || echo 0)
 endif
 
-# Compiler flags
-COMMONFLAGS = -I/usr/include -I/opt/homebrew/include -I/usr/local/include -I/usr/lib -Iinclude/minimp4 \
-         -I/usr/include/chafa -I/usr/lib/chafa/include -I/usr/include/ogg -I/usr/include/opus \
-         -I/usr/include/stb -Iinclude/stb_image -I/usr/include/glib-2.0 \
-         -I/usr/lib/glib-2.0/include -Iinclude/miniaudio -I/usr/include/gdk-pixbuf-2.0 -O2
+# TagLib flags (C++ only)
+TAGLIB_CFLAGS = $(shell $(PKG_CONFIG) --cflags taglib)
+TAGLIB_LIBS = $(shell $(PKG_CONFIG) --libs taglib)
 
-COMMONFLAGS += $(shell PKG_CONFIG_PATH=$(PKG_CONFIG_PATH) $(PKG_CONFIG) --cflags gio-2.0 chafa fftw3f opus opusfile vorbis ogg glib-2.0 taglib)
+# Compiler flags
+COMMONFLAGS = $(shell $(PKG_CONFIG) --cflags gio-2.0 chafa fftw3f opus opusfile vorbis ogg glib-2.0)
+COMMONFLAGS += -I@miniaudio@ -I@miniaudio@/extras
+COMMONFLAGS += -I@stb@/include/stb
 COMMONFLAGS += -fstack-protector-strong -Wformat -Werror=format-security -fPIE -D_FORTIFY_SOURCE=2
 COMMONFLAGS += -Wall -Wextra -Wpointer-arith -flto
 
 CFLAGS = $(COMMONFLAGS)
-
-# Compiler flags for C++ code
 CXXFLAGS = $(COMMONFLAGS) -std=c++11
 
 # Libraries
-LIBS = -L/usr/lib -lm -lopusfile -lglib-2.0 -lpthread $(shell PKG_CONFIG_PATH=$(PKG_CONFIG_PATH) $(PKG_CONFIG) --libs gio-2.0 chafa fftw3f opus opusfile ogg vorbis vorbisfile glib-2.0 taglib)
+LIBS = -lm $(shell $(PKG_CONFIG) --libs gio-2.0 chafa fftw3f opus opusfile ogg vorbis vorbisfile glib-2.0)
 LIBS += -lstdc++
 
-LDFLAGS = -logg -lz -flto
+LDFLAGS = -flto
 
 ifeq ($(UNAME_S), Linux)
-  CFLAGS += -fPIE
-  CXXFLAGS += -fPIE
   LDFLAGS += -pie -Wl,-z,relro -s
 endif
 
-# Conditionally add  USE_DBUS is enabled
+# Conditionally add DBUS if USE_DBUS is enabled
 ifeq ($(USE_DBUS), 1)
   DEFINES += -DUSE_DBUS
 endif
 
 # Conditionally add faad2 support if USE_FAAD is enabled
 ifeq ($(USE_FAAD), 1)
-  ifeq ($(ARCH), arm64)
-    CFLAGS += -I/opt/homebrew/opt/faad2/include
-    LIBS += -L/opt/homebrew/opt/faad2/lib -lfaad
-  else
-    CFLAGS += -I/usr/local/include
-    LIBS += -L/usr/local/lib -lfaad
-  endif
+  COMMONFLAGS += $(shell $(PKG_CONFIG) --cflags faad2)
+  LIBS += $(shell $(PKG_CONFIG) --libs faad2)
   DEFINES += -DUSE_FAAD
 endif
 
-ifeq ($(origin CC),default)
-    CC := gcc
-endif
-
 ifneq ($(findstring gcc,$(CC)),)
     ifeq ($(UNAME_S), Linux)
         LIBS += -latomic
@@ -123,14 +89,14 @@ $(OBJDIR)/%.o: src/%.c Makefile | $(OBJDIR)
 
 # Compile the C++ wrapper with g++
 $(WRAPPER_OBJ): $(WRAPPER_SRC) Makefile | $(OBJDIR)
-	$(CXX) $(CXXFLAGS) -c -o $@ $<
+	$(CXX) $(CXXFLAGS) $(TAGLIB_CFLAGS) -c -o $@ $<
 
 $(OBJDIR):
 	mkdir -p $(OBJDIR)
 
 # Link all objects together
 kew: $(OBJS) $(WRAPPER_OBJ) Makefile
-	$(CC) -o kew $(OBJS) $(WRAPPER_OBJ) $(LIBS) $(LDFLAGS)
+	$(CC) -o kew $(OBJS) $(WRAPPER_OBJ) $(LIBS) $(TAGLIB_LIBS) $(LDFLAGS)
 
 .PHONY: install
 install: all
