From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Paul Meyer <49727155+katexochen@users.noreply.github.com>
Date: Mon, 22 Apr 2024 11:52:59 +0200
Subject: [PATCH] nixpkgs: use system Python

Signed-off-by: Paul Meyer <49727155+katexochen@users.noreply.github.com>
---
 bazel/python_dependencies.bzl |  9 ++++-----
 bazel/repositories_extra.bzl  | 17 +----------------
 2 files changed, 5 insertions(+), 21 deletions(-)

diff --git a/bazel/python_dependencies.bzl b/bazel/python_dependencies.bzl
index 9867dc3a46dbe780eb3c02bad8f6a22a2c7fd97e..ff8685e0e437aee447218e912f1cf3e494755cf4 100644
--- a/bazel/python_dependencies.bzl
+++ b/bazel/python_dependencies.bzl
@@ -3,25 +3,24 @@ load("@envoy_toolshed//:packages.bzl", "load_packages")
 load("@rules_python//python:pip.bzl", "pip_parse")
 
 def envoy_python_dependencies():
-    # TODO(phlax): rename base_pip3 -> pip3 and remove this
-    load_packages()
+    pip_parse(
+        name = "pip3",
+        requirements_lock = "@envoy_toolshed//:requirements.txt",
+    )
     pip_parse(
         name = "base_pip3",
-        python_interpreter_target = "@python3_12_host//:python",
         requirements_lock = "@envoy//tools/base:requirements.txt",
         extra_pip_args = ["--require-hashes"],
     )
 
     pip_parse(
         name = "dev_pip3",
-        python_interpreter_target = "@python3_12_host//:python",
         requirements_lock = "@envoy//tools/dev:requirements.txt",
         extra_pip_args = ["--require-hashes"],
     )
 
     pip_parse(
         name = "fuzzing_pip3",
-        python_interpreter_target = "@python3_12_host//:python",
         requirements_lock = "@rules_fuzzing//fuzzing:requirements.txt",
         extra_pip_args = ["--require-hashes"],
     )
diff --git a/bazel/repositories_extra.bzl b/bazel/repositories_extra.bzl
index 7a9d3bbb53b567a8f398abaefe5ff044056d4d21..a5b75718de667883824e4320e2d563830b02f5d2 100644
--- a/bazel/repositories_extra.bzl
+++ b/bazel/repositories_extra.bzl
@@ -3,19 +3,11 @@ load("@bazel_features//:deps.bzl", "bazel_features_deps")
 load("@com_google_protobuf//bazel/private:proto_bazel_features.bzl", "proto_bazel_features")
 load("@emsdk//:deps.bzl", emsdk_deps = "deps")
 load("@proxy_wasm_cpp_host//bazel/cargo/wasmtime/remote:crates.bzl", "crate_repositories")
-load("@rules_python//python:repositories.bzl", "py_repositories", "python_register_toolchains")
+load("@rules_python//python:repositories.bzl", "py_repositories")
 load("//bazel/external/cargo:crates.bzl", "raze_fetch_remote_crates")
 
-def _python_minor_version(python_version):
-    return "_".join(python_version.split(".")[:-1])
-
-# Python version for `rules_python`
-PYTHON_VERSION = "3.12.3"
-PYTHON_MINOR_VERSION = _python_minor_version(PYTHON_VERSION)
-
 # Envoy deps that rely on a first stage of dependency loading in envoy_dependencies().
 def envoy_dependencies_extra(
-        python_version = PYTHON_VERSION,
         ignore_root_user_error = False):
     bazel_features_deps()
     emsdk_deps()
@@ -23,13 +15,6 @@ def envoy_dependencies_extra(
     crate_repositories()
     py_repositories()
 
-    # Registers underscored Python minor version - eg `python3_10`
-    python_register_toolchains(
-        name = "python%s" % _python_minor_version(python_version),
-        python_version = python_version,
-        ignore_root_user_error = ignore_root_user_error,
-    )
-
     aspect_bazel_lib_dependencies()
 
     if not native.existing_rule("proto_bazel_features"):
