From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Paul Meyer <katexochen0@gmail.com>
Date: Thu, 2 Jan 2025 09:32:41 +0100
Subject: [PATCH] nixpkgs: patch boringssl for gcc14

Signed-off-by: Paul Meyer <katexochen0@gmail.com>
---
 bazel/boringssl-gcc14.patch | 25 +++++++++++++++++++++++++
 bazel/repositories.bzl      |  1 +
 2 files changed, 26 insertions(+)
 create mode 100644 bazel/boringssl-gcc14.patch

diff --git a/bazel/boringssl-gcc14.patch b/bazel/boringssl-gcc14.patch
new file mode 100644
index 0000000000000000000000000000000000000000..8dcad4cc11f691eec93efa29075c1d356732e58b
--- /dev/null
+++ b/bazel/boringssl-gcc14.patch
@@ -0,0 +1,25 @@
+diff --git a/crypto/internal.h b/crypto/internal.h
+index a77102d..a45f97b 100644
+--- a/crypto/internal.h
++++ b/crypto/internal.h
+@@ -1174,6 +1174,11 @@
+ 
+ // Arithmetic functions.
+ 
++// The most efficient versions of these functions on GCC and Clang depend on C11
++// |_Generic|. If we ever need to call these from C++, we'll need to add a
++// variant that uses C++ overloads instead.
++#if !defined(__cplusplus)
++
+ // CRYPTO_addc_* returns |x + y + carry|, and sets |*out_carry| to the carry
+ // bit. |carry| must be zero or one.
+ #if OPENSSL_HAS_BUILTIN(__builtin_addc)
+@@ -1275,6 +1280,8 @@
+ #define CRYPTO_subc_w CRYPTO_subc_u32
+ #endif
+ 
++#endif  // !__cplusplus
++
+ 
+ // FIPS functions.
+ 
diff --git a/bazel/repositories.bzl b/bazel/repositories.bzl
index 5cb573770f0aeac7b42d803673c8c520b5e35131..e864ef24db4bf837ef50d90c8eca316eba939d74 100644
--- a/bazel/repositories.bzl
+++ b/bazel/repositories.bzl
@@ -264,6 +264,7 @@ def _boringssl():
         patch_args = ["-p1"],
         patches = [
             "@envoy//bazel:boringssl_static.patch",
+            "@envoy//bazel:boringssl-gcc14.patch",
         ],
     )
 
