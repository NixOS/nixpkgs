diff --git a/src/plugins/PyFalkon/typesystem_pyfalkon.xml b/src/plugins/PyFalkon/typesystem_pyfalkon.xml
index 45f23c49e..31eff876b 100644
--- a/src/plugins/PyFalkon/typesystem_pyfalkon.xml
+++ b/src/plugins/PyFalkon/typesystem_pyfalkon.xml
@@ -265,7 +265,7 @@
     QList&lt;QByteArray&gt; version = QByteArray(Qz::VERSION).split('.');
     PyObject *pyFalkonVersion = PyTuple_New(3);
     for (int i = 0; i &lt; 3; ++i)
-        PyTuple_SET_ITEM(pyFalkonVersion, i, PyLong_FromLong(version[i].toInt()));
+        PyTuple_SetItem(pyFalkonVersion, i, PyLong_FromLong(version[i].toInt()));
     PyModule_AddObject(module, "__version_info__", pyFalkonVersion);
     PyModule_AddStringConstant(module, "__version__", Qz::VERSION);
     </inject-code>
@@ -273,9 +273,9 @@
     <template name="return_for_QFileDialog">
     %RETURN_TYPE retval_ = %CPPSELF.%FUNCTION_NAME(%1, %2, %3, %4, %5, &amp;%6, %7);
     %PYARG_0 = PyTuple_New(2);
-    PyTuple_SET_ITEM(%PYARG_0, 0, %CONVERTTOPYTHON[%RETURN_TYPE](retval_));
+    PyTuple_SetItem(%PYARG_0, 0, %CONVERTTOPYTHON[%RETURN_TYPE](retval_));
     auto ARG6_PTR = &amp;%6;
-    PyTuple_SET_ITEM(%PYARG_0, 1, %CONVERTTOPYTHON[%ARG6_TYPE](ARG6_PTR));
+    PyTuple_SetItem(%PYARG_0, 1, %CONVERTTOPYTHON[%ARG6_TYPE](ARG6_PTR));
     </template>
 
     <suppress-warning text="Unable to translate type &quot;std::function&lt;QPoint (QSize)&gt;&quot;:*"/>
