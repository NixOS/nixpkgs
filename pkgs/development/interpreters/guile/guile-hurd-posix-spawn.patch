Fix <https://issues.guix.gnu.org/61095>, which affects GNU/Hurd.

diff --git a/libguile/posix.c b/libguile/posix.c
index 3a8be94e4..f5fdc544c 100644
--- a/libguile/posix.c
+++ b/libguile/posix.c
@@ -1326,7 +1326,14 @@ static void
 close_inherited_fds_slow (posix_spawn_file_actions_t *actions, int max_fd)
 {
   while (--max_fd > 2)
-    posix_spawn_file_actions_addclose (actions, max_fd);
+    {
+      /* Adding invalid file descriptors to an 'addclose' action leads
+         to 'posix_spawn' failures on some operating systems:
+         <https://bugs.gnu.org/61095>.  Hence the extra check.  */
+      int flags = fcntl (max_fd, F_GETFD, NULL);
+      if ((flags >= 0) && ((flags & FD_CLOEXEC) == 0))
+        posix_spawn_file_actions_addclose (actions, max_fd);
+    }
 }
 
 static void

Fix <https://issues.guix.gnu.org/62501>.

diff --git a/test-suite/tests/posix.test b/test-suite/tests/posix.test
index f20e04453..d5cf47cda 100644
--- a/test-suite/tests/posix.test
+++ b/test-suite/tests/posix.test
@@ -431,7 +431,13 @@
       (let ((str (get-string-all (car input+output))))
         (close-port (car input+output))
         (waitpid pid)
-        str)))
+
+        ;; On GNU/Hurd, the exec server prepends 'LD_ORIGIN_PATH' for
+        ;; every program: <https://bugs.gnu.org/62501>.  Strip it.
+        (if (and (string=? "GNU" (utsname:sysname (uname)))
+                 (string-prefix? "LD_ORIGIN_PATH=" str))
+            (string-drop str (+ 1 (string-index str #\newline)))
+            str))))
 
   (pass-if-equal "ls /proc/self/fd"
       "0\n1\n2\n3\n"                     ;fourth FD is for /proc/self/fd
