From 4a217a930d4481d5185ce37bcdf43bbcce7d97d8 Mon Sep 17 00:00:00 2001
From: Yaroslav Bolyukin <iam@lach.pw>
Date: Mon, 16 Sep 2024 19:13:12 +0200
Subject: [PATCH 1/3] refactor: template paths

---
 qubesadmin/app.py                    | 21 +++------------------
 qubesadmin/backup/dispvm.py          |  5 ++++-
 qubesadmin/backup/restore.py         |  6 +++---
 qubesadmin/config.py                 |  4 ++--
 qubesadmin/device_protocol.py        |  2 +-
 qubesadmin/tools/qvm_start.py        |  2 +-
 qubesadmin/tools/qvm_start_daemon.py |  8 ++++----
 7 files changed, 18 insertions(+), 30 deletions(-)

diff --git a/qubesadmin/app.py b/qubesadmin/app.py
index a882eea..c4541e4 100644
--- a/qubesadmin/app.py
+++ b/qubesadmin/app.py
@@ -40,13 +40,7 @@ import qubesadmin.utils
 import qubesadmin.vm
 import qubesadmin.config
 import qubesadmin.device_protocol
-
-try:
-    import qubesdb
-    has_qubesdb = True
-except ImportError:
-    has_qubesdb = False
-
+import qubesdb
 
 class VMCollection(object):
     """Collection of VMs objects"""
@@ -263,17 +257,8 @@ class QubesBase(qubesadmin.base.PropertyHolder):
     def local_name(self):
         """ Get localhost name """
         if not self._local_name:
-            local_name = None
-            if has_qubesdb:
-                try:
-                    local_qdb = qubesdb.QubesDB()
-                    local_name_b = local_qdb.read('/name')
-                    if local_name_b:
-                        local_name = local_name_b.decode()
-                except qubesdb.Error:
-                    pass
-            if local_name is None:
-                local_name = os.uname()[1]
+            local_qdb = qubesdb.QubesDB()
+            local_name = local_qdb.read('/name').decode()
             self._local_name = local_name
 
         return self._local_name
diff --git a/qubesadmin/backup/dispvm.py b/qubesadmin/backup/dispvm.py
index 47307dc..9c271d3 100644
--- a/qubesadmin/backup/dispvm.py
+++ b/qubesadmin/backup/dispvm.py
@@ -32,6 +32,7 @@ import qubesadmin
 import qubesadmin.exc
 import qubesadmin.utils
 import qubesadmin.vm
+import qubesdb
 
 LOCKFILE = '/var/run/qubes/backup-paranoid-restore.lock'
 
@@ -173,9 +174,11 @@ class RestoreInDisposableVM:
             ['qvm-copy-to-vm', self.dispvm_name, path],
             stdout=subprocess.DEVNULL,
             stderr=subprocess.DEVNULL)
+        local_qdb = qubesdb.QubesDB()
+        local_name = local_qdb.read('/name').decode()
         return '/home/{}/QubesIncoming/{}/{}'.format(
             self.dispvm.default_user,
-            os.uname()[1],
+            local_name,
             os.path.basename(path)
         )
 
diff --git a/qubesadmin/backup/restore.py b/qubesadmin/backup/restore.py
index 6fb8a6e..e9ff515 100644
--- a/qubesadmin/backup/restore.py
+++ b/qubesadmin/backup/restore.py
@@ -282,7 +282,7 @@ def launch_scrypt(action, input_name, output_name, passphrase):
     :param passphrase: passphrase
     :return: subprocess.Popen object
     '''
-    command_line = ['scrypt', action, '-f', input_name, output_name]
+    command_line = ['@scrypt@/bin/scrypt', action, '-f', input_name, output_name]
     (p, pty) = launch_proc_with_pty(command_line,
         stdin=subprocess.PIPE if input_name == '-' else None,
         stdout=subprocess.PIPE if output_name == '-' else None,
@@ -996,9 +996,9 @@ class BackupRestore(object):
 
             backup_stdin = vmproc.stdout
             if isinstance(self.app, qubesadmin.app.QubesRemote):
-                qfile_unpacker_path = '/usr/lib/qubes/qfile-unpacker'
+                qfile_unpacker_path = '@qfile_unpacker@/lib/qubes/qfile-unpacker'
             else:
-                qfile_unpacker_path = '/usr/libexec/qubes/qfile-dom0-unpacker'
+                qfile_unpacker_path = '@qfile_unpacker@/libexec/qubes/qfile-dom0-unpacker'
             # keep at least 500M free for decryption of a previous chunk
             tar1_command = [qfile_unpacker_path,
                             str(os.getuid()), self.tmpdir, '-v',
diff --git a/qubesadmin/config.py b/qubesadmin/config.py
index d348bf6..485f404 100644
--- a/qubesadmin/config.py
+++ b/qubesadmin/config.py
@@ -22,8 +22,8 @@
 
 #: path to qubesd socket
 QUBESD_SOCKET = '/var/run/qubesd.sock'
-QREXEC_CLIENT = '/usr/lib/qubes/qrexec-client'
-QREXEC_CLIENT_VM = '/usr/bin/qrexec-client-vm'
+QREXEC_CLIENT = '@qrexec_dom0@/bin/qrexec-client'
+QREXEC_CLIENT_VM = '@qrexec_domU@/bin/qrexec-client-vm'
 QUBESD_RECONNECT_DELAY = 1.0
 QREXEC_SERVICES_DIR = '/etc/qubes-rpc'
 
diff --git a/qubesadmin/device_protocol.py b/qubesadmin/device_protocol.py
index c9c7506..e98b0db 100644
--- a/qubesadmin/device_protocol.py
+++ b/qubesadmin/device_protocol.py
@@ -422,7 +422,7 @@ class DeviceInterface:
         #       subclass        subclass_name           <-- single tab
         #               prog-if  prog-if_name   <-- two tabs
         result = {}
-        with open(f'/usr/share/hwdata/{bus}.ids',
+        with open(f'@hwdata@/share/hwdata/{bus}.ids',
                   encoding='utf-8', errors='ignore') as pciids:
             # for `class_name` and `subclass_name`
             # pylint: disable=used-before-assignment
diff --git a/qubesadmin/tools/qvm_start.py b/qubesadmin/tools/qvm_start.py
index 39fca0c..6f25da9 100644
--- a/qubesadmin/tools/qvm_start.py
+++ b/qubesadmin/tools/qvm_start.py
@@ -74,7 +74,7 @@ parser_drive.add_argument('--cdrom', metavar='IMAGE',
 
 parser_drive.add_argument('--install-windows-tools',
     action='store_const', dest='drive', default=False,
-    const='cdrom:dom0:/usr/lib/qubes/qubes-windows-tools.iso',
+    const='cdrom:dom0:@qubes_windows_tools@/lib/qubes/qubes-windows-tools.iso',
     help='temporarily attach Windows tools CDROM to the domain')
 
 
diff --git a/qubesadmin/tools/qvm_start_daemon.py b/qubesadmin/tools/qvm_start_daemon.py
index 7982b1f..4bfa590 100644
--- a/qubesadmin/tools/qvm_start_daemon.py
+++ b/qubesadmin/tools/qvm_start_daemon.py
@@ -39,8 +39,8 @@ import qubesadmin.tools
 import qubesadmin.vm
 from qubesadmin.tools import xcffibhelpers
 
-GUI_DAEMON_PATH = '/usr/bin/qubes-guid'
-PACAT_DAEMON_PATH = '/usr/bin/pacat-simple-vchan'
+GUI_DAEMON_PATH = '@qubes_guid@/bin/qubes-guid'
+PACAT_DAEMON_PATH = '@qubes_guid@/bin/pacat-simple-vchan'
 QUBES_ICON_DIR = '/usr/share/icons/hicolor/128x128/devices'
 
 GUI_DAEMON_OPTIONS = [
@@ -319,7 +319,7 @@ def get_monitor_layout():
     """Get list of monitors and their size/position"""
     outputs = []
 
-    with subprocess.Popen(['xrandr', '-q'], stdout=subprocess.PIPE) as proc:
+    with subprocess.Popen(['@xrandr@/bin/xrandr', '-q'], stdout=subprocess.PIPE) as proc:
         for line in proc.stdout:
             line = line.decode()
             if not line.startswith("Screen") and not line.startswith(" "):
@@ -452,7 +452,7 @@ class DAEMONLauncher:
         guid_cmd += ['-T']  # prefix window titles with VM name
         # get owner of X11 session
         session_owner = None
-        for line in subprocess.check_output(['xhost']).splitlines():
+        for line in subprocess.check_output(['@xhost@/bin/xhost']).splitlines():
             if line == b'SI:localuser:root':
                 pass
             elif line.startswith(b'SI:localuser:'):
-- 
2.45.2

