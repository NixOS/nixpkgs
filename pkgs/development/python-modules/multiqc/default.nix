{
  lib,
  buildPythonPackage,
  fetchFromGitHub,
  setuptools,
  click,
  coloredlogs,
  humanize,
  importlib-metadata,
  jinja2,
  kaleido,
  markdown,
  numpy,
  packaging,
  pillow,
  plotly,
  pyaml-env,
  pydantic,
  pyyaml,
  requests,
  rich,
  rich-click,
  spectra,
  tqdm,
  typeguard,
  mypy,
  pdoc3,
  pre-commit,
  pytest,
  pytest-cov,
  ruff,
  types-markdown,
  types-pyyaml,
  types-requests,
  types-tqdm,
  pytestCheckHook,
}:
buildPythonPackage rec {
  pname = "multiqc";
  version = "1.23";
  pyproject = true;

  src = fetchFromGitHub {
    owner = "MultiQC";
    repo = "MultiQC";
    rev = "v${version}";
    hash = "sha256-lhxCqp/QtSbI+1n5Ll1WMVRynJta+gq052Rk7zk615E=";
    fetchSubmodules = true;
  };

  build-system = [ setuptools ];

  dependencies = [
    click
    coloredlogs
    humanize
    importlib-metadata
    jinja2
    kaleido
    markdown
    numpy
    packaging
    pillow
    plotly
    pyaml-env
    pydantic
    pyyaml
    requests
    rich
    rich-click
    spectra
    tqdm
    typeguard
  ];

  optional-dependencies = {
    dev = [
      mypy
      pdoc3
      pre-commit
      pytest
      pytest-cov
      ruff
      types-markdown
      types-pyyaml
      types-requests
      types-tqdm
    ];
  };

  nativeCheckInputs = [ pytestCheckHook ];

  pythonImportsCheck = [ "multiqc" ];

  meta = {
    description = "Aggregate results from bioinformatics analyses across many samples into a single report";
    longDescription = ''
      MultiQC is a tool to create a single report with interactive plots for
      multiple bioinformatics analyses across many samples.

      Reports are generated by scanning given directories for recognised log
      files. These are parsed and a single HTML report is generated summarising
      the statistics for all logs found. MultiQC reports can describe multiple
      analysis steps and large numbers of samples within a single plot, and
      multiple analysis tools making it ideal for routine fast quality control.

      A very large number of Bioinformatics tools are supported by MultiQC.
      Please see the MultiQC website for a [complete
      list](https://multiqc.info/modules/). MultiQC can also easily parse data
      from custom scripts, if correctly formatted / configured - a feature
      called [Custom Content](https://multiqc.info/docs/custom_content/).

      More modules are being written all of the time. Please suggest any ideas
      as a new [issue](https://github.com/MultiQC/MultiQC/issues) _(please
      include example log files)_.
    '';
    homepage = "https://github.com/MultiQC/MultiQC";
    changelog = "https://github.com/MultiQC/MultiQC/blob/${src.rev}/CHANGELOG.md";
    license = lib.licenses.gpl3Only;
    maintainers = with lib.maintainers; [ edmundmiller ];
    mainProgram = "multiqc";
  };
}
