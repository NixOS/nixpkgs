diff --git a/tests/unit_tests/conftest.py b/tests/unit_tests/conftest.py
index fed8dbec5..6144ad7b8 100644
--- a/tests/unit_tests/conftest.py
+++ b/tests/unit_tests/conftest.py
@@ -5,36 +5,36 @@ from importlib import util
 from typing import Dict, Sequence
 
 import pytest
-from blockbuster import blockbuster_ctx
+# from blockbuster import blockbuster_ctx
 from pytest import Config, Function, Parser
 
 
-@pytest.fixture(autouse=True)
-def blockbuster() -> Iterator[None]:
-    with blockbuster_ctx("langchain") as bb:
-        bb.functions["io.TextIOWrapper.read"].can_block_in(
-            "langchain/__init__.py", "<module>"
-        )
-
-        for func in ["os.stat", "os.path.abspath"]:
-            (
-                bb.functions[func]
-                .can_block_in("langchain_core/runnables/base.py", "__repr__")
-                .can_block_in(
-                    "langchain_core/beta/runnables/context.py", "aconfig_with_context"
-                )
-            )
-
-        for func in ["os.stat", "io.TextIOWrapper.read"]:
-            bb.functions[func].can_block_in(
-                "langsmith/client.py", "_default_retry_config"
-            )
-
-        for bb_function in bb.functions.values():
-            bb_function.can_block_in(
-                "freezegun/api.py", "_get_cached_module_attributes"
-            )
-        yield
+# @pytest.fixture(autouse=True)
+# def blockbuster() -> Iterator[None]:
+#     with blockbuster_ctx("langchain") as bb:
+#         bb.functions["io.TextIOWrapper.read"].can_block_in(
+#             "langchain/__init__.py", "<module>"
+#         )
+
+#         for func in ["os.stat", "os.path.abspath"]:
+#             (
+#                 bb.functions[func]
+#                 .can_block_in("langchain_core/runnables/base.py", "__repr__")
+#                 .can_block_in(
+#                     "langchain_core/beta/runnables/context.py", "aconfig_with_context"
+#                 )
+#             )
+
+#         for func in ["os.stat", "io.TextIOWrapper.read"]:
+#             bb.functions[func].can_block_in(
+#                 "langsmith/client.py", "_default_retry_config"
+#             )
+
+#         for bb_function in bb.functions.values():
+#             bb_function.can_block_in(
+#                 "freezegun/api.py", "_get_cached_module_attributes"
+#             )
+#         yield
 
 
 def pytest_addoption(parser: Parser) -> None:
