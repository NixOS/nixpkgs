diff --git a/graphviz/backend.py b/graphviz/backend.py
index 6f4cc0c..bc4781e 100644
--- a/graphviz/backend.py
+++ b/graphviz/backend.py
@@ -122,7 +122,7 @@ def command(engine, format_, filepath=None, renderer=None, formatter=None):
         raise ValueError('unknown formatter: %r' % formatter)
 
     output_format = [f for f in (format_, renderer, formatter) if f is not None]
-    cmd = [engine, '-T%s' % ':'.join(output_format)]
+    cmd = [os.path.join('@graphviz@/bin', engine), '-T%s' % ':'.join(output_format)]
 
     if filepath is None:
         rendered = None
@@ -255,7 +255,7 @@ def version():
         subprocess.CalledProcessError: If the exit status is non-zero.
         RuntimmeError: If the output cannot be parsed into a version number.
     """
-    cmd = ['dot', '-V']
+    cmd = ['@graphviz@/bin/dot', '-V']
     out, _ = run(cmd, check=True, encoding='ascii',
                  stdout=subprocess.PIPE,
                  stderr=subprocess.STDOUT)
diff --git a/tests/test_backend.py b/tests/test_backend.py
index 9f307f5..e43bf5b 100644
--- a/tests/test_backend.py
+++ b/tests/test_backend.py
@@ -50,7 +50,7 @@ def test_run_encoding_mocked(mocker, Popen, input=u'sp\xe4m', encoding='utf-8'):
         m.decode.assert_called_once_with(encoding)
 
 
-@pytest.exe
+@pytest.mark.skip(reason='empty $PATH has no effect')
 @pytest.mark.usefixtures('empty_path')
 @pytest.mark.parametrize('func, args', [
     (render, ['dot', 'pdf', 'nonfilepath']),
@@ -143,7 +143,7 @@ def test_render_mocked(capsys, mocker, Popen, quiet):  # noqa: N803
 
     assert render('dot', 'pdf', 'nonfilepath', quiet=quiet) == 'nonfilepath.pdf'
 
-    Popen.assert_called_once_with(['dot', '-Tpdf', '-O', 'nonfilepath'],
+    Popen.assert_called_once_with(['@graphviz@/bin/dot', '-Tpdf', '-O', 'nonfilepath'],
                                   stdout=subprocess.PIPE,
                                   stderr=subprocess.PIPE,
                                   cwd=None, startupinfo=mocker.ANY)
@@ -201,7 +201,7 @@ def test_pipe_pipe_invalid_data_mocked(mocker, py2, Popen, quiet):  # noqa: N803
     assert e.value.stdout is mocker.sentinel.out
     e.value.stdout = mocker.sentinel.new_stdout
     assert e.value.stdout is mocker.sentinel.new_stdout
-    Popen.assert_called_once_with(['dot', '-Tpng'],
+    Popen.assert_called_once_with(['@graphviz@/bin/dot', '-Tpng'],
                                   stdin=subprocess.PIPE,
                                   stdout=subprocess.PIPE,
                                   stderr=subprocess.PIPE,
@@ -224,7 +224,7 @@ def test_pipe_mocked(capsys, mocker, Popen, quiet):  # noqa: N803
 
     assert pipe('dot', 'png', b'nongraph', quiet=quiet) is mocker.sentinel.out
 
-    Popen.assert_called_once_with(['dot', '-Tpng'],
+    Popen.assert_called_once_with(['@graphviz@/bin/dot', '-Tpng'],
                                   stdin=subprocess.PIPE,
                                   stdout=subprocess.PIPE,
                                   stderr=subprocess.PIPE,
@@ -250,7 +250,7 @@ def test_version_parsefail_mocked(mocker, Popen):  # noqa: N803
     with pytest.raises(RuntimeError, match=r'nonversioninfo'):
         version()
 
-    Popen.assert_called_once_with(['dot', '-V'],
+    Popen.assert_called_once_with(['@graphviz@/bin/dot', '-V'],
                                   stdout=subprocess.PIPE,
                                   stderr=subprocess.STDOUT,
                                   startupinfo=mocker.ANY)
@@ -269,7 +269,7 @@ def test_version_mocked(mocker, Popen, stdout, expected):  # noqa: N803
 
     assert version() == expected
 
-    Popen.assert_called_once_with(['dot', '-V'],
+    Popen.assert_called_once_with(['@graphviz@/bin/dot', '-V'],
                                   stdout=subprocess.PIPE,
                                   stderr=subprocess.STDOUT,
                                   startupinfo=mocker.ANY)
