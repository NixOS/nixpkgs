diff --git a/graphviz/backend.py b/graphviz/backend.py
index b66e616..3da4ef0 100644
--- a/graphviz/backend.py
+++ b/graphviz/backend.py
@@ -124,7 +124,7 @@ def command(engine: str, format_: str, filepath=None,
         raise ValueError(f'unknown formatter: {formatter!r}')
 
     output_format = [f for f in (format_, renderer, formatter) if f is not None]
-    cmd = ['dot', '-K%s' % engine, '-T%s' % ':'.join(output_format)]
+    cmd = ['@graphviz@/bin/dot', '-K%s' % engine, '-T%s' % ':'.join(output_format)]
 
     if filepath is None:
         rendered = None
@@ -297,7 +297,7 @@ def unflatten(source: str,
     if fanout and stagger is None:
         raise RequiredArgumentError('fanout given without stagger')
 
-    cmd = ['unflatten']
+    cmd = ['@graphviz@/bin/unflatten']
     if stagger is not None:
         cmd += ['-l', str(stagger)]
     if fanout:
@@ -332,7 +332,7 @@ def version() -> typing.Tuple[int, ...]:
         Graphviz Release version entry format:
         https://gitlab.com/graphviz/graphviz/-/blob/f94e91ba819cef51a4b9dcb2d76153684d06a913/gen_version.py#L17-20
     """
-    cmd = ['dot', '-V']
+    cmd = ['@graphviz@/bin/dot', '-V']
     out, _ = run(cmd, check=True, encoding='ascii',
                  stdout=subprocess.PIPE,
                  stderr=subprocess.STDOUT)
diff --git a/tests/test_backend.py b/tests/test_backend.py
index e0a0e1c..681f178 100644
--- a/tests/test_backend.py
+++ b/tests/test_backend.py
@@ -54,7 +54,7 @@ def test_run_encoding_mocked(mocker, Popen, input='sp\xe4m', encoding='utf-8'):
         m.decode.assert_called_once_with(encoding)
 
 
-@pytest.mark.exe
+@pytest.mark.skip(reason='empty $PATH has no effect')
 @pytest.mark.usefixtures('empty_path')
 @pytest.mark.parametrize('func, args', [
     (render, ['dot', 'pdf', 'nonfilepath']),
@@ -148,7 +148,7 @@ def test_render_mocked(capsys, mocker, Popen, quiet):  # noqa: N803
 
     assert render('dot', 'pdf', 'nonfilepath', quiet=quiet) == 'nonfilepath.pdf'
 
-    Popen.assert_called_once_with(['dot', '-Kdot', '-Tpdf', '-O', 'nonfilepath'],
+    Popen.assert_called_once_with(['@graphviz@/bin/dot', '-Kdot', '-Tpdf', '-O', 'nonfilepath'],
                                   stdout=subprocess.PIPE,
                                   stderr=subprocess.PIPE,
                                   cwd=None, startupinfo=mocker.ANY)
@@ -211,7 +211,7 @@ def test_pipe_pipe_invalid_data_mocked(mocker, Popen, quiet):  # noqa: N803
     assert e.value.stdout is out
     e.value.stdout = mocker.sentinel.new_stdout
     assert e.value.stdout is mocker.sentinel.new_stdout
-    Popen.assert_called_once_with(['dot', '-Kdot', '-Tpng'],
+    Popen.assert_called_once_with(['@graphviz@/bin/dot', '-Kdot', '-Tpng'],
                                   stdin=subprocess.PIPE,
                                   stdout=subprocess.PIPE,
                                   stderr=subprocess.PIPE,
@@ -231,7 +231,7 @@ def test_pipe_mocked(capsys, mocker, Popen, quiet):  # noqa: N803
 
     assert pipe('dot', 'png', b'nongraph', quiet=quiet) == b'stdout'
 
-    Popen.assert_called_once_with(['dot', '-Kdot', '-Tpng'],
+    Popen.assert_called_once_with(['@graphviz@/bin/dot', '-Kdot', '-Tpng'],
                                   stdin=subprocess.PIPE,
                                   stdout=subprocess.PIPE,
                                   stderr=subprocess.PIPE,
@@ -259,7 +259,7 @@ def test_unflatten_mocked(capsys, mocker, Popen):
     proc.communicate.return_value = (b'nonresult', b'')
 
     assert unflatten('nonsource') == 'nonresult'
-    Popen.assert_called_once_with(['unflatten'],
+    Popen.assert_called_once_with(['@graphviz@/bin/unflatten'],
                                   stdin=subprocess.PIPE,
                                   stdout=subprocess.PIPE,
                                   stderr=subprocess.PIPE,
@@ -290,7 +290,7 @@ def test_version_parsefail_mocked(mocker, Popen):  # noqa: N803
     with pytest.raises(RuntimeError, match=r'nonversioninfo'):
         version()
 
-    Popen.assert_called_once_with(['dot', '-V'],
+    Popen.assert_called_once_with(['@graphviz@/bin/dot', '-V'],
                                   stdout=subprocess.PIPE,
                                   stderr=subprocess.STDOUT,
                                   startupinfo=mocker.ANY)
@@ -312,7 +312,7 @@ def test_version_mocked(mocker, Popen, stdout, expected):  # noqa: N803
 
     assert version() == expected
 
-    Popen.assert_called_once_with(['dot', '-V'],
+    Popen.assert_called_once_with(['@graphviz@/bin/dot', '-V'],
                                   stdout=subprocess.PIPE,
                                   stderr=subprocess.STDOUT,
                                   startupinfo=mocker.ANY)
