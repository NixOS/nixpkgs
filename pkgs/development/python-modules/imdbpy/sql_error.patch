diff --git a/imdb/parser/sql/__init__.py b/imdb/parser/sql/__init__.py
index cd4a3e3..3fcfdd4 100644
--- a/imdb/parser/sql/__init__.py
+++ b/imdb/parser/sql/__init__.py
@@ -557,7 +557,6 @@ class IMDbSqlAccessSystem(IMDbBase):
     """The class used to access IMDb's data through a SQL database."""

     accessSystem = 'sql'
-    _sql_logger = logging.getLogger('imdbpy.parser.sql')

     def __init__(self, uri, adultSearch=True, *arguments, **keywords):
         """Initialize the access system."""
@@ -582,7 +581,7 @@ class IMDbSqlAccessSystem(IMDbBase):
         except ImportError as e:
             raise IMDbError('unable to import SQLAlchemy')
         # Set the connection to the database.
-        self._sql_logger.debug('connecting to %s', uri)
+        logger.debug('connecting to %s', uri)
         try:
             self._connection = setConnection(uri, DB_TABLES)
         except AssertionError as e:
@@ -593,7 +592,7 @@ class IMDbSqlAccessSystem(IMDbBase):
         # Maps some IDs to the corresponding strings.
         self._kind = {}
         self._kindRev = {}
-        self._sql_logger.debug('reading constants from the database')
+        logger.debug('reading constants from the database')
         try:
             for kt in KindType.select():
                 self._kind[kt.id] = kt.kind
@@ -1616,7 +1615,7 @@ class IMDbSqlAccessSystem(IMDbBase):
         return
         if not hasattr(self, '_connection'):
             return
-        self._sql_logger.debug('closing connection to the database')
+        logger.debug('closing connection to the database')
         try:
             self._connection.close()
         except:
