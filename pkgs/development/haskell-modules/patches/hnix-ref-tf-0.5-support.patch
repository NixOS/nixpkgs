diff '--color=auto' '--color=never' -r --unified hnix-0.12.0.1/hnix.cabal hnix-patched/hnix.cabal
--- hnix-0.12.0.1/hnix.cabal	2001-09-09 03:46:40.000000000 +0200
+++ hnix-patched/hnix.cabal	2021-05-05 12:07:38.388267353 +0200
@@ -430,7 +430,7 @@
     , parser-combinators >= 1.0.1 && < 1.3
     , prettyprinter >= 1.7.0 && < 1.8
     , process >= 1.6.3 && < 1.7
-    , ref-tf >= 0.4.0 && < 0.5
+    , ref-tf >= 0.5
     , regex-tdfa >= 1.2.3 && < 1.4
     , scientific >= 0.3.6 && < 0.4
     , semialign >= 1 && < 1.2
diff '--color=auto' '--color=never' -r --unified hnix-0.12.0.1/src/Nix/Fresh.hs hnix-patched/src/Nix/Fresh.hs
--- hnix-0.12.0.1/src/Nix/Fresh.hs	2001-09-09 03:46:40.000000000 +0200
+++ hnix-patched/src/Nix/Fresh.hs	2021-05-05 12:07:45.841267497 +0200
@@ -65,18 +65,3 @@
 
 runFreshIdT :: Functor m => Var m i -> FreshIdT i m a -> m a
 runFreshIdT i m = runReaderT (unFreshIdT m) i
-
--- Orphan instance needed by Infer.hs and Lint.hs
-
--- Since there's no forking, it's automatically atomic.
-instance MonadAtomicRef (ST s) where
-  atomicModifyRef r f = do
-    v <- readRef r
-    let (a, b) = f v
-    writeRef r a
-    return b
-  atomicModifyRef' r f = do
-    v <- readRef r
-    let (a, b) = f v
-    writeRef r $! a
-    return b
