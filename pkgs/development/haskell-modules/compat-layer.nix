/* compat-layer.nix maps new Haskell attribute names to the camel-case
   versions we used to have before. */

self: super: {

  "3dGraphicsExamples" = self."3d-graphics-examples";
  "abcPuzzle" = self."abc-puzzle";
  "AbortTMonadstf" = self."AbortT-monadstf";
  "AbortTMtl" = self."AbortT-mtl";
  "AbortTTransformers" = self."AbortT-transformers";
  "abstractDeque" = self."abstract-deque";
  "abstractDequeTests" = self."abstract-deque-tests";
  "abstractParAccelerate" = self."abstract-par-accelerate";
  "abstractPar" = self."abstract-par";
  "ACAngle" = self."AC-Angle";
  "ACBoolean" = self."AC-Boolean";
  "ACBuildPlatform" = self."AC-BuildPlatform";
  "accelerateArithmetic" = self."accelerate-arithmetic";
  "accelerateCublas" = self."accelerate-cublas";
  "accelerateCuda" = self."accelerate-cuda";
  "accelerateCufft" = self."accelerate-cufft";
  "accelerateExamples" = self."accelerate-examples";
  "accelerateFft" = self."accelerate-fft";
  "accelerateFftw" = self."accelerate-fftw";
  "accelerateFourierBenchmark" = self."accelerate-fourier-benchmark";
  "accelerateFourier" = self."accelerate-fourier";
  "accelerateIo" = self."accelerate-io";
  "accelerateUtility" = self."accelerate-utility";
  "accessTime" = self."access-time";
  "ACColour" = self."AC-Colour";
  "ACEasyRasterGTK" = self."AC-EasyRaster-GTK";
  "ACHalfInteger" = self."AC-HalfInteger";
  "acidState" = self."acid-state";
  "acidStateTls" = self."acid-state-tls";
  "acMachineConduit" = self."ac-machine-conduit";
  "acMachine" = self."ac-machine";
  "acmeCadre" = self."acme-cadre";
  "acmeCofunctor" = self."acme-cofunctor";
  "acmeColosson" = self."acme-colosson";
  "acmeComonad" = self."acme-comonad";
  "acmeCutegirl" = self."acme-cutegirl";
  "acmeDont" = self."acme-dont";
  "acmeHq9plus" = self."acme-hq9plus";
  "acmeHttp" = self."acme-http";
  "acmeInator" = self."acme-inator";
  "acmeIo" = self."acme-io";
  "acmeLolcat" = self."acme-lolcat";
  "acmeLookofdisapproval" = self."acme-lookofdisapproval";
  "acmeMicrowave" = self."acme-microwave";
  "acmeMissiles" = self."acme-missiles";
  "acmeNow" = self."acme-now";
  "acmeNumbersystem" = self."acme-numbersystem";
  "acmeOmitted" = self."acme-omitted";
  "acmePhp" = self."acme-php";
  "acmePointfulNumbers" = self."acme-pointful-numbers";
  "acmeRealworld" = self."acme-realworld";
  "acmeSchoenfinkel" = self."acme-schoenfinkel";
  "acmeStrfry" = self."acme-strfry";
  "acmeStringlyTyped" = self."acme-stringly-typed";
  "acmeStrtok" = self."acme-strtok";
  "acmeYear" = self."acme-year";
  "ACMiniTest" = self."AC-MiniTest";
  "ACPPM" = self."AC-PPM";
  "ACRandom" = self."AC-Random";
  "ACTerminal" = self."AC-Terminal";
  "actionPermutations" = self."action-permutations";
  "activehsBase" = self."activehs-base";
  "activitystreamsAeson" = self."activitystreams-aeson";
  "ACVanillaArray" = self."AC-VanillaArray";
  "ACVectorFancy" = self."AC-Vector-Fancy";
  "ACVector" = self."AC-Vector";
  "AdaptiveBlaisorblade" = self."Adaptive-Blaisorblade";
  "adaptiveContainers" = self."adaptive-containers";
  "adaptiveTuple" = self."adaptive-tuple";
  "adhocNetwork" = self."adhoc-network";
  "adobeSwatchExchange" = self."adobe-swatch-exchange";
  "adpMultiMonadiccp" = self."adp-multi-monadiccp";
  "adpMulti" = self."adp-multi";
  "AERNBasics" = self."AERN-Basics";
  "AERNNet" = self."AERN-Net";
  "AERNRealDouble" = self."AERN-Real-Double";
  "AERNRealInterval" = self."AERN-Real-Interval";
  "AERNReal" = self."AERN-Real";
  "AERNRnToRmPlot" = self."AERN-RnToRm-Plot";
  "AERNRnToRm" = self."AERN-RnToRm";
  "aesonBson" = self."aeson-bson";
  "aesonLens" = self."aeson-lens";
  "aesonNative" = self."aeson-native";
  "aesonPretty" = self."aeson-pretty";
  "aesonQq" = self."aeson-qq";
  "aesonSchema" = self."aeson-schema";
  "aesonSerialize" = self."aeson-serialize";
  "aesonSmart" = self."aeson-smart";
  "aesonStreams" = self."aeson-streams";
  "aesonToolkit" = self."aeson-toolkit";
  "aesonT" = self."aeson-t";
  "aesonUtils" = self."aeson-utils";
  "affineInvariantEnsembleMcmc" = self."affine-invariant-ensemble-mcmc";
  "AgdaExecutable" = self."Agda-executable";
  "agdaServer" = self."agda-server";
  "airExtra" = self."air-extra";
  "airSpec" = self."air-spec";
  "airTh" = self."air-th";
  "aivikaExperimentCairo" = self."aivika-experiment-cairo";
  "aivikaExperimentChart" = self."aivika-experiment-chart";
  "aivikaExperimentDiagrams" = self."aivika-experiment-diagrams";
  "aivikaExperiment" = self."aivika-experiment";
  "aivikaTransformers" = self."aivika-transformers";
  "alexMeta" = self."alex-meta";
  "algebraicClasses" = self."algebraic-classes";
  "alignedForeignptr" = self."aligned-foreignptr";
  "allocatedProcessor" = self."allocated-processor";
  "alloyProxyFd" = self."alloy-proxy-fd";
  "alpinoTools" = self."alpino-tools";
  "alsaCore" = self."alsa-core";
  "alsaGui" = self."alsa-gui";
  "alsaMidi" = self."alsa-midi";
  "alsaMixer" = self."alsa-mixer";
  "alsaPcm" = self."alsa-pcm";
  "alsaPcmTests" = self."alsa-pcm-tests";
  "alsaSeq" = self."alsa-seq";
  "alsaSeqTests" = self."alsa-seq-tests";
  "alternativeIo" = self."alternative-io";
  "amazonEmailerClientSnap" = self."amazon-emailer-client-snap";
  "amazonEmailer" = self."amazon-emailer";
  "amazonkaAutoscaling" = self."amazonka-autoscaling";
  "amazonkaCloudformation" = self."amazonka-cloudformation";
  "amazonkaCloudfront" = self."amazonka-cloudfront";
  "amazonkaCloudsearchDomains" = self."amazonka-cloudsearch-domains";
  "amazonkaCloudsearch" = self."amazonka-cloudsearch";
  "amazonkaCloudtrail" = self."amazonka-cloudtrail";
  "amazonkaCloudwatchLogs" = self."amazonka-cloudwatch-logs";
  "amazonkaCloudwatch" = self."amazonka-cloudwatch";
  "amazonkaCodedeploy" = self."amazonka-codedeploy";
  "amazonkaCognitoIdentity" = self."amazonka-cognito-identity";
  "amazonkaCognitoSync" = self."amazonka-cognito-sync";
  "amazonkaConfig" = self."amazonka-config";
  "amazonkaCore" = self."amazonka-core";
  "amazonkaDatapipeline" = self."amazonka-datapipeline";
  "amazonkaDirectconnect" = self."amazonka-directconnect";
  "amazonkaDynamodb" = self."amazonka-dynamodb";
  "amazonkaEc2" = self."amazonka-ec2";
  "amazonkaElasticache" = self."amazonka-elasticache";
  "amazonkaElasticbeanstalk" = self."amazonka-elasticbeanstalk";
  "amazonkaElastictranscoder" = self."amazonka-elastictranscoder";
  "amazonkaElb" = self."amazonka-elb";
  "amazonkaEmr" = self."amazonka-emr";
  "amazonkaIam" = self."amazonka-iam";
  "amazonkaImportexport" = self."amazonka-importexport";
  "amazonkaKinesis" = self."amazonka-kinesis";
  "amazonkaKms" = self."amazonka-kms";
  "amazonkaLambda" = self."amazonka-lambda";
  "amazonkaOpsworks" = self."amazonka-opsworks";
  "amazonkaRds" = self."amazonka-rds";
  "amazonkaRedshift" = self."amazonka-redshift";
  "amazonkaRoute53Domains" = self."amazonka-route53-domains";
  "amazonkaRoute53" = self."amazonka-route53";
  "amazonkaS3" = self."amazonka-s3";
  "amazonkaSdb" = self."amazonka-sdb";
  "amazonkaSes" = self."amazonka-ses";
  "amazonkaSns" = self."amazonka-sns";
  "amazonkaSqs" = self."amazonka-sqs";
  "amazonkaStoragegateway" = self."amazonka-storagegateway";
  "amazonkaSts" = self."amazonka-sts";
  "amazonkaSupport" = self."amazonka-support";
  "amazonkaSwf" = self."amazonka-swf";
  "amazonProducts" = self."amazon-products";
  "analyzeClient" = self."analyze-client";
  "anansiHscolour" = self."anansi-hscolour";
  "anansiPandoc" = self."anansi-pandoc";
  "annotatedWlPprint" = self."annotated-wl-pprint";
  "anonymousSums" = self."anonymous-sums";
  "anonymousSumsTests" = self."anonymous-sums-tests";
  "ansiTerminal" = self."ansi-terminal";
  "ansiWlPprint" = self."ansi-wl-pprint";
  "apacheMd5" = self."apache-md5";
  "apiaryAuthenticate" = self."apiary-authenticate";
  "apiaryClientsession" = self."apiary-clientsession";
  "apiaryCookie" = self."apiary-cookie";
  "apiaryEventsource" = self."apiary-eventsource";
  "apiaryHelics" = self."apiary-helics";
  "apiaryLogger" = self."apiary-logger";
  "apiaryMemcached" = self."apiary-memcached";
  "apiaryMongoDB" = self."apiary-mongoDB";
  "apiaryPersistent" = self."apiary-persistent";
  "apiaryPurescript" = self."apiary-purescript";
  "apiarySession" = self."apiary-session";
  "apiaryWebsockets" = self."apiary-websockets";
  "apiBuilder" = self."api-builder";
  "apiTools" = self."api-tools";
  "applicativeExtras" = self."applicative-extras";
  "applicativeNumbers" = self."applicative-numbers";
  "applicativeQuoters" = self."applicative-quoters";
  "approximateEquality" = self."approximate-equality";
  "approxRandTest" = self."approx-rand-test";
  "appSettings" = self."app-settings";
  "apReflect" = self."ap-reflect";
  "arbbVm" = self."arbb-vm";
  "arbFft" = self."arb-fft";
  "archlinuxWeb" = self."archlinux-web";
  "arithEncode" = self."arith-encode";
  "arrayForth" = self."array-forth";
  "arrayMemoize" = self."array-memoize";
  "arrayUtils" = self."array-utils";
  "arrowapplyUtils" = self."arrowapply-utils";
  "arrowImprove" = self."arrow-improve";
  "arrowList" = self."arrow-list";
  "arTimestampWiper" = self."ar-timestamp-wiper";
  "ascii85Conduit" = self."ascii85-conduit";
  "asciiVectorAvc" = self."ascii-vector-avc";
  "asn1Data" = self."asn1-data";
  "asn1Encoding" = self."asn1-encoding";
  "asn1Parse" = self."asn1-parse";
  "asn1Types" = self."asn1-types";
  "assertFailure" = self."assert-failure";
  "astviewUtils" = self."astview-utils";
  "asyncExtras" = self."async-extras";
  "asynchronousExceptions" = self."asynchronous-exceptions";
  "asyncManager" = self."async-manager";
  "asyncPool" = self."async-pool";
  "atermUtils" = self."aterm-utils";
  "atlassianConnectCore" = self."atlassian-connect-core";
  "atlassianConnectDescriptor" = self."atlassian-connect-descriptor";
  "atmosDimensional" = self."atmos-dimensional";
  "atmosDimensionalTf" = self."atmos-dimensional-tf";
  "atomicPrimopsForeign" = self."atomic-primops-foreign";
  "atomicPrimops" = self."atomic-primops";
  "atomMsp430" = self."atom-msp430";
  "attoLisp" = self."atto-lisp";
  "attoparsecArff" = self."attoparsec-arff";
  "attoparsecBinary" = self."attoparsec-binary";
  "attoparsecConduit" = self."attoparsec-conduit";
  "attoparsecCsv" = self."attoparsec-csv";
  "attoparsecEnumerator" = self."attoparsec-enumerator";
  "attoparsecExpr" = self."attoparsec-expr";
  "attoparsecIteratee" = self."attoparsec-iteratee";
  "attoparsecParsec" = self."attoparsec-parsec";
  "attoparsecTextEnumerator" = self."attoparsec-text-enumerator";
  "attoparsecText" = self."attoparsec-text";
  "authenticateKerberos" = self."authenticate-kerberos";
  "authenticateLdap" = self."authenticate-ldap";
  "authenticateOauth" = self."authenticate-oauth";
  "authinfoHs" = self."authinfo-hs";
  "autonixDepsKf5" = self."autonix-deps-kf5";
  "autonixDeps" = self."autonix-deps";
  "autoUpdate" = self."auto-update";
  "avlStatic" = self."avl-static";
  "avrShake" = self."avr-shake";
  "awesomiumGlut" = self."awesomium-glut";
  "awesomiumRaw" = self."awesomium-raw";
  "awsCloudfrontSigner" = self."aws-cloudfront-signer";
  "awsDynamodbStreams" = self."aws-dynamodb-streams";
  "awsEc2" = self."aws-ec2";
  "awsElasticTranscoder" = self."aws-elastic-transcoder";
  "awsGeneral" = self."aws-general";
  "awsKinesisReshard" = self."aws-kinesis-reshard";
  "awsKinesis" = self."aws-kinesis";
  "awsPerformanceTests" = self."aws-performance-tests";
  "awsRoute53" = self."aws-route53";
  "awsSdk" = self."aws-sdk";
  "awsSdkTextConverter" = self."aws-sdk-text-converter";
  "awsSdkXmlUnordered" = self."aws-sdk-xml-unordered";
  "awsSign4" = self."aws-sign4";
  "awsSns" = self."aws-sns";
  "azureAcs" = self."azure-acs";
  "azureServiceApi" = self."azure-service-api";
  "azureServicebus" = self."azure-servicebus";
  "backtrackingExceptions" = self."backtracking-exceptions";
  "backwardState" = self."backward-state";
  "bambooLauncher" = self."bamboo-launcher";
  "bambooPluginHighlight" = self."bamboo-plugin-highlight";
  "bambooPluginPhoto" = self."bamboo-plugin-photo";
  "bambooThemeBlueprint" = self."bamboo-theme-blueprint";
  "bambooThemeMiniHtml5" = self."bamboo-theme-mini-html5";
  "barcodesCode128" = self."barcodes-code128";
  "barrierMonad" = self."barrier-monad";
  "base16Bytestring" = self."base16-bytestring";
  "base32Bytestring" = self."base32-bytestring";
  "base64Bytestring" = self."base64-bytestring";
  "base64Conduit" = self."base64-conduit";
  "base64String" = self."base64-string";
  "baseCompat" = self."base-compat";
  "baseIoAccess" = self."base-io-access";
  "basePrelude" = self."base-prelude";
  "baseUnicodeSymbols" = self."base-unicode-symbols";
  "basicPrelude" = self."basic-prelude";
  "basicSop" = self."basic-sop";
  "battlenetYesod" = self."battlenet-yesod";
  "bayesStack" = self."bayes-stack";
  "bedAndBreakfast" = self."bed-and-breakfast";
  "benchmarkFunction" = self."benchmark-function";
  "bfCata" = self."bf-cata";
  "bffMono" = self."bff-mono";
  "bidirectionalizationCombined" = self."bidirectionalization-combined";
  "bidispecExtras" = self."bidispec-extras";
  "billboardParser" = self."billboard-parser";
  "billeksahForms" = self."billeksah-forms";
  "billeksahMain" = self."billeksah-main";
  "billeksahMainStatic" = self."billeksah-main-static";
  "billeksahPane" = self."billeksah-pane";
  "billeksahServices" = self."billeksah-services";
  "binaryBits" = self."binary-bits";
  "binaryCommunicator" = self."binary-communicator";
  "binaryConduit" = self."binary-conduit";
  "binaryDerive" = self."binary-derive";
  "binaryFile" = self."binary-file";
  "binaryGeneric" = self."binary-generic";
  "binaryIndexedTree" = self."binary-indexed-tree";
  "binaryList" = self."binary-list";
  "binaryLiteralQq" = self."binary-literal-qq";
  "binaryProtocol" = self."binary-protocol";
  "binaryProtocolZmq" = self."binary-protocol-zmq";
  "binarySearch" = self."binary-search";
  "binaryShared" = self."binary-shared";
  "binaryState" = self."binary-state";
  "binaryStreams" = self."binary-streams";
  "binaryStrict" = self."binary-strict";
  "binaryTyped" = self."binary-typed";
  "bindingCore" = self."binding-core";
  "bindingGtk" = self."binding-gtk";
  "bindingsApr" = self."bindings-apr";
  "bindingsAprUtil" = self."bindings-apr-util";
  "bindingsAudiofile" = self."bindings-audiofile";
  "bindingsBfd" = self."bindings-bfd";
  "bindingsCctools" = self."bindings-cctools";
  "bindingsCodec2" = self."bindings-codec2";
  "bindingsCommon" = self."bindings-common";
  "bindingsDc1394" = self."bindings-dc1394";
  "bindingsDirectfb" = self."bindings-directfb";
  "bindingsDSL" = self."bindings-DSL";
  "bindingsEskit" = self."bindings-eskit";
  "bindingsEsounD" = self."bindings-EsounD";
  "bindingsFann" = self."bindings-fann";
  "bindingsFriso" = self."bindings-friso";
  "bindingsGLFW" = self."bindings-GLFW";
  "bindingsGlib" = self."bindings-glib";
  "bindingsGobject" = self."bindings-gobject";
  "bindingsGpgme" = self."bindings-gpgme";
  "bindingsGsl" = self."bindings-gsl";
  "bindingsGts" = self."bindings-gts";
  "bindingsHamlib" = self."bindings-hamlib";
  "bindingsHdf5" = self."bindings-hdf5";
  "bindingsK8055" = self."bindings-K8055";
  "bindingsLevmar" = self."bindings-levmar";
  "bindingsLibcddb" = self."bindings-libcddb";
  "bindingsLibffi" = self."bindings-libffi";
  "bindingsLibftdi" = self."bindings-libftdi";
  "bindingsLibrrd" = self."bindings-librrd";
  "bindingsLibstemmer" = self."bindings-libstemmer";
  "bindingsLibusb" = self."bindings-libusb";
  "bindingsLibv4l2" = self."bindings-libv4l2";
  "bindingsLibzip" = self."bindings-libzip";
  "bindingsLinuxVideodev2" = self."bindings-linux-videodev2";
  "bindingsLxc" = self."bindings-lxc";
  "bindingsMmap" = self."bindings-mmap";
  "bindingsMpdecimal" = self."bindings-mpdecimal";
  "bindingsNettle" = self."bindings-nettle";
  "bindingsParport" = self."bindings-parport";
  "bindingsPortaudio" = self."bindings-portaudio";
  "bindingsPosix" = self."bindings-posix";
  "bindingsPpdev" = self."bindings-ppdev";
  "bindingsSagaCmd" = self."bindings-saga-cmd";
  "bindingsSane" = self."bindings-sane";
  "bindingsSc3" = self."bindings-sc3";
  "bindingsSipc" = self."bindings-sipc";
  "bindingsSophia" = self."bindings-sophia";
  "bindingsSqlite3" = self."bindings-sqlite3";
  "bindingsSvm" = self."bindings-svm";
  "bindingsUname" = self."bindings-uname";
  "bindingsYices" = self."bindings-yices";
  "bindingWx" = self."binding-wx";
  "bindMarshal" = self."bind-marshal";
  "binembedExample" = self."binembed-example";
  "bitArray" = self."bit-array";
  "bitcoinRpc" = self."bitcoin-rpc";
  "bitlyCli" = self."bitly-cli";
  "bitmapOpengl" = self."bitmap-opengl";
  "bitsAtomic" = self."bits-atomic";
  "bitsConduit" = self."bits-conduit";
  "bitsExtras" = self."bits-extras";
  "bitVector" = self."bit-vector";
  "bkTree" = self."bk-tree";
  "blackJewel" = self."black-jewel";
  "blakesumDemo" = self."blakesum-demo";
  "blankCanvas" = self."blank-canvas";
  "blasHs" = self."blas-hs";
  "blazeBootstrap" = self."blaze-bootstrap";
  "blazeBuilderConduit" = self."blaze-builder-conduit";
  "blazeBuilderEnumerator" = self."blaze-builder-enumerator";
  "blazeBuilder" = self."blaze-builder";
  "blazeFromHtml" = self."blaze-from-html";
  "blazeHtmlContrib" = self."blaze-html-contrib";
  "blazeHtmlHexpat" = self."blaze-html-hexpat";
  "blazeHtml" = self."blaze-html";
  "blazeHtmlTruncate" = self."blaze-html-truncate";
  "blazeMarkup" = self."blaze-markup";
  "blazeSvg" = self."blaze-svg";
  "blazeTextualNative" = self."blaze-textual-native";
  "blazeTextual" = self."blaze-textual";
  "blockingTransactions" = self."blocking-transactions";
  "BlogLiteratelyDiagrams" = self."BlogLiterately-diagrams";
  "BNFCMeta" = self."BNFC-meta";
  "boardGames" = self."board-games";
  "bogreBanana" = self."bogre-banana";
  "booleanList" = self."boolean-list";
  "booleanNormalForms" = self."boolean-normal-forms";
  "boolExtras" = self."bool-extras";
  "boundedTchan" = self."bounded-tchan";
  "brainfuckMonad" = self."brainfuck-monad";
  "brainfuckTut" = self."brainfuck-tut";
  "briansBrain" = self."brians-brain";
  "broadcastChan" = self."broadcast-chan";
  "bsdSysctl" = self."bsd-sysctl";
  "bsonGeneric" = self."bson-generic";
  "bsonGenerics" = self."bson-generics";
  "bsonMapping" = self."bson-mapping";
  "btreeConcurrent" = self."btree-concurrent";
  "bTree" = self."b-tree";
  "buildboxTools" = self."buildbox-tools";
  "burstDetection" = self."burst-detection";
  "busPirate" = self."bus-pirate";
  "busterGtk" = self."buster-gtk";
  "busterNetwork" = self."buster-network";
  "bytestringArbitrary" = self."bytestring-arbitrary";
  "bytestringBuilder" = self."bytestring-builder";
  "bytestringClass" = self."bytestring-class";
  "bytestringConversion" = self."bytestring-conversion";
  "bytestringCsv" = self."bytestring-csv";
  "bytestringDelta" = self."bytestring-delta";
  "bytestringFrom" = self."bytestring-from";
  "bytestringHandle" = self."bytestring-handle";
  "bytestringLexing" = self."bytestring-lexing";
  "bytestringMmap" = self."bytestring-mmap";
  "bytestringNums" = self."bytestring-nums";
  "bytestringparserTemporary" = self."bytestringparser-temporary";
  "bytestringPlain" = self."bytestring-plain";
  "bytestringProgress" = self."bytestring-progress";
  "bytestringRematch" = self."bytestring-rematch";
  "bytestringShow" = self."bytestring-show";
  "bytestringTrie" = self."bytestring-trie";
  "bzlibConduit" = self."bzlib-conduit";
  "cabalAudit" = self."cabal-audit";
  "cabalBounds" = self."cabal-bounds";
  "cabalCargs" = self."cabal-cargs";
  "cabalConstraints" = self."cabal-constraints";
  "cabalDb" = self."cabal-db";
  "cabalDebian" = self."cabal-debian";
  "cabalDependencyLicenses" = self."cabal-dependency-licenses";
  "cabalDev" = self."cabal-dev";
  "cabalDir" = self."cabal-dir";
  "cabalFileTh" = self."cabal-file-th";
  "cabalGhci" = self."cabal-ghci";
  "cabalGraphdeps" = self."cabal-graphdeps";
  "cabalInstallBundle" = self."cabal-install-bundle";
  "cabalInstallGhc72" = self."cabal-install-ghc72";
  "cabalInstallGhc74" = self."cabal-install-ghc74";
  "cabalInstall" = self."cabal-install";
  "cabalLenses" = self."cabal-lenses";
  "cabalMacosx" = self."cabal-macosx";
  "cabalMeta" = self."cabal-meta";
  "cabalNirvana" = self."cabal-nirvana";
  "cabalProgdeps" = self."cabal-progdeps";
  "cabalQuery" = self."cabal-query";
  "cabalRpm" = self."cabal-rpm";
  "cabalScripts" = self."cabal-scripts";
  "cabalSetup" = self."cabal-setup";
  "cabalSign" = self."cabal-sign";
  "cabalSort" = self."cabal-sort";
  "cabalSrc" = self."cabal-src";
  "cabalTestQuickcheck" = self."cabal-test-quickcheck";
  "cabalTest" = self."cabal-test";
  "cabalUninstall" = self."cabal-uninstall";
  "cabalUpload" = self."cabal-upload";
  "cachedTraversable" = self."cached-traversable";
  "cairoAppbase" = self."cairo-appbase";
  "cal3dExamples" = self."cal3d-examples";
  "cal3dOpengl" = self."cal3d-opengl";
  "canonicalFilepath" = self."canonical-filepath";
  "cappedList" = self."capped-list";
  "casadiBindingsControl" = self."casadi-bindings-control";
  "casadiBindingsCore" = self."casadi-bindings-core";
  "casadiBindingsInternal" = self."casadi-bindings-internal";
  "casadiBindingsIpoptInterface" = self."casadi-bindings-ipopt-interface";
  "casadiBindings" = self."casadi-bindings";
  "casadiBindingsSnoptInterface" = self."casadi-bindings-snopt-interface";
  "caseConversion" = self."case-conversion";
  "caseInsensitive" = self."case-insensitive";
  "cassandraCql" = self."cassandra-cql";
  "cassandraThrift" = self."cassandra-thrift";
  "cassavaStreams" = self."cassava-streams";
  "catchFd" = self."catch-fd";
  "categoricalAlgebra" = self."categorical-algebra";
  "categoryExtras" = self."category-extras";
  "cautiousFile" = self."cautious-file";
  "CCDelcontAlt" = self."CC-delcont-alt";
  "CCDelcontCxe" = self."CC-delcont-cxe";
  "CCDelcontExc" = self."CC-delcont-exc";
  "CCDelcontRef" = self."CC-delcont-ref";
  "CCDelcontRefTf" = self."CC-delcont-ref-tf";
  "CCDelcont" = self."CC-delcont";
  "cctoolsWorkqueue" = self."cctools-workqueue";
  "cDsl" = self."c-dsl";
  "cellrendererCairo" = self."cellrenderer-cairo";
  "cerealConduit" = self."cereal-conduit";
  "cerealDerive" = self."cereal-derive";
  "cerealEnumerator" = self."cereal-enumerator";
  "cerealIeee754" = self."cereal-ieee754";
  "cerealPlus" = self."cereal-plus";
  "cerealText" = self."cereal-text";
  "cerealVector" = self."cereal-vector";
  "cgiUndecidable" = self."cgi-undecidable";
  "cgiUtils" = self."cgi-utils";
  "chainCodes" = self."chain-codes";
  "chalkboardViewer" = self."chalkboard-viewer";
  "chalmersLava2000" = self."chalmers-lava2000";
  "changeMonger" = self."change-monger";
  "chanSplit" = self."chan-split";
  "charsetdetectAe" = self."charsetdetect-ae";
  "ChartCairo" = self."Chart-cairo";
  "ChartDiagrams" = self."Chart-diagrams";
  "ChartGtk" = self."Chart-gtk";
  "chartHistogram" = self."chart-histogram";
  "ChartSimple" = self."Chart-simple";
  "chaselevDeque" = self."chaselev-deque";
  "chattyText" = self."chatty-text";
  "chattyUtils" = self."chatty-utils";
  "checkEmail" = self."check-email";
  "checkPvp" = self."check-pvp";
  "chellHunit" = self."chell-hunit";
  "chellQuickcheck" = self."chell-quickcheck";
  "chpMtl" = self."chp-mtl";
  "chpPlus" = self."chp-plus";
  "chpSpec" = self."chp-spec";
  "chpTransformers" = self."chp-transformers";
  "chunkedData" = self."chunked-data";
  "churchList" = self."church-list";
  "cIo" = self."c-io";
  "cipherAes128" = self."cipher-aes128";
  "cipherAes" = self."cipher-aes";
  "cipherBlowfish" = self."cipher-blowfish";
  "cipherCamellia" = self."cipher-camellia";
  "cipherDes" = self."cipher-des";
  "cipherRc4" = self."cipher-rc4";
  "cipherRc5" = self."cipher-rc5";
  "circlePacking" = self."circle-packing";
  "citationResolve" = self."citation-resolve";
  "citeprocHs" = self."citeproc-hs";
  "clashGhc" = self."clash-ghc";
  "clashLib" = self."clash-lib";
  "clashPrelude" = self."clash-prelude";
  "classyParallel" = self."classy-parallel";
  "classyPreludeConduit" = self."classy-prelude-conduit";
  "classyPrelude" = self."classy-prelude";
  "classyPreludeYesod" = self."classy-prelude-yesod";
  "clckwrksCli" = self."clckwrks-cli";
  "clckwrksDotCom" = self."clckwrks-dot-com";
  "clckwrksPluginBugs" = self."clckwrks-plugin-bugs";
  "clckwrksPluginIrcbot" = self."clckwrks-plugin-ircbot";
  "clckwrksPluginMedia" = self."clckwrks-plugin-media";
  "clckwrksPluginPage" = self."clckwrks-plugin-page";
  "clckwrksThemeBootstrap" = self."clckwrks-theme-bootstrap";
  "clckwrksThemeClckwrks" = self."clckwrks-theme-clckwrks";
  "clckwrksThemeGeoBootstrap" = self."clckwrks-theme-geo-bootstrap";
  "cleanHome" = self."clean-home";
  "cleanUnions" = self."clean-unions";
  "clickClack" = self."click-clack";
  "cloneAll" = self."clone-all";
  "cloudfrontSigner" = self."cloudfront-signer";
  "cloudHaskell" = self."cloud-haskell";
  "cmdargsBrowser" = self."cmdargs-browser";
  "cncSpecCompiler" = self."cnc-spec-compiler";
  "codeBuilder" = self."code-builder";
  "CodecCompressionLZF" = self."Codec-Compression-LZF";
  "CodecImageDevIL" = self."Codec-Image-DevIL";
  "codecLibevent" = self."codec-libevent";
  "codecMbox" = self."codec-mbox";
  "codecovHaskell" = self."codecov-haskell";
  "codoNotation" = self."codo-notation";
  "cognimetaUtils" = self."cognimeta-utils";
  "colladaOutput" = self."collada-output";
  "colladaTypes" = self."collada-types";
  "collapseUtil" = self."collapse-util";
  "collectionsApi" = self."collections-api";
  "collectionsBaseInstances" = self."collections-base-instances";
  "colorizeHaskell" = self."colorize-haskell";
  "combinatDiagrams" = self."combinat-diagrams";
  "combinatorialProblems" = self."combinatorial-problems";
  "combinatorInteractive" = self."combinator-interactive";
  "commandQq" = self."command-qq";
  "commsecKeyexchange" = self."commsec-keyexchange";
  "comonadExtras" = self."comonad-extras";
  "comonadRandom" = self."comonad-random";
  "comonadsFd" = self."comonads-fd";
  "comonadTransformers" = self."comonad-transformers";
  "compactMap" = self."compact-map";
  "compactStringFix" = self."compact-string-fix";
  "compactString" = self."compact-string";
  "compdataAutomata" = self."compdata-automata";
  "compdataDags" = self."compdata-dags";
  "compdataParam" = self."compdata-param";
  "complexGeneric" = self."complex-generic";
  "complexIntegrate" = self."complex-integrate";
  "composeTrans" = self."compose-trans";
  "computationalAlgebra" = self."computational-algebra";
  "concraftPl" = self."concraft-pl";
  "concreteRelaxngParser" = self."concrete-relaxng-parser";
  "concreteTyperep" = self."concrete-typerep";
  "concurrentBarrier" = self."concurrent-barrier";
  "concurrentDnsCache" = self."concurrent-dns-cache";
  "concurrentExtra" = self."concurrent-extra";
  "concurrentSa" = self."concurrent-sa";
  "concurrentSplit" = self."concurrent-split";
  "concurrentState" = self."concurrent-state";
  "concurrentSupply" = self."concurrent-supply";
  "conductiveBase" = self."conductive-base";
  "conductiveClock" = self."conductive-clock";
  "conductiveHsc3" = self."conductive-hsc3";
  "conductiveSong" = self."conductive-song";
  "conduitCombinators" = self."conduit-combinators";
  "conduitConnection" = self."conduit-connection";
  "conduitExtra" = self."conduit-extra";
  "conduitIconv" = self."conduit-iconv";
  "conduitNetworkStream" = self."conduit-network-stream";
  "conduitResumablesink" = self."conduit-resumablesink";
  "configSelect" = self."config-select";
  "configurationTools" = self."configuration-tools";
  "congruenceRelation" = self."congruence-relation";
  "connectionPool" = self."connection-pool";
  "consoleProgram" = self."console-program";
  "constMathGhcPlugin" = self."const-math-ghc-plugin";
  "constrainedNormal" = self."constrained-normal";
  "constructiveAlgebra" = self."constructive-algebra";
  "containerClasses" = self."container-classes";
  "containersBenchmark" = self."containers-benchmark";
  "containersDeepseq" = self."containers-deepseq";
  "containersUnicodeSymbols" = self."containers-unicode-symbols";
  "contextStack" = self."context-stack";
  "continuedFractions" = self."continued-fractions";
  "continuumClient" = self."continuum-client";
  "controlBool" = self."control-bool";
  "ControlEngine" = self."Control-Engine";
  "controlEvent" = self."control-event";
  "controlMonadAttempt" = self."control-monad-attempt";
  "controlMonadExceptionMonadsfd" = self."control-monad-exception-monadsfd";
  "controlMonadExceptionMonadstf" = self."control-monad-exception-monadstf";
  "controlMonadExceptionMtl" = self."control-monad-exception-mtl";
  "controlMonadException" = self."control-monad-exception";
  "controlMonadFailureMtl" = self."control-monad-failure-mtl";
  "controlMonadFailure" = self."control-monad-failure";
  "controlMonadFree" = self."control-monad-free";
  "controlMonadLoop" = self."control-monad-loop";
  "ControlMonadMultiPass" = self."Control-Monad-MultiPass";
  "controlMonadOmega" = self."control-monad-omega";
  "controlMonadQueue" = self."control-monad-queue";
  "ControlMonadST2" = self."Control-Monad-ST2";
  "controlTimeout" = self."control-timeout";
  "contstuffMonadsTf" = self."contstuff-monads-tf";
  "contstuffTransformers" = self."contstuff-transformers";
  "convertibleAscii" = self."convertible-ascii";
  "convertibleText" = self."convertible-text";
  "copilotC99" = self."copilot-c99";
  "copilotCbmc" = self."copilot-cbmc";
  "copilotCore" = self."copilot-core";
  "copilotLanguage" = self."copilot-language";
  "copilotLibraries" = self."copilot-libraries";
  "copilotSbv" = self."copilot-sbv";
  "corebotBliki" = self."corebot-bliki";
  "coreHaskell" = self."core-haskell";
  "coroutineEnumerator" = self."coroutine-enumerator";
  "coroutineIteratee" = self."coroutine-iteratee";
  "coroutineObject" = self."coroutine-object";
  "couchdbConduit" = self."couchdb-conduit";
  "couchdbEnumerator" = self."couchdb-enumerator";
  "couchHs" = self."couch-hs";
  "countryCodes" = self."country-codes";
  "cplusplusTh" = self."cplusplus-th";
  "cprngAesEffect" = self."cprng-aes-effect";
  "cprngAes" = self."cprng-aes";
  "cqlIo" = self."cql-io";
  "cqrsExample" = self."cqrs-example";
  "cqrsPostgresql" = self."cqrs-postgresql";
  "cqrsSqlite3" = self."cqrs-sqlite3";
  "cqrsTest" = self."cqrs-test";
  "cqrsTypes" = self."cqrs-types";
  "craftwerkCairo" = self."craftwerk-cairo";
  "craftwerkGtk" = self."craftwerk-gtk";
  "crc16Table" = self."crc16-table";
  "crfChain1Constrained" = self."crf-chain1-constrained";
  "crfChain1" = self."crf-chain1";
  "crfChain2Generic" = self."crf-chain2-generic";
  "crfChain2Tiers" = self."crf-chain2-tiers";
  "criterionPlus" = self."criterion-plus";
  "criterionToHtml" = self."criterion-to-html";
  "cruncherTypes" = self."cruncher-types";
  "cryptoApi" = self."crypto-api";
  "cryptoApiTests" = self."crypto-api-tests";
  "cryptoCipherBenchmarks" = self."crypto-cipher-benchmarks";
  "cryptoCipherTests" = self."crypto-cipher-tests";
  "cryptoCipherTypes" = self."crypto-cipher-types";
  "cryptoConduit" = self."crypto-conduit";
  "cryptohashConduit" = self."cryptohash-conduit";
  "cryptohashCryptoapi" = self."cryptohash-cryptoapi";
  "cryptoNumbers" = self."crypto-numbers";
  "cryptoPubkeyOpenssh" = self."crypto-pubkey-openssh";
  "cryptoPubkey" = self."crypto-pubkey";
  "cryptoPubkeyTypes" = self."crypto-pubkey-types";
  "cryptoRandomApi" = self."crypto-random-api";
  "cryptoRandomEffect" = self."crypto-random-effect";
  "cryptoRandom" = self."crypto-random";
  "cryptoTotp" = self."crypto-totp";
  "cryptsyApi" = self."cryptsy-api";
  "cseGhcPlugin" = self."cse-ghc-plugin";
  "csoundCatalog" = self."csound-catalog";
  "csoundExpressionDynamic" = self."csound-expression-dynamic";
  "csoundExpressionOpcodes" = self."csound-expression-opcodes";
  "csoundExpression" = self."csound-expression";
  "csoundExpressionTyped" = self."csound-expression-typed";
  "csoundSampler" = self."csound-sampler";
  "CSPMCoreLanguage" = self."CSPM-CoreLanguage";
  "CSPMCspm" = self."CSPM-cspm";
  "CSPMFiringRules" = self."CSPM-FiringRules";
  "CSPMFrontend" = self."CSPM-Frontend";
  "CSPMInterpreter" = self."CSPM-Interpreter";
  "CSPMToProlog" = self."CSPM-ToProlog";
  "cssText" = self."css-text";
  "cStorableDeriving" = self."c-storable-deriving";
  "csvConduit" = self."csv-conduit";
  "csvEnumerator" = self."csv-enumerator";
  "csvNptools" = self."csv-nptools";
  "csvToQif" = self."csv-to-qif";
  "curlAeson" = self."curl-aeson";
  "currentLocale" = self."current-locale";
  "curryBase" = self."curry-base";
  "curryFrontend" = self."curry-frontend";
  "customPrelude" = self."custom-prelude";
  "cvCombinators" = self."cv-combinators";
  "daemonizeDoublefork" = self."daemonize-doublefork";
  "DAGTournament" = self."DAG-Tournament";
  "darcsBenchmark" = self."darcs-benchmark";
  "darcsBeta" = self."darcs-beta";
  "darcsBuildpackage" = self."darcs-buildpackage";
  "darcsCabalized" = self."darcs-cabalized";
  "darcsFastconvert" = self."darcs-fastconvert";
  "darcsGraph" = self."darcs-graph";
  "darcsMonitor" = self."darcs-monitor";
  "darcsScripts" = self."darcs-scripts";
  "dashHaskell" = self."dash-haskell";
  "dataAccessorMonadLib" = self."data-accessor-monadLib";
  "dataAccessorMonadsFd" = self."data-accessor-monads-fd";
  "dataAccessorMonadsTf" = self."data-accessor-monads-tf";
  "dataAccessorMtl" = self."data-accessor-mtl";
  "dataAccessor" = self."data-accessor";
  "dataAccessorTemplate" = self."data-accessor-template";
  "dataAccessorTransformers" = self."data-accessor-transformers";
  "dataAviary" = self."data-aviary";
  "databaseMigrate" = self."database-migrate";
  "databaseStudy" = self."database-study";
  "dataBinaryIeee754" = self."data-binary-ieee754";
  "dataBword" = self."data-bword";
  "dataCarousel" = self."data-carousel";
  "dataCategory" = self."data-category";
  "dataChecked" = self."data-checked";
  "dataClist" = self."data-clist";
  "dataConcurrentQueue" = self."data-concurrent-queue";
  "dataCycle" = self."data-cycle";
  "dataDefaultClass" = self."data-default-class";
  "dataDefaultGenerics" = self."data-default-generics";
  "dataDefaultInstancesBase" = self."data-default-instances-base";
  "dataDefaultInstancesContainers" = self."data-default-instances-containers";
  "dataDefaultInstancesDlist" = self."data-default-instances-dlist";
  "dataDefaultInstancesOldLocale" = self."data-default-instances-old-locale";
  "dataDefault" = self."data-default";
  "dataDispersal" = self."data-dispersal";
  "dataDword" = self."data-dword";
  "dataEasy" = self."data-easy";
  "dataEndian" = self."data-endian";
  "dataExtra" = self."data-extra";
  "dataFilepath" = self."data-filepath";
  "dataFin" = self."data-fin";
  "dataFixCse" = self."data-fix-cse";
  "dataFix" = self."data-fix";
  "dataFlags" = self."data-flags";
  "dataFresh" = self."data-fresh";
  "DataHashConsistent" = self."Data-Hash-Consistent";
  "dataHash" = self."data-hash";
  "dataInterval" = self."data-interval";
  "dataInttrie" = self."data-inttrie";
  "dataIvar" = self."data-ivar";
  "dataLayout" = self."data-layout";
  "dataLensFd" = self."data-lens-fd";
  "dataLensIxset" = self."data-lens-ixset";
  "dataLensLight" = self."data-lens-light";
  "dataLens" = self."data-lens";
  "dataLensTemplate" = self."data-lens-template";
  "dataListSequences" = self."data-list-sequences";
  "dataMemocombinators" = self."data-memocombinators";
  "dataNamed" = self."data-named";
  "dataNat" = self."data-nat";
  "dataObjectJson" = self."data-object-json";
  "dataObject" = self."data-object";
  "dataObjectYaml" = self."data-object-yaml";
  "dataOrdlist" = self."data-ordlist";
  "dataOr" = self."data-or";
  "dataPartition" = self."data-partition";
  "dataPprint" = self."data-pprint";
  "dataQuotientref" = self."data-quotientref";
  "dataRef" = self."data-ref";
  "dataReifyCse" = self."data-reify-cse";
  "dataReify" = self."data-reify";
  "dataRope" = self."data-rope";
  "DataRope" = self."Data-Rope";
  "dataRTree" = self."data-r-tree";
  "dataSize" = self."data-size";
  "dataSpacepart" = self."data-spacepart";
  "dataStore" = self."data-store";
  "dataStringmap" = self."data-stringmap";
  "dataStructureInferrer" = self."data-structure-inferrer";
  "dataTextual" = self."data-textual";
  "dataTimeout" = self."data-timeout";
  "dataTransform" = self."data-transform";
  "dataTreify" = self."data-treify";
  "dataType" = self."data-type";
  "dataUtil" = self."data-util";
  "dataVariant" = self."data-variant";
  "dateCache" = self."date-cache";
  "dbusClient" = self."dbus-client";
  "dbusCore" = self."dbus-core";
  "dbusQq" = self."dbus-qq";
  "dBus" = self."d-bus";
  "dbusTh" = self."dbus-th";
  "dclabelEci11" = self."dclabel-eci11";
  "ddcBase" = self."ddc-base";
  "ddcBuild" = self."ddc-build";
  "ddcCode" = self."ddc-code";
  "ddcCoreEval" = self."ddc-core-eval";
  "ddcCoreFlow" = self."ddc-core-flow";
  "ddcCoreLlvm" = self."ddc-core-llvm";
  "ddcCoreSalt" = self."ddc-core-salt";
  "ddcCore" = self."ddc-core";
  "ddcCoreSimpl" = self."ddc-core-simpl";
  "ddcCoreTetra" = self."ddc-core-tetra";
  "ddcDriver" = self."ddc-driver";
  "ddciCore" = self."ddci-core";
  "ddcInterface" = self."ddc-interface";
  "ddcSourceTetra" = self."ddc-source-tetra";
  "ddcTools" = self."ddc-tools";
  "ddcWar" = self."ddc-war";
  "DeadpanDDP" = self."Deadpan-DDP";
  "deadSimpleJson" = self."dead-simple-json";
  "debianBinary" = self."debian-binary";
  "debianBuild" = self."debian-build";
  "debugDiff" = self."debug-diff";
  "decoderConduit" = self."decoder-conduit";
  "deeplearningHs" = self."deeplearning-hs";
  "deepseqGenerics" = self."deepseq-generics";
  "deepseqTh" = self."deepseq-th";
  "definitiveBase" = self."definitive-base";
  "definitiveFilesystem" = self."definitive-filesystem";
  "definitiveGraphics" = self."definitive-graphics";
  "definitiveParser" = self."definitive-parser";
  "definitiveReactive" = self."definitive-reactive";
  "definitiveSound" = self."definitive-sound";
  "deikoConfig" = self."deiko-config";
  "dekaTests" = self."deka-tests";
  "delimitedText" = self."delimited-text";
  "deltaH" = self."delta-h";
  "dependentMap" = self."dependent-map";
  "dependentSum" = self."dependent-sum";
  "dependentSumTemplate" = self."dependent-sum-template";
  "derivationTrees" = self."derivation-trees";
  "deriveGadt" = self."derive-gadt";
  "deriveIG" = self."derive-IG";
  "deriveTrie" = self."derive-trie";
  "derpLib" = self."derp-lib";
  "diaBase" = self."dia-base";
  "diaFunctions" = self."dia-functions";
  "diagramsBuilder" = self."diagrams-builder";
  "diagramsCairo" = self."diagrams-cairo";
  "diagramsCanvas" = self."diagrams-canvas";
  "diagramsContrib" = self."diagrams-contrib";
  "diagramsCore" = self."diagrams-core";
  "diagramsGtk" = self."diagrams-gtk";
  "diagramsHaddock" = self."diagrams-haddock";
  "diagramsLib" = self."diagrams-lib";
  "diagramsPdf" = self."diagrams-pdf";
  "diagramsPostscript" = self."diagrams-postscript";
  "diagramsQrcode" = self."diagrams-qrcode";
  "diagramsRasterific" = self."diagrams-rasterific";
  "diagramsSvg" = self."diagrams-svg";
  "diagramsTikz" = self."diagrams-tikz";
  "diceEntropyConduit" = self."dice-entropy-conduit";
  "diffParse" = self."diff-parse";
  "digestiveBootstrap" = self."digestive-bootstrap";
  "digestiveFunctorsAeson" = self."digestive-functors-aeson";
  "digestiveFunctorsBlaze" = self."digestive-functors-blaze";
  "digestiveFunctorsHappstack" = self."digestive-functors-happstack";
  "digestiveFunctorsHeist" = self."digestive-functors-heist";
  "digestiveFunctorsHsp" = self."digestive-functors-hsp";
  "digestiveFunctorsScotty" = self."digestive-functors-scotty";
  "digestiveFunctors" = self."digestive-functors";
  "digestiveFunctorsSnap" = self."digestive-functors-snap";
  "digestPure" = self."digest-pure";
  "dimensionalTf" = self."dimensional-tf";
  "dingoCore" = self."dingo-core";
  "dingoExample" = self."dingo-example";
  "dingoWidgets" = self."dingo-widgets";
  "directBinaryFiles" = self."direct-binary-files";
  "directDaemonize" = self."direct-daemonize";
  "directedCubical" = self."directed-cubical";
  "directFastcgi" = self."direct-fastcgi";
  "directHttp" = self."direct-http";
  "directMurmurHash" = self."direct-murmur-hash";
  "directoryLayout" = self."directory-layout";
  "directoryTree" = self."directory-tree";
  "directPlugins" = self."direct-plugins";
  "directSqlite" = self."direct-sqlite";
  "discordianCalendar" = self."discordian-calendar";
  "discreteSpaceMap" = self."discrete-space-map";
  "disjointSet" = self."disjoint-set";
  "disjointSetsSt" = self."disjoint-sets-st";
  "diskFreeSpace" = self."disk-free-space";
  "distributedProcessAzure" = self."distributed-process-azure";
  "distributedProcessMonadControl" = self."distributed-process-monad-control";
  "distributedProcessP2p" = self."distributed-process-p2p";
  "distributedProcessPlatform" = self."distributed-process-platform";
  "distributedProcess" = self."distributed-process";
  "distributedProcessSimplelocalnet" = self."distributed-process-simplelocalnet";
  "distributedProcessTests" = self."distributed-process-tests";
  "distributedStatic" = self."distributed-static";
  "distributionPlot" = self."distribution-plot";
  "distUpload" = self."dist-upload";
  "djinnGhc" = self."djinn-ghc";
  "djinnLib" = self."djinn-lib";
  "djinnTh" = self."djinn-th";
  "dlistInstances" = self."dlist-instances";
  "docReview" = self."doc-review";
  "doctestDiscoverConfigurator" = self."doctest-discover-configurator";
  "doctestDiscover" = self."doctest-discover";
  "doctestProp" = self."doctest-prop";
  "domainAuth" = self."domain-auth";
  "domLt" = self."dom-lt";
  "domSelector" = self."dom-selector";
  "doubleConversion" = self."double-conversion";
  "downloadCurl" = self."download-curl";
  "downloadMediaContent" = self."download-media-content";
  "dphBase" = self."dph-base";
  "dphExamples" = self."dph-examples";
  "dphLiftedBase" = self."dph-lifted-base";
  "dphLiftedCopy" = self."dph-lifted-copy";
  "dphLiftedVseg" = self."dph-lifted-vseg";
  "dphPar" = self."dph-par";
  "dphPrimInterface" = self."dph-prim-interface";
  "dphPrimPar" = self."dph-prim-par";
  "dphPrimSeq" = self."dph-prim-seq";
  "dphSeq" = self."dph-seq";
  "DrIFTCabalized" = self."DrIFT-cabalized";
  "dropboxSdk" = self."dropbox-sdk";
  "dsKanren" = self."ds-kanren";
  "dsmcTools" = self."dsmc-tools";
  "dsonParsec" = self."dson-parsec";
  "dtdText" = self."dtd-text";
  "dtdTypes" = self."dtd-types";
  "dualTree" = self."dual-tree";
  "DustCrypto" = self."Dust-crypto";
  "DustToolsPcap" = self."Dust-tools-pcap";
  "DustTools" = self."Dust-tools";
  "dviProcessing" = self."dvi-processing";
  "dwarfEl" = self."dwarf-el";
  "dynamicCabal" = self."dynamic-cabal";
  "dynamicGraph" = self."dynamic-graph";
  "dynamicLinkerTemplate" = self."dynamic-linker-template";
  "dynamicLoader" = self."dynamic-loader";
  "dynamicMvector" = self."dynamic-mvector";
  "dynamicObject" = self."dynamic-object";
  "dynamicState" = self."dynamic-state";
  "DysFRPCairo" = self."DysFRP-Cairo";
  "DysFRPCraftwerk" = self."DysFRP-Craftwerk";
  "dzenUtils" = self."dzen-utils";
  "eagerSockets" = self."eager-sockets";
  "easyApi" = self."easy-api";
  "easyFile" = self."easy-file";
  "ec2Signature" = self."ec2-signature";
  "editDistance" = self."edit-distance";
  "editLensesDemo" = self."edit-lenses-demo";
  "editLenses" = self."edit-lenses";
  "effectiveAspectsMzv" = self."effective-aspects-mzv";
  "effectiveAspects" = self."effective-aspects";
  "effectMonad" = self."effect-monad";
  "effectsParser" = self."effects-parser";
  "egisonQuote" = self."egison-quote";
  "egisonTutorial" = self."egison-tutorial";
  "eibdClientSimple" = self."eibd-client-simple";
  "eitherUnwrap" = self."either-unwrap";
  "ekgBosun" = self."ekg-bosun";
  "ekgCarbon" = self."ekg-carbon";
  "ekgCore" = self."ekg-core";
  "ekgLog" = self."ekg-log";
  "ekgRrd" = self."ekg-rrd";
  "ekgStatsd" = self."ekg-statsd";
  "electrumMnemonic" = self."electrum-mnemonic";
  "elereaExamples" = self."elerea-examples";
  "elereaSdl" = self."elerea-sdl";
  "elmBuildLib" = self."elm-build-lib";
  "elmCompiler" = self."elm-compiler";
  "elmCoreSources" = self."elm-core-sources";
  "elmGet" = self."elm-get";
  "elmMake" = self."elm-make";
  "elmPackage" = self."elm-package";
  "elmReactor" = self."elm-reactor";
  "elmRepl" = self."elm-repl";
  "elmServer" = self."elm-server";
  "elmYesod" = self."elm-yesod";
  "emailHeader" = self."email-header";
  "emailPostmark" = self."email-postmark";
  "emailValidate" = self."email-validate";
  "emailValidator" = self."email-validator";
  "embeddockExample" = self."embeddock-example";
  "enclosedExceptions" = self."enclosed-exceptions";
  "engineeringUnits" = self."engineering-units";
  "engineIo" = self."engine-io";
  "engineIoSnap" = self."engine-io-snap";
  "engineIoYesod" = self."engine-io-yesod";
  "enumeratorFd" = self."enumerator-fd";
  "enumeratorTf" = self."enumerator-tf";
  "enummapsetTh" = self."enummapset-th";
  "envParser" = self."env-parser";
  "epanetHaskell" = self."epanet-haskell";
  "epubMetadata" = self."epub-metadata";
  "epubTools" = self."epub-tools";
  "equalFiles" = self."equal-files";
  "equationalReasoning" = self."equational-reasoning";
  "erfNative" = self."erf-native";
  "erosClient" = self."eros-client";
  "erosHttp" = self."eros-http";
  "errorcallEqInstance" = self."errorcall-eq-instance";
  "errorLocation" = self."error-location";
  "errorLoc" = self."error-loc";
  "errorMessage" = self."error-message";
  "EtageGraph" = self."Etage-Graph";
  "eventDriven" = self."event-driven";
  "eventHandlers" = self."event-handlers";
  "eventList" = self."event-list";
  "eventMonad" = self."event-monad";
  "everyBitCounts" = self."every-bit-counts";
  "exactCombinatorics" = self."exact-combinatorics";
  "exceptionMailer" = self."exception-mailer";
  "exceptionMonadsFd" = self."exception-monads-fd";
  "exceptionMonadsTf" = self."exception-monads-tf";
  "exceptionMtl" = self."exception-mtl";
  "exceptionTransformers" = self."exception-transformers";
  "executablePath" = self."executable-path";
  "expatEnumerator" = self."expat-enumerator";
  "expiringCacheMap" = self."expiring-cache-map";
  "expiringMvar" = self."expiring-mvar";
  "explicitDeterminant" = self."explicit-determinant";
  "explicitException" = self."explicit-exception";
  "explicitIomodesBytestring" = self."explicit-iomodes-bytestring";
  "explicitIomodes" = self."explicit-iomodes";
  "explicitIomodesText" = self."explicit-iomodes-text";
  "explicitSharing" = self."explicit-sharing";
  "exPool" = self."ex-pool";
  "exposedContainers" = self."exposed-containers";
  "expressionParser" = self."expression-parser";
  "extendedCategories" = self."extended-categories";
  "extendedReals" = self."extended-reals";
  "extensibleData" = self."extensible-data";
  "extensibleEffects" = self."extensible-effects";
  "extensibleExceptions" = self."extensible-exceptions";
  "externalSort" = self."external-sort";
  "ezCouch" = self."ez-couch";
  "factualApi" = self."factual-api";
  "failableList" = self."failable-list";
  "fairPredicates" = self."fair-predicates";
  "fallingTurnip" = self."falling-turnip";
  "familyTree" = self."family-tree";
  "fastLogger" = self."fast-logger";
  "fastMath" = self."fast-math";
  "fastTagsoup" = self."fast-tagsoup";
  "fastTagsoupUtf8Only" = self."fast-tagsoup-utf8-only";
  "fastTags" = self."fast-tags";
  "faultTree" = self."fault-tree";
  "fayBase" = self."fay-base";
  "fayBuilder" = self."fay-builder";
  "fayDom" = self."fay-dom";
  "fayHsx" = self."fay-hsx";
  "fayJquery" = self."fay-jquery";
  "fayRef" = self."fay-ref";
  "fayText" = self."fay-text";
  "fayUri" = self."fay-uri";
  "fbPersistent" = self."fb-persistent";
  "fclabelsMonadlib" = self."fclabels-monadlib";
  "fdoNotify" = self."fdo-notify";
  "fdoTrash" = self."fdo-trash";
  "featureFlags" = self."feature-flags";
  "fedoraPackages" = self."fedora-packages";
  "feedCli" = self."feed-cli";
  "feldsparCompiler" = self."feldspar-compiler";
  "feldsparLanguage" = self."feldspar-language";
  "fezConf" = self."fez-conf";
  "fficxxRuntime" = self."fficxx-runtime";
  "ffmpegLight" = self."ffmpeg-light";
  "ffmpegTutorials" = self."ffmpeg-tutorials";
  "fglExtrasDecompositions" = self."fgl-extras-decompositions";
  "fglVisualize" = self."fgl-visualize";
  "fieldsJson" = self."fields-json";
  "fileCommandQq" = self."file-command-qq";
  "fileEmbed" = self."file-embed";
  "fileLocation" = self."file-location";
  "filepathIoAccess" = self."filepath-io-access";
  "filesystemConduit" = self."filesystem-conduit";
  "filesystemEnumerator" = self."filesystem-enumerator";
  "filesystemTrees" = self."filesystem-trees";
  "FinanceQuoteYahoo" = self."Finance-Quote-Yahoo";
  "FinanceTreasury" = self."Finance-Treasury";
  "findConduit" = self."find-conduit";
  "fingertreePsqueue" = self."fingertree-psqueue";
  "fingertreeTf" = self."fingertree-tf";
  "finiteField" = self."finite-field";
  "firstClassPatterns" = self."first-class-patterns";
  "fixedList" = self."fixed-list";
  "fixedPoint" = self."fixed-point";
  "FixedPointSimple" = self."FixedPoint-simple";
  "fixedPointVector" = self."fixed-point-vector";
  "fixedPointVectorSpace" = self."fixed-point-vector-space";
  "fixedPrecision" = self."fixed-precision";
  "fixedStorableArray" = self."fixed-storable-array";
  "fixedVectorBinary" = self."fixed-vector-binary";
  "fixedVectorCereal" = self."fixed-vector-cereal";
  "fixedVectorHetero" = self."fixed-vector-hetero";
  "fixedVector" = self."fixed-vector";
  "fixImports" = self."fix-imports";
  "fixParserSimple" = self."fix-parser-simple";
  "fixSymbolsGitit" = self."fix-symbols-gitit";
  "fizzBuzz" = self."fizz-buzz";
  "flatMcmc" = self."flat-mcmc";
  "flexibleDefaults" = self."flexible-defaults";
  "flexibleUnlit" = self."flexible-unlit";
  "flexiwrapSmallcheck" = self."flexiwrap-smallcheck";
  "floatBinstring" = self."float-binstring";
  "flowdockApi" = self."flowdock-api";
  "fluentLoggerConduit" = self."fluent-logger-conduit";
  "fluentLogger" = self."fluent-logger";
  "FMSBLEX" = self."FM-SBLEX";
  "foldlIncremental" = self."foldl-incremental";
  "fontOpenglBasic4x6" = self."font-opengl-basic4x6";
  "forceLayout" = self."force-layout";
  "foreignStorableAsymmetric" = self."foreign-storable-asymmetric";
  "foreignStore" = self."foreign-store";
  "forFree" = self."for-free";
  "forkableMonad" = self."forkable-monad";
  "formatStatus" = self."format-status";
  "formletsHsp" = self."formlets-hsp";
  "forthHll" = self."forth-hll";
  "fpcoApi" = self."fpco-api";
  "fpnlaExamples" = self."fpnla-examples";
  "frameMarkdown" = self."frame-markdown";
  "freeFunctors" = self."free-functors";
  "freeGame" = self."free-game";
  "freeOperational" = self."free-operational";
  "freeTheoremsCounterexamples" = self."free-theorems-counterexamples";
  "freeTheorems" = self."free-theorems";
  "freeTheoremsSeq" = self."free-theorems-seq";
  "freeTheoremsSeqWebui" = self."free-theorems-seq-webui";
  "freeTheoremsWebui" = self."free-theorems-webui";
  "freetypeSimple" = self."freetype-simple";
  "friendlyTime" = self."friendly-time";
  "fsEvents" = self."fs-events";
  "FTGLBytestring" = self."FTGL-bytestring";
  "ftpConduit" = self."ftp-conduit";
  "fullSessions" = self."full-sessions";
  "fullTextSearch" = self."full-text-search";
  "functionalArrow" = self."functional-arrow";
  "functionCombine" = self."function-combine";
  "functionInstancesAlgebra" = self."function-instances-algebra";
  "functorApply" = self."functor-apply";
  "functorCombo" = self."functor-combo";
  "functorInfix" = self."functor-infix";
  "futureResource" = self."future-resource";
  "fuzzyTimings" = self."fuzzy-timings";
  "gameProbability" = self."game-probability";
  "gameTree" = self."game-tree";
  "gangOfThreads" = self."gang-of-threads";
  "garsiaWachs" = self."garsia-wachs";
  "gcMonitoringWai" = self."gc-monitoring-wai";
  "gdiffIg" = self."gdiff-ig";
  "gdiffTh" = self."gdiff-th";
  "geekServer" = self."geek-server";
  "generalPrelude" = self."general-prelude";
  "genericAeson" = self."generic-aeson";
  "genericBinary" = self."generic-binary";
  "genericChurch" = self."generic-church";
  "genericDeepseq" = self."generic-deepseq";
  "genericDeriving" = self."generic-deriving";
  "genericLucidScaffold" = self."generic-lucid-scaffold";
  "genericMaybe" = self."generic-maybe";
  "genericServer" = self."generic-server";
  "genericsSop" = self."generics-sop";
  "genericStorable" = self."generic-storable";
  "genericTree" = self."generic-tree";
  "genericXml" = self."generic-xml";
  "geniGui" = self."geni-gui";
  "geniUtil" = self."geni-util";
  "GeomPredicatesSSE" = self."GeomPredicates-SSE";
  "getoptSimple" = self."getopt-simple";
  "ghcCoreHtml" = self."ghc-core-html";
  "ghcCore" = self."ghc-core";
  "ghcDatasize" = self."ghc-datasize";
  "ghcDup" = self."ghc-dup";
  "ghcEventsAnalyze" = self."ghc-events-analyze";
  "ghcEventsParallel" = self."ghc-events-parallel";
  "ghcEvents" = self."ghc-events";
  "ghcGcTune" = self."ghc-gc-tune";
  "ghcHeapView" = self."ghc-heap-view";
  "ghciDiagrams" = self."ghci-diagrams";
  "ghciHaskeline" = self."ghci-haskeline";
  "ghciLib" = self."ghci-lib";
  "ghcImportedFrom" = self."ghc-imported-from";
  "ghciNg" = self."ghci-ng";
  "ghciPretty" = self."ghci-pretty";
  "ghcjsCodemirror" = self."ghcjs-codemirror";
  "ghcjsDomHello" = self."ghcjs-dom-hello";
  "ghcjsDom" = self."ghcjs-dom";
  "ghcMake" = self."ghc-make";
  "ghcManCompletion" = self."ghc-man-completion";
  "ghcMod" = self."ghc-mod";
  "ghcMtl" = self."ghc-mtl";
  "ghcParmake" = self."ghc-parmake";
  "ghcParser" = self."ghc-parser";
  "ghcPaths" = self."ghc-paths";
  "ghcPkgAutofix" = self."ghc-pkg-autofix";
  "ghcPkgLib" = self."ghc-pkg-lib";
  "ghcPrim" = self."ghc-prim";
  "ghcServer" = self."ghc-server";
  "ghcSrcspanPlugin" = self."ghc-srcspan-plugin";
  "ghcSyb" = self."ghc-syb";
  "ghcSybUtils" = self."ghc-syb-utils";
  "ghcTimeAllocProf" = self."ghc-time-alloc-prof";
  "ghcVis" = self."ghc-vis";
  "gitAll" = self."git-all";
  "gitAnnex" = self."git-annex";
  "gitChecklist" = self."git-checklist";
  "gitDate" = self."git-date";
  "gitEmbed" = self."git-embed";
  "gitFreq" = self."git-freq";
  "gitGpush" = self."git-gpush";
  "githubBackup" = self."github-backup";
  "githubPostReceive" = self."github-post-receive";
  "githubTypes" = self."github-types";
  "gitlibCmdline" = self."gitlib-cmdline";
  "gitlibCross" = self."gitlib-cross";
  "gitlibLibgit2" = self."gitlib-libgit2";
  "gitlibS3" = self."gitlib-s3";
  "gitlibSample" = self."gitlib-sample";
  "gitlibTest" = self."gitlib-test";
  "gitlibUtils" = self."gitlib-utils";
  "gitMonitor" = self."git-monitor";
  "gitObject" = self."git-object";
  "gitRepair" = self."git-repair";
  "gitSanity" = self."git-sanity";
  "gladexmlAccessor" = self."gladexml-accessor";
  "glCapture" = self."gl-capture";
  "GLFWBDemo" = self."GLFW-b-demo";
  "GLFWB" = self."GLFW-b";
  "GLFWOGL" = self."GLFW-OGL";
  "GLFWTask" = self."GLFW-task";
  "gliderNlp" = self."glider-nlp";
  "globalConfig" = self."global-config";
  "globalLock" = self."global-lock";
  "globalVariables" = self."global-variables";
  "glomeHs" = self."glome-hs";
  "glossAccelerate" = self."gloss-accelerate";
  "glossAlgorithms" = self."gloss-algorithms";
  "glossBanana" = self."gloss-banana";
  "glossDevil" = self."gloss-devil";
  "glossExamples" = self."gloss-examples";
  "glossGame" = self."gloss-game";
  "glossJuicy" = self."gloss-juicy";
  "glossRasterAccelerate" = self."gloss-raster-accelerate";
  "glossRaster" = self."gloss-raster";
  "glossRendering" = self."gloss-rendering";
  "glossSodium" = self."gloss-sodium";
  "glpkHs" = self."glpk-hs";
  "gnomeDesktop" = self."gnome-desktop";
  "gnomeKeyring" = self."gnome-keyring";
  "gNpm" = self."g-npm";
  "goateeGtk" = self."goatee-gtk";
  "goferPrelude" = self."gofer-prelude";
  "googleDictionary" = self."google-dictionary";
  "googleDrive" = self."google-drive";
  "googleHtml5Slide" = self."google-html5-slide";
  "googleMailFilters" = self."google-mail-filters";
  "googleOauth2" = self."google-oauth2";
  "googleSearch" = self."google-search";
  "GotoTTransformers" = self."GotoT-transformers";
  "GPipeCollada" = self."GPipe-Collada";
  "GPipeExamples" = self."GPipe-Examples";
  "GPipeTextureLoad" = self."GPipe-TextureLoad";
  "gpxConduit" = self."gpx-conduit";
  "grammarCombinators" = self."grammar-combinators";
  "grapefruitExamples" = self."grapefruit-examples";
  "grapefruitFrp" = self."grapefruit-frp";
  "grapefruitRecords" = self."grapefruit-records";
  "grapefruitUiGtk" = self."grapefruit-ui-gtk";
  "grapefruitUi" = self."grapefruit-ui";
  "graphCore" = self."graph-core";
  "graphGenerators" = self."graph-generators";
  "GraphHammerExamples" = self."GraphHammer-examples";
  "graphicsDrawingcombinators" = self."graphics-drawingcombinators";
  "graphicsFormatsCollada" = self."graphics-formats-collada";
  "graphMatchings" = self."graph-matchings";
  "graphRewritingCl" = self."graph-rewriting-cl";
  "graphRewritingGl" = self."graph-rewriting-gl";
  "graphRewritingLambdascope" = self."graph-rewriting-lambdascope";
  "graphRewritingLayout" = self."graph-rewriting-layout";
  "graphRewriting" = self."graph-rewriting";
  "graphRewritingSki" = self."graph-rewriting-ski";
  "graphRewritingStrategies" = self."graph-rewriting-strategies";
  "graphRewritingTrs" = self."graph-rewriting-trs";
  "graphRewritingWw" = self."graph-rewriting-ww";
  "graphSerialize" = self."graph-serialize";
  "graphUtils" = self."graph-utils";
  "graphVisit" = self."graph-visit";
  "graphWrapper" = self."graph-wrapper";
  "grayCode" = self."gray-code";
  "grayExtended" = self."gray-extended";
  "greencardLib" = self."greencard-lib";
  "gregClient" = self."greg-client";
  "groundhogInspector" = self."groundhog-inspector";
  "groundhogMysql" = self."groundhog-mysql";
  "groundhogPostgresql" = self."groundhog-postgresql";
  "groundhogSqlite" = self."groundhog-sqlite";
  "groundhogTh" = self."groundhog-th";
  "groupWith" = self."group-with";
  "gruffExamples" = self."gruff-examples";
  "gscWeighting" = self."gsc-weighting";
  "gslRandomFu" = self."gsl-random-fu";
  "gslRandom" = self."gsl-random";
  "gtk2hsBuildtools" = self."gtk2hs-buildtools";
  "gtk2hsCastGlade" = self."gtk2hs-cast-glade";
  "gtk2hsCastGlib" = self."gtk2hs-cast-glib";
  "gtk2hsCastGnomevfs" = self."gtk2hs-cast-gnomevfs";
  "gtk2hsCastGtkglext" = self."gtk2hs-cast-gtkglext";
  "gtk2hsCastGtk" = self."gtk2hs-cast-gtk";
  "gtk2hsCastGtksourceview2" = self."gtk2hs-cast-gtksourceview2";
  "gtk2hsCastTh" = self."gtk2hs-cast-th";
  "gtk2hsHello" = self."gtk2hs-hello";
  "gtk2hsRpn" = self."gtk2hs-rpn";
  "gtk3MacIntegration" = self."gtk3-mac-integration";
  "gtkJsinput" = self."gtk-jsinput";
  "gtkLargeTreeStore" = self."gtk-largeTreeStore";
  "gtkMacIntegration" = self."gtk-mac-integration";
  "gtkSerializedEvent" = self."gtk-serialized-event";
  "gtkSimpleListView" = self."gtk-simple-list-view";
  "gtkToggleButtonList" = self."gtk-toggle-button-list";
  "gtkToy" = self."gtk-toy";
  "gtkTraymanager" = self."gtk-traymanager";
  "gtTools" = self."gt-tools";
  "guardedRewriting" = self."guarded-rewriting";
  "guessCombinator" = self."guess-combinator";
  "gutenbergFibonaccis" = self."gutenberg-fibonaccis";
  "hacanonLight" = self."hacanon-light";
  "hack2ContribExtra" = self."hack2-contrib-extra";
  "hack2Contrib" = self."hack2-contrib";
  "hack2HandlerHappstackServer" = self."hack2-handler-happstack-server";
  "hack2HandlerMongrel2Http" = self."hack2-handler-mongrel2-http";
  "hack2HandlerSnapServer" = self."hack2-handler-snap-server";
  "hack2HandlerWarp" = self."hack2-handler-warp";
  "hack2InterfaceWai" = self."hack2-interface-wai";
  "hackageDb" = self."hackage-db";
  "hackageDiff" = self."hackage-diff";
  "hackagePlot" = self."hackage-plot";
  "hackageProxy" = self."hackage-proxy";
  "hackageServer" = self."hackage-server";
  "hackageSparks" = self."hackage-sparks";
  "hackContribPress" = self."hack-contrib-press";
  "hackContrib" = self."hack-contrib";
  "hackFrontendHappstack" = self."hack-frontend-happstack";
  "hackFrontendMonadcgi" = self."hack-frontend-monadcgi";
  "hackHandlerCgi" = self."hack-handler-cgi";
  "hackHandlerEpoll" = self."hack-handler-epoll";
  "hackHandlerEvhttp" = self."hack-handler-evhttp";
  "hackHandlerFastcgi" = self."hack-handler-fastcgi";
  "hackHandlerHappstack" = self."hack-handler-happstack";
  "hackHandlerHyena" = self."hack-handler-hyena";
  "hackHandlerKibro" = self."hack-handler-kibro";
  "hackHandlerSimpleserver" = self."hack-handler-simpleserver";
  "hackMiddlewareCleanpath" = self."hack-middleware-cleanpath";
  "hackMiddlewareClientsession" = self."hack-middleware-clientsession";
  "hackMiddlewareGzip" = self."hack-middleware-gzip";
  "hackMiddlewareJsonp" = self."hack-middleware-jsonp";
  "haddockApi" = self."haddock-api";
  "haddockLeksah" = self."haddock-leksah";
  "haddockLibrary" = self."haddock-library";
  "hadoopFormats" = self."hadoop-formats";
  "hadoopRpc" = self."hadoop-rpc";
  "hadoopTools" = self."hadoop-tools";
  "hailgunSend" = self."hailgun-send";
  "hailsBin" = self."hails-bin";
  "hakyllAgda" = self."hakyll-agda";
  "hakyllBlazeTemplates" = self."hakyll-blaze-templates";
  "hakyllContribHyphenation" = self."hakyll-contrib-hyphenation";
  "hakyllContribLinks" = self."hakyll-contrib-links";
  "hakyllContrib" = self."hakyll-contrib";
  "hakyllConvert" = self."hakyll-convert";
  "hakyllElm" = self."hakyll-elm";
  "handaGdata" = self."handa-gdata";
  "handaGeodata" = self."handa-geodata";
  "handleLike" = self."handle-like";
  "hansPcap" = self."hans-pcap";
  "HAppSData" = self."HAppS-Data";
  "happsHsp" = self."happs-hsp";
  "happsHspTemplate" = self."happs-hsp-template";
  "HAppSIxSet" = self."HAppS-IxSet";
  "HAppSServer" = self."HAppS-Server";
  "HAppSState" = self."HAppS-State";
  "happstackAuthenticate" = self."happstack-authenticate";
  "happstackAuth" = self."happstack-auth";
  "happstackClientsession" = self."happstack-clientsession";
  "happstackContrib" = self."happstack-contrib";
  "happstackData" = self."happstack-data";
  "happstackDlg" = self."happstack-dlg";
  "happstackFacebook" = self."happstack-facebook";
  "happstackFastcgi" = self."happstack-fastcgi";
  "happstackFayAjax" = self."happstack-fay-ajax";
  "happstackFay" = self."happstack-fay";
  "happstackFoundation" = self."happstack-foundation";
  "happstackHamlet" = self."happstack-hamlet";
  "happstackHeist" = self."happstack-heist";
  "happstackHelpers" = self."happstack-helpers";
  "happstackHsp" = self."happstack-hsp";
  "happstackHstringtemplate" = self."happstack-hstringtemplate";
  "happstackIxset" = self."happstack-ixset";
  "happstackJmacro" = self."happstack-jmacro";
  "happstackLite" = self."happstack-lite";
  "happstackMonadPeel" = self."happstack-monad-peel";
  "happstackPlugins" = self."happstack-plugins";
  "happstackServer" = self."happstack-server";
  "happstackServerTls" = self."happstack-server-tls";
  "happstackState" = self."happstack-state";
  "happstackStaticRouting" = self."happstack-static-routing";
  "happstackUtil" = self."happstack-util";
  "happstackYui" = self."happstack-yui";
  "happsTutorial" = self."happs-tutorial";
  "HAppSUtil" = self."HAppS-Util";
  "happybaraWebkit" = self."happybara-webkit";
  "happybaraWebkitServer" = self."happybara-webkit-server";
  "happyMeta" = self."happy-meta";
  "HarmTraceBase" = self."HarmTrace-Base";
  "hascatLib" = self."hascat-lib";
  "hascatSetup" = self."hascat-setup";
  "hascatSystem" = self."hascat-system";
  "hashableExtras" = self."hashable-extras";
  "hashableGenerics" = self."hashable-generics";
  "hashedStorage" = self."hashed-storage";
  "hashtablesPlus" = self."hashtables-plus";
  "haskbotCore" = self."haskbot-core";
  "haskelineClass" = self."haskeline-class";
  "haskellAliyun" = self."haskell-aliyun";
  "haskellAwk" = self."haskell-awk";
  "haskellBcrypt" = self."haskell-bcrypt";
  "haskellBrainfuck" = self."haskell-brainfuck";
  "haskellCnc" = self."haskell-cnc";
  "haskellCoffee" = self."haskell-coffee";
  "haskellCompression" = self."haskell-compression";
  "haskellCoursePreludes" = self."haskell-course-preludes";
  "haskelldbConnectHdbcCatchioMtl" = self."haskelldb-connect-hdbc-catchio-mtl";
  "haskelldbConnectHdbcCatchioTf" = self."haskelldb-connect-hdbc-catchio-tf";
  "haskelldbConnectHdbcCatchioTransformers" = self."haskelldb-connect-hdbc-catchio-transformers";
  "haskelldbConnectHdbcLifted" = self."haskelldb-connect-hdbc-lifted";
  "haskelldbConnectHdbc" = self."haskelldb-connect-hdbc";
  "haskelldbDynamic" = self."haskelldb-dynamic";
  "haskelldbFlat" = self."haskelldb-flat";
  "haskelldbHdbcMysql" = self."haskelldb-hdbc-mysql";
  "haskelldbHdbcOdbc" = self."haskelldb-hdbc-odbc";
  "haskelldbHdbcPostgresql" = self."haskelldb-hdbc-postgresql";
  "haskelldbHdbc" = self."haskelldb-hdbc";
  "haskelldbHdbcSqlite3" = self."haskelldb-hdbc-sqlite3";
  "haskelldbHsqlMysql" = self."haskelldb-hsql-mysql";
  "haskelldbHsqlOdbc" = self."haskelldb-hsql-odbc";
  "haskelldbHsqlOracle" = self."haskelldb-hsql-oracle";
  "haskelldbHsqlPostgresql" = self."haskelldb-hsql-postgresql";
  "haskelldbHsql" = self."haskelldb-hsql";
  "haskelldbHsqlSqlite3" = self."haskelldb-hsql-sqlite3";
  "haskelldbHsqlSqlite" = self."haskelldb-hsql-sqlite";
  "haskelldbTh" = self."haskelldb-th";
  "haskelldbWx" = self."haskelldb-wx";
  "haskellDocs" = self."haskell-docs";
  "haskellFormatter" = self."haskell-formatter";
  "haskellFtp" = self."haskell-ftp";
  "haskellGenerate" = self."haskell-generate";
  "haskellInSpace" = self."haskell-in-space";
  "haskellLexer" = self."haskell-lexer";
  "haskellModbus" = self."haskell-modbus";
  "haskellMpi" = self."haskell-mpi";
  "haskellNames" = self."haskell-names";
  "haskellNeo4jClient" = self."haskell-neo4j-client";
  "HaskellNetSSL" = self."HaskellNet-SSL";
  "haskellOpenflow" = self."haskell-openflow";
  "haskellPackages" = self."haskell-packages";
  "haskellPdfPresenter" = self."haskell-pdf-presenter";
  "haskellPlatformTest" = self."haskell-platform-test";
  "haskellPlot" = self."haskell-plot";
  "haskellQrencode" = self."haskell-qrencode";
  "haskellReflect" = self."haskell-reflect";
  "haskellSpacegoo" = self."haskell-spacegoo";
  "haskellSrcExtsQq" = self."haskell-src-exts-qq";
  "haskellSrcExts" = self."haskell-src-exts";
  "haskellSrcMetaMwotton" = self."haskell-src-meta-mwotton";
  "haskellSrcMeta" = self."haskell-src-meta";
  "haskellSrc" = self."haskell-src";
  "haskellTokenUtils" = self."haskell-token-utils";
  "haskellTypeExts" = self."haskell-type-exts";
  "haskellTypescript" = self."haskell-typescript";
  "haskellTyrant" = self."haskell-tyrant";
  "haskellUpdater" = self."haskell-updater";
  "haskellXmpp" = self."haskell-xmpp";
  "haskholCore" = self."haskhol-core";
  "haskHome" = self."hask-home";
  "haskoinCrypto" = self."haskoin-crypto";
  "haskoinProtocol" = self."haskoin-protocol";
  "haskoinScript" = self."haskoin-script";
  "haskoinUtil" = self."haskoin-util";
  "haskoinWallet" = self."haskoin-wallet";
  "haskoonHttpspec" = self."haskoon-httpspec";
  "haskoonSalvia" = self."haskoon-salvia";
  "haskoreRealtime" = self."haskore-realtime";
  "haskoreSupercollider" = self."haskore-supercollider";
  "haskoreSynthesizer" = self."haskore-synthesizer";
  "haskoreVintage" = self."haskore-vintage";
  "hasparqlClient" = self."hasparql-client";
  "hasqlBackend" = self."hasql-backend";
  "hasqlPostgres" = self."hasql-postgres";
  "hastacheAeson" = self."hastache-aeson";
  "hasteCompiler" = self."haste-compiler";
  "hasteMarkup" = self."haste-markup";
  "hastePerch" = self."haste-perch";
  "hasTh" = self."has-th";
  "hatexGuide" = self."hatex-guide";
  "HaTeXMeta" = self."HaTeX-meta";
  "haxlFacebook" = self."haxl-facebook";
  "haxrTh" = self."haxr-th";
  "hayooCli" = self."hayoo-cli";
  "hBDDCUDD" = self."hBDD-CUDD";
  "hBooru" = self."h-booru";
  "hbroContrib" = self."hbro-contrib";
  "hcgMinusCairo" = self."hcg-minus-cairo";
  "hcgMinus" = self."hcg-minus";
  "hdaemonizeBuildfix" = self."hdaemonize-buildfix";
  "HDBCMysql" = self."HDBC-mysql";
  "HDBCOdbc" = self."HDBC-odbc";
  "hdbcPostgresqlHstore" = self."hdbc-postgresql-hstore";
  "HDBCPostgresqlHstore" = self."HDBC-postgresql-hstore";
  "HDBCPostgresql" = self."HDBC-postgresql";
  "HDBCSession" = self."HDBC-session";
  "HDBCSqlite3" = self."HDBC-sqlite3";
  "hdbcTuple" = self."hdbc-tuple";
  "hdbiConduit" = self."hdbi-conduit";
  "hdbiPostgresql" = self."hdbi-postgresql";
  "hdbiSqlite" = self."hdbi-sqlite";
  "hdbiTests" = self."hdbi-tests";
  "hdphClosure" = self."hdph-closure";
  "hebrewTime" = self."hebrew-time";
  "hedisPile" = self."hedis-pile";
  "hedisSimple" = self."hedis-simple";
  "hedisTags" = self."hedis-tags";
  "heistAeson" = self."heist-aeson";
  "heistAsync" = self."heist-async";
  "helicsWai" = self."helics-wai";
  "helpEsb" = self."help-esb";
  "hemkayCore" = self."hemkay-core";
  "herLexerParsec" = self."her-lexer-parsec";
  "herLexer" = self."her-lexer";
  "hermitSyb" = self."hermit-syb";
  "herringboneEmbed" = self."herringbone-embed";
  "herringboneWai" = self."herringbone-wai";
  "heteroMap" = self."hetero-map";
  "hevolisaDph" = self."hevolisa-dph";
  "hexpatIteratee" = self."hexpat-iteratee";
  "hexpatLens" = self."hexpat-lens";
  "hexpatPickleGeneric" = self."hexpat-pickle-generic";
  "hexpatPickle" = self."hexpat-pickle";
  "hexpatTagsoup" = self."hexpat-tagsoup";
  "HGamer3DAPI" = self."HGamer3D-API";
  "HGamer3DAudio" = self."HGamer3D-Audio";
  "HGamer3DBulletBinding" = self."HGamer3D-Bullet-Binding";
  "HGamer3DCAudioBinding" = self."HGamer3D-CAudio-Binding";
  "HGamer3DCEGUIBinding" = self."HGamer3D-CEGUI-Binding";
  "HGamer3DData" = self."HGamer3D-Data";
  "HGamer3DEnetBinding" = self."HGamer3D-Enet-Binding";
  "HGamer3DGraphics3D" = self."HGamer3D-Graphics3D";
  "HGamer3DGUI" = self."HGamer3D-GUI";
  "HGamer3DInputSystem" = self."HGamer3D-InputSystem";
  "HGamer3DNetwork" = self."HGamer3D-Network";
  "HGamer3DOgreBinding" = self."HGamer3D-Ogre-Binding";
  "HGamer3DOISBinding" = self."HGamer3D-OIS-Binding";
  "HGamer3DSDL2Binding" = self."HGamer3D-SDL2-Binding";
  "HGamer3DSFMLBinding" = self."HGamer3D-SFML-Binding";
  "HGamer3DWinEvent" = self."HGamer3D-WinEvent";
  "HGamer3DWire" = self."HGamer3D-Wire";
  "hgBuildpackage" = self."hg-buildpackage";
  "hglExample" = self."hgl-example";
  "hGpgme" = self."h-gpgme";
  "hierarchicalClusteringDiagrams" = self."hierarchical-clustering-diagrams";
  "hierarchicalClustering" = self."hierarchical-clustering";
  "hierarchicalExceptions" = self."hierarchical-exceptions";
  "higherLeveldb" = self."higher-leveldb";
  "highlightingKate" = self."highlighting-kate";
  "highlightVersions" = self."highlight-versions";
  "hinduceAssociationsApriori" = self."hinduce-associations-apriori";
  "hinduceClassifierDecisiontree" = self."hinduce-classifier-decisiontree";
  "hinduceClassifier" = self."hinduce-classifier";
  "hinduceExamples" = self."hinduce-examples";
  "hinduceMissingh" = self."hinduce-missingh";
  "hintServer" = self."hint-server";
  "hinzeStreams" = self."hinze-streams";
  "histogramFillBinary" = self."histogram-fill-binary";
  "histogramFillCereal" = self."histogram-fill-cereal";
  "histogramFill" = self."histogram-fill";
  "histPlDawg" = self."hist-pl-dawg";
  "histPlFusion" = self."hist-pl-fusion";
  "histPlLexicon" = self."hist-pl-lexicon";
  "histPlLmf" = self."hist-pl-lmf";
  "histPl" = self."hist-pl";
  "histPlTransliter" = self."hist-pl-transliter";
  "histPlTypes" = self."hist-pl-types";
  "hjsonQuery" = self."hjson-query";
  "HLearnAlgebra" = self."HLearn-algebra";
  "HLearnApproximation" = self."HLearn-approximation";
  "HLearnClassification" = self."HLearn-classification";
  "HLearnDatastructures" = self."HLearn-datastructures";
  "HLearnDistributions" = self."HLearn-distributions";
  "hledgerChart" = self."hledger-chart";
  "hledgerDiff" = self."hledger-diff";
  "hledgerInterest" = self."hledger-interest";
  "hledgerIrr" = self."hledger-irr";
  "hledgerLib" = self."hledger-lib";
  "hledgerVty" = self."hledger-vty";
  "hledgerWeb" = self."hledger-web";
  "hmatrixBanded" = self."hmatrix-banded";
  "hmatrixCsv" = self."hmatrix-csv";
  "hmatrixGlpk" = self."hmatrix-glpk";
  "hmatrixGsl" = self."hmatrix-gsl";
  "hmatrixGslStats" = self."hmatrix-gsl-stats";
  "hmatrixMmap" = self."hmatrix-mmap";
  "hmatrixNipals" = self."hmatrix-nipals";
  "hmatrixQuadprogpp" = self."hmatrix-quadprogpp";
  "hmatrixRepa" = self."hmatrix-repa";
  "hmatrixSpecial" = self."hmatrix-special";
  "hmatrixStatic" = self."hmatrix-static";
  "hmatrixSvdlibc" = self."hmatrix-svdlibc";
  "hmatrixSyntax" = self."hmatrix-syntax";
  "hmatrixTests" = self."hmatrix-tests";
  "hmeapUtils" = self."hmeap-utils";
  "hmtDiagrams" = self."hmt-diagrams";
  "hofixMtl" = self."hofix-mtl";
  "hogreExamples" = self."hogre-examples";
  "hoistError" = self."hoist-error";
  "holdEm" = self."hold-em";
  "holeyFormat" = self."holey-format";
  "HolumbusDistribution" = self."Holumbus-Distribution";
  "HolumbusMapReduce" = self."Holumbus-MapReduce";
  "HolumbusSearchengine" = self."Holumbus-Searchengine";
  "HolumbusStorage" = self."Holumbus-Storage";
  "holyProject" = self."holy-project";
  "hommageDs" = self."hommage-ds";
  "hoodleBuilder" = self."hoodle-builder";
  "hoodleCore" = self."hoodle-core";
  "hoodleExtra" = self."hoodle-extra";
  "hoodleParser" = self."hoodle-parser";
  "hoodlePublish" = self."hoodle-publish";
  "hoodleRender" = self."hoodle-render";
  "hoodleTypes" = self."hoodle-types";
  "hoodOff" = self."hood-off";
  "hoogleIndex" = self."hoogle-index";
  "hooksDir" = self."hooks-dir";
  "hopenpgpTools" = self."hopenpgp-tools";
  "hopfieldNetworks" = self."hopfield-networks";
  "hoscJson" = self."hosc-json";
  "hoscUtils" = self."hosc-utils";
  "hostnameValidate" = self."hostname-validate";
  "hostsServer" = self."hosts-server";
  "hp2anyCore" = self."hp2any-core";
  "hp2anyGraph" = self."hp2any-graph";
  "hp2anyManager" = self."hp2any-manager";
  "hpacoLib" = self."hpaco-lib";
  "hpcCoveralls" = self."hpc-coveralls";
  "hpcStrobe" = self."hpc-strobe";
  "hpcTracer" = self."hpc-tracer";
  "hPDBExamples" = self."hPDB-examples";
  "hprotocFork" = self."hprotoc-fork";
  "hpsCairo" = self."hps-cairo";
  "hpsKmeans" = self."hps-kmeans";
  "HROOTCore" = self."HROOT-core";
  "HROOTGraf" = self."HROOT-graf";
  "HROOTHist" = self."HROOT-hist";
  "HROOTIo" = self."HROOT-io";
  "HROOTMath" = self."HROOT-math";
  "hsbencherCodespeed" = self."hsbencher-codespeed";
  "hsbencherFusion" = self."hsbencher-fusion";
  "hsBibutils" = self."hs-bibutils";
  "hsBlake2" = self."hs-blake2";
  "hsc3Auditor" = self."hsc3-auditor";
  "hsc3Cairo" = self."hsc3-cairo";
  "hsc3Data" = self."hsc3-data";
  "hsc3Db" = self."hsc3-db";
  "hsc3Dot" = self."hsc3-dot";
  "hsc3Forth" = self."hsc3-forth";
  "hsc3Graphs" = self."hsc3-graphs";
  "hsc3Lang" = self."hsc3-lang";
  "hsc3Lisp" = self."hsc3-lisp";
  "hsc3Plot" = self."hsc3-plot";
  "hsc3Process" = self."hsc3-process";
  "hsc3Rec" = self."hsc3-rec";
  "hsc3Rw" = self."hsc3-rw";
  "hsc3Server" = self."hsc3-server";
  "hsc3SfHsndfile" = self."hsc3-sf-hsndfile";
  "hsc3Sf" = self."hsc3-sf";
  "hsc3Unsafe" = self."hsc3-unsafe";
  "hsc3Utils" = self."hsc3-utils";
  "hsCaptcha" = self."hs-captcha";
  "hsCarbonExamples" = self."hs-carbon-examples";
  "hsCarbon" = self."hs-carbon";
  "hsCdb" = self."hs-cdb";
  "hscursesFishEx" = self."hscurses-fish-ex";
  "hsdnsCache" = self."hsdns-cache";
  "hsDotnet" = self."hs-dotnet";
  "hseCpp" = self."hse-cpp";
  "hsemailNs" = self."hsemail-ns";
  "hsExcelx" = self."hs-excelx";
  "hsFfmpeg" = self."hs-ffmpeg";
  "hsFltk" = self."hs-fltk";
  "hsGchart" = self."hs-gchart";
  "hsGenIface" = self."hs-gen-iface";
  "hsGeoIP" = self."hs-GeoIP";
  "hsGizapp" = self."hs-gizapp";
  "hsgnutlsYj" = self."hsgnutls-yj";
  "hsJava" = self."hs-java";
  "hsJsonRpc" = self."hs-json-rpc";
  "hsloggerTemplate" = self."hslogger-template";
  "hsLogo" = self."hs-logo";
  "hsMesos" = self."hs-mesos";
  "hsndfileStorablevector" = self."hsndfile-storablevector";
  "hsndfileVector" = self."hsndfile-vector";
  "hsNombreGenerator" = self."hs-nombre-generator";
  "hspCgi" = self."hsp-cgi";
  "hspecAttoparsec" = self."hspec-attoparsec";
  "hspecCheckers" = self."hspec-checkers";
  "hspecContrib" = self."hspec-contrib";
  "hspecCore" = self."hspec-core";
  "hspecDiscover" = self."hspec-discover";
  "hspecExpectationsLens" = self."hspec-expectations-lens";
  "hspecExpectationsLifted" = self."hspec-expectations-lifted";
  "hspecExpectationsPretty" = self."hspec-expectations-pretty";
  "hspecExpectations" = self."hspec-expectations";
  "hspecExperimental" = self."hspec-experimental";
  "hspecJenkins" = self."hspec-jenkins";
  "hspecLaws" = self."hspec-laws";
  "hspecMeta" = self."hspec-meta";
  "hspecShouldbe" = self."hspec-shouldbe";
  "hspecSmallcheck" = self."hspec-smallcheck";
  "hspecSnap" = self."hspec-snap";
  "hspecTestFramework" = self."hspec-test-framework";
  "hspecTestFrameworkTh" = self."hspec-test-framework-th";
  "hspecWaiJson" = self."hspec-wai-json";
  "hspecWai" = self."hspec-wai";
  "hspecWebdriver" = self."hspec-webdriver";
  "hsPgms" = self."hs-pgms";
  "hsPhpSession" = self."hs-php-session";
  "hsPkpass" = self."hs-pkpass";
  "hsprSh" = self."hspr-sh";
  "hsqlMysql" = self."hsql-mysql";
  "hsqlOdbc" = self."hsql-odbc";
  "hsqlPostgresql" = self."hsql-postgresql";
  "hsqlSqlite3" = self."hsql-sqlite3";
  "hsqmlDemoMorris" = self."hsqml-demo-morris";
  "hsqmlDemoNotes" = self."hsqml-demo-notes";
  "hsqmlDemoSamples" = self."hsqml-demo-samples";
  "hsqmlMorris" = self."hsqml-morris";
  "hsTwitterarchiver" = self."hs-twitterarchiver";
  "hsTwitter" = self."hs-twitter";
  "hsVcard" = self."hs-vcard";
  "hsxJmacro" = self."hsx-jmacro";
  "hsxXhtml" = self."hsx-xhtml";
  "htmlConduit" = self."html-conduit";
  "htmlKure" = self."html-kure";
  "htmlMinimalist" = self."html-minimalist";
  "htmlRules" = self."html-rules";
  "htmlTruncate" = self."html-truncate";
  "htsnCommon" = self."htsn-common";
  "htsnImport" = self."htsn-import";
  "httpAccept" = self."http-accept";
  "httpAttoparsec" = self."http-attoparsec";
  "httpClientAuth" = self."http-client-auth";
  "httpClientConduit" = self."http-client-conduit";
  "httpClientLens" = self."http-client-lens";
  "httpClientMultipart" = self."http-client-multipart";
  "httpClientOpenssl" = self."http-client-openssl";
  "httpClientRequestModifiers" = self."http-client-request-modifiers";
  "httpClient" = self."http-client";
  "httpClientTls" = self."http-client-tls";
  "httpCommon" = self."http-common";
  "httpConduitBrowser" = self."http-conduit-browser";
  "httpConduitDownloader" = self."http-conduit-downloader";
  "httpConduit" = self."http-conduit";
  "httpDate" = self."http-date";
  "httpdShed" = self."httpd-shed";
  "httpEncodings" = self."http-encodings";
  "httpEnumerator" = self."http-enumerator";
  "httpKit" = self."http-kit";
  "httpLinkHeader" = self."http-link-header";
  "httpMedia" = self."http-media";
  "httpMonad" = self."http-monad";
  "httpProxy" = self."http-proxy";
  "httpQuerystring" = self."http-querystring";
  "httpReverseProxy" = self."http-reverse-proxy";
  "httpServer" = self."http-server";
  "httpsEverywhereRulesRaw" = self."https-everywhere-rules-raw";
  "httpsEverywhereRules" = self."https-everywhere-rules";
  "httpShed" = self."http-shed";
  "HTTPSimple" = self."HTTP-Simple";
  "httpStreams" = self."http-streams";
  "httpTest" = self."http-test";
  "httpTypes" = self."http-types";
  "httpWget" = self."http-wget";
  "HungarianMunkres" = self."Hungarian-Munkres";
  "HUnitApprox" = self."HUnit-approx";
  "HUnitDiff" = self."HUnit-Diff";
  "hunitGui" = self."hunit-gui";
  "hunitParsec" = self."hunit-parsec";
  "HUnitPlus" = self."HUnit-Plus";
  "hunitRematch" = self."hunit-rematch";
  "huskSchemeLibs" = self."husk-scheme-libs";
  "huskScheme" = self."husk-scheme";
  "hwallAuthIitk" = self."hwall-auth-iitk";
  "hxtBinary" = self."hxt-binary";
  "hxtCache" = self."hxt-cache";
  "hxtCharproperties" = self."hxt-charproperties";
  "hxtCss" = self."hxt-css";
  "hxtCurl" = self."hxt-curl";
  "hxtExpat" = self."hxt-expat";
  "hxtExtras" = self."hxt-extras";
  "hxtFilter" = self."hxt-filter";
  "hxtHttp" = self."hxt-http";
  "hxtPickleUtils" = self."hxt-pickle-utils";
  "hxtRegexXmlschema" = self."hxt-regex-xmlschema";
  "hxtRelaxng" = self."hxt-relaxng";
  "hxtTagsoup" = self."hxt-tagsoup";
  "hxtUnicode" = self."hxt-unicode";
  "hxtXpath" = self."hxt-xpath";
  "hxtXslt" = self."hxt-xslt";
  "hybridVectors" = self."hybrid-vectors";
  "hydraHs" = self."hydra-hs";
  "hydraPrint" = self."hydra-print";
  "hydrogenData" = self."hydrogen-data";
  "hydrogenPrelude" = self."hydrogen-prelude";
  "hydrogenSyntax" = self."hydrogen-syntax";
  "hydrogenUtil" = self."hydrogen-util";
  "hydrogenVersion" = self."hydrogen-version";
  "ideasMath" = self."ideas-math";
  "ieee754Parser" = self."ieee754-parser";
  "ieeeUtils" = self."ieee-utils";
  "ieeeUtilsTempfix" = self."ieee-utils-tempfix";
  "igeMacIntegration" = self."ige-mac-integration";
  "ihaskellAeson" = self."ihaskell-aeson";
  "ihaskellBlaze" = self."ihaskell-blaze";
  "ihaskellCharts" = self."ihaskell-charts";
  "ihaskellDiagrams" = self."ihaskell-diagrams";
  "ihaskellDisplay" = self."ihaskell-display";
  "ihaskellMagic" = self."ihaskell-magic";
  "imagesizeConduit" = self."imagesize-conduit";
  "imageType" = self."image-type";
  "implicitParams" = self."implicit-params";
  "includeFile" = self."include-file";
  "incRef" = self."inc-ref";
  "incrementalParser" = self."incremental-parser";
  "incrementalSatSolver" = self."incremental-sat-solver";
  "indexCore" = self."index-core";
  "indexedDoNotation" = self."indexed-do-notation";
  "indexedExtras" = self."indexed-extras";
  "indexedFree" = self."indexed-free";
  "indianLanguageFontConverter" = self."indian-language-font-converter";
  "inferUpstream" = self."infer-upstream";
  "infiniteSearch" = self."infinite-search";
  "injectFunction" = self."inject-function";
  "inspectionProxy" = self."inspection-proxy";
  "instantGenerics" = self."instant-generics";
  "instantZipper" = self."instant-zipper";
  "instrumentChord" = self."instrument-chord";
  "intCast" = self."int-cast";
  "integerGmp" = self."integer-gmp";
  "integerPure" = self."integer-pure";
  "intelAes" = self."intel-aes";
  "interpolatedstringPerl6" = self."interpolatedstring-perl6";
  "interpolatedstringQqMwotton" = self."interpolatedstring-qq-mwotton";
  "interpolatedstringQq" = self."interpolatedstring-qq";
  "InterpolationMaxs" = self."Interpolation-maxs";
  "invertibleSyntax" = self."invertible-syntax";
  "ioCapture" = self."io-capture";
  "ioChoice" = self."io-choice";
  "ioManager" = self."io-manager";
  "ioMemoize" = self."io-memoize";
  "ioReactive" = self."io-reactive";
  "ioStorage" = self."io-storage";
  "ioStreams" = self."io-streams";
  "ioThrottle" = self."io-throttle";
  "ipoptHs" = self."ipopt-hs";
  "iptablesHelpers" = self."iptables-helpers";
  "ipythonKernel" = self."ipython-kernel";
  "ircBytestring" = self."irc-bytestring";
  "ircConduit" = self."irc-conduit";
  "ircCtcp" = self."irc-ctcp";
  "iso3166CountryCodes" = self."iso3166-country-codes";
  "iso8583Bitmaps" = self."iso8583-bitmaps";
  "iso8601Time" = self."iso8601-time";
  "itaniumAbi" = self."itanium-abi";
  "iterateeCompress" = self."iteratee-compress";
  "iterateeMtl" = self."iteratee-mtl";
  "iterateeParsec" = self."iteratee-parsec";
  "iterateeStm" = self."iteratee-stm";
  "iterioServer" = self."iterio-server";
  "iterStats" = self."iter-stats";
  "ivarSimple" = self."ivar-simple";
  "ivoryBackendC" = self."ivory-backend-c";
  "ivoryBitdata" = self."ivory-bitdata";
  "ivoryExamples" = self."ivory-examples";
  "ivoryHw" = self."ivory-hw";
  "ivoryOpts" = self."ivory-opts";
  "ivoryQuickcheck" = self."ivory-quickcheck";
  "ivoryStdlib" = self."ivory-stdlib";
  "ivyWeb" = self."ivy-web";
  "ixsetTyped" = self."ixset-typed";
  "ixShapable" = self."ix-shapable";
  "jackBindings" = self."jack-bindings";
  "jacobiRoots" = self."jacobi-roots";
  "jailbreakCabal" = self."jailbreak-cabal";
  "javaBridgeExtras" = self."java-bridge-extras";
  "javaBridge" = self."java-bridge";
  "javaCharacter" = self."java-character";
  "javaReflect" = self."java-reflect";
  "jcdecauxVls" = self."jcdecaux-vls";
  "jmacroRpcHappstack" = self."jmacro-rpc-happstack";
  "jmacroRpc" = self."jmacro-rpc";
  "jmacroRpcSnap" = self."jmacro-rpc-snap";
  "joseJwt" = self."jose-jwt";
  "jsaddleHello" = self."jsaddle-hello";
  "jsFlot" = self."js-flot";
  "jsGoodParts" = self."js-good-parts";
  "jsJquery" = self."js-jquery";
  "json2Hdbc" = self."json2-hdbc";
  "json2Types" = self."json2-types";
  "jsonAssertions" = self."json-assertions";
  "jsonAutotype" = self."json-autotype";
  "jsonB" = self."json-b";
  "jsonBuilder" = self."json-builder";
  "JSONCombinatorExamples" = self."JSON-Combinator-Examples";
  "JSONCombinator" = self."JSON-Combinator";
  "jsonEnumerator" = self."json-enumerator";
  "jsonExtra" = self."json-extra";
  "jsonFu" = self."json-fu";
  "jsonPython" = self."json-python";
  "jsonQq" = self."json-qq";
  "jsonrpcConduit" = self."jsonrpc-conduit";
  "jsonRpc" = self."json-rpc";
  "jsonRpcServer" = self."json-rpc-server";
  "jsonSchema" = self."json-schema";
  "jsonSop" = self."json-sop";
  "jsonTools" = self."json-tools";
  "jsonTypes" = self."json-types";
  "JuicyPixelsCanvas" = self."JuicyPixels-canvas";
  "JuicyPixelsRepa" = self."JuicyPixels-repa";
  "JuicyPixelsUtil" = self."JuicyPixels-util";
  "JunkDBDriverGdbm" = self."JunkDB-driver-gdbm";
  "JunkDBDriverHashtables" = self."JunkDB-driver-hashtables";
  "jvmParser" = self."jvm-parser";
  "JYUUtils" = self."JYU-Utils";
  "kanExtensions" = self."kan-extensions";
  "kansasComet" = self."kansas-comet";
  "kansasLavaCores" = self."kansas-lava-cores";
  "kansasLavaPapilio" = self."kansas-lava-papilio";
  "kansasLava" = self."kansas-lava";
  "kansasLavaShake" = self."kansas-lava-shake";
  "kbqGu" = self."kbq-gu";
  "kdesrcBuildExtra" = self."kdesrc-build-extra";
  "kdTree" = self."kd-tree";
  "kicadData" = self."kicad-data";
  "kickassTorrentsDumpParser" = self."kickass-torrents-dump-parser";
  "KiCSDebugger" = self."KiCS-debugger";
  "KiCSProphecy" = self."KiCS-prophecy";
  "kifParser" = self."kif-parser";
  "kmeansPar" = self."kmeans-par";
  "kmeansVector" = self."kmeans-vector";
  "koellnerPhonetic" = self."koellner-phonetic";
  "kontrakcjaTemplates" = self."kontrakcja-templates";
  "koofrClient" = self."koofr-client";
  "ksTest" = self."ks-test";
  "kureYourBoilerplate" = self."kure-your-boilerplate";
  "labeledGraph" = self."labeled-graph";
  "labeledTree" = self."labeled-tree";
  "laborantinHs" = self."laborantin-hs";
  "labyrinthServer" = self."labyrinth-server";
  "lambdaAst" = self."lambda-ast";
  "lambdabotUtils" = self."lambdabot-utils";
  "lambdaBridge" = self."lambda-bridge";
  "lambdaCanvas" = self."lambda-canvas";
  "lambdacubeBullet" = self."lambdacube-bullet";
  "lambdacubeCore" = self."lambdacube-core";
  "lambdacubeEdsl" = self."lambdacube-edsl";
  "lambdacubeEngine" = self."lambdacube-engine";
  "lambdacubeExamples" = self."lambdacube-examples";
  "lambdacubeGl" = self."lambdacube-gl";
  "lambdacubeSamples" = self."lambdacube-samples";
  "lambdaDevs" = self."lambda-devs";
  "lambdaPlaceholders" = self."lambda-placeholders";
  "lambdaToolbox" = self."lambda-toolbox";
  "lameTester" = self."lame-tester";
  "languageAsn1" = self."language-asn1";
  "languageBash" = self."language-bash";
  "languageBoogie" = self."language-boogie";
  "languageCComments" = self."language-c-comments";
  "languageCil" = self."language-cil";
  "languageCInline" = self."language-c-inline";
  "languageCQuote" = self."language-c-quote";
  "languageC" = self."language-c";
  "languageCss" = self."language-css";
  "languageDot" = self."language-dot";
  "languageEcmascriptAnalysis" = self."language-ecmascript-analysis";
  "languageEcmascript" = self."language-ecmascript";
  "languageEiffel" = self."language-eiffel";
  "languageFortran" = self."language-fortran";
  "languageGcl" = self."language-gcl";
  "languageGlsl" = self."language-glsl";
  "languageGo" = self."language-go";
  "languageGuess" = self."language-guess";
  "languageHaskellExtract" = self."language-haskell-extract";
  "languageJavaClassfile" = self."language-java-classfile";
  "languageJavascript" = self."language-javascript";
  "languageJava" = self."language-java";
  "languageLua" = self."language-lua";
  "languageMixal" = self."language-mixal";
  "languageObjc" = self."language-objc";
  "languageOpenscad" = self."language-openscad";
  "languagePig" = self."language-pig";
  "languagePuppet" = self."language-puppet";
  "languagePythonColour" = self."language-python-colour";
  "languagePython" = self."language-python";
  "languageSh" = self."language-sh";
  "languageSlice" = self."language-slice";
  "languageSpelling" = self."language-spelling";
  "languageSqlite" = self."language-sqlite";
  "languageTypescript" = self."language-typescript";
  "latestNpmVersion" = self."latest-npm-version";
  "launchpadControl" = self."launchpad-control";
  "layersGame" = self."layers-game";
  "layoutBootstrap" = self."layout-bootstrap";
  "lazyCsv" = self."lazy-csv";
  "lazyIo" = self."lazy-io";
  "lBfgsB" = self."l-bfgs-b";
  "leankitApi" = self."leankit-api";
  "leapsecondsAnnounced" = self."leapseconds-announced";
  "learningHmm" = self."learning-hmm";
  "learnPhysicsExamples" = self."learn-physics-examples";
  "learnPhysics" = self."learn-physics";
  "leksahServer" = self."leksah-server";
  "lensAeson" = self."lens-aeson";
  "lensDatetime" = self."lens-datetime";
  "lensFamilyCore" = self."lens-family-core";
  "lensFamily" = self."lens-family";
  "lensFamilyTh" = self."lens-family-th";
  "lensProperties" = self."lens-properties";
  "lensSop" = self."lens-sop";
  "lensTextEncoding" = self."lens-text-encoding";
  "lensTime" = self."lens-time";
  "leveldbHaskellFork" = self."leveldb-haskell-fork";
  "leveldbHaskell" = self."leveldb-haskell";
  "levelMonad" = self."level-monad";
  "levmarChart" = self."levmar-chart";
  "lhs2TeXHl" = self."lhs2TeX-hl";
  "libarchiveConduit" = self."libarchive-conduit";
  "liblinearEnumerator" = self."liblinear-enumerator";
  "libssh2Conduit" = self."libssh2-conduit";
  "libsystemdDaemon" = self."libsystemd-daemon";
  "libsystemdJournal" = self."libsystemd-journal";
  "libvirtHs" = self."libvirt-hs";
  "libxmlEnumerator" = self."libxml-enumerator";
  "libxmlSax" = self."libxml-sax";
  "liftedAsync" = self."lifted-async";
  "liftedBase" = self."lifted-base";
  "lighttpdConfQq" = self."lighttpd-conf-qq";
  "lighttpdConf" = self."lighttpd-conf";
  "limpCbc" = self."limp-cbc";
  "linAlg" = self."lin-alg";
  "linearAccelerate" = self."linear-accelerate";
  "linearAlgebraCblas" = self."linear-algebra-cblas";
  "linearMaps" = self."linear-maps";
  "linearOpengl" = self."linear-opengl";
  "linearVect" = self."linear-vect";
  "linguisticOrdinals" = self."linguistic-ordinals";
  "linuxBlkid" = self."linux-blkid";
  "linuxCgroup" = self."linux-cgroup";
  "linuxEvdev" = self."linux-evdev";
  "linuxFileExtents" = self."linux-file-extents";
  "linuxInotify" = self."linux-inotify";
  "linuxKmod" = self."linux-kmod";
  "linuxMount" = self."linux-mount";
  "linuxNamespaces" = self."linux-namespaces";
  "linuxPerf" = self."linux-perf";
  "linuxPtrace" = self."linux-ptrace";
  "linuxXattr" = self."linux-xattr";
  "linxGateway" = self."linx-gateway";
  "lioEci11" = self."lio-eci11";
  "lioFs" = self."lio-fs";
  "lioSimple" = self."lio-simple";
  "liquidFixpoint" = self."liquid-fixpoint";
  "listExtras" = self."list-extras";
  "listFusionProbe" = self."list-fusion-probe";
  "listGrouping" = self."list-grouping";
  "listlikeInstances" = self."listlike-instances";
  "listMux" = self."list-mux";
  "listRemoteForwards" = self."list-remote-forwards";
  "listTries" = self."list-tries";
  "listT" = self."list-t";
  "liveSequencer" = self."live-sequencer";
  "llvmAnalysis" = self."llvm-analysis";
  "llvmBase" = self."llvm-base";
  "llvmBaseTypes" = self."llvm-base-types";
  "llvmBaseUtil" = self."llvm-base-util";
  "llvmDataInterop" = self."llvm-data-interop";
  "llvmExtra" = self."llvm-extra";
  "llvmGeneralPure" = self."llvm-general-pure";
  "llvmGeneralQuote" = self."llvm-general-quote";
  "llvmGeneral" = self."llvm-general";
  "llvmHt" = self."llvm-ht";
  "llvmPkgConfig" = self."llvm-pkg-config";
  "llvmPrettyBcParser" = self."llvm-pretty-bc-parser";
  "llvmPretty" = self."llvm-pretty";
  "llvmTf" = self."llvm-tf";
  "llvmTools" = self."llvm-tools";
  "loadEnv" = self."load-env";
  "localAddress" = self."local-address";
  "localSearch" = self."local-search";
  "lochTh" = self."loch-th";
  "lockfreeQueue" = self."lockfree-queue";
  "logDomain" = self."log-domain";
  "logEffect" = self."log-effect";
  "loggingFacadeJournald" = self."logging-facade-journald";
  "loggingFacade" = self."logging-facade";
  "logicClasses" = self."logic-classes";
  "LogicGrowsOnTreesMPI" = self."LogicGrowsOnTrees-MPI";
  "LogicGrowsOnTreesNetwork" = self."LogicGrowsOnTrees-network";
  "LogicGrowsOnTreesProcesses" = self."LogicGrowsOnTrees-processes";
  "logicTPTP" = self."logic-TPTP";
  "loopEffin" = self."loop-effin";
  "loopWhile" = self."loop-while";
  "LSeed" = self."L-seed";
  "lsUsb" = self."ls-usb";
  "luaBytecode" = self."lua-bytecode";
  "lzmaConduit" = self."lzma-conduit";
  "lzmaEnumerator" = self."lzma-enumerator";
  "machinesDirectory" = self."machines-directory";
  "machinesIo" = self."machines-io";
  "machinesProcess" = self."machines-process";
  "macosxMakeStandalone" = self."macosx-make-standalone";
  "mailboxCount" = self."mailbox-count";
  "mailchimpSubscribe" = self."mailchimp-subscribe";
  "mainlandPretty" = self."mainland-pretty";
  "makeHardLinks" = self."make-hard-links";
  "makePackage" = self."make-package";
  "manateeAll" = self."manatee-all";
  "manateeAnything" = self."manatee-anything";
  "manateeBrowser" = self."manatee-browser";
  "manateeCore" = self."manatee-core";
  "manateeCurl" = self."manatee-curl";
  "manateeEditor" = self."manatee-editor";
  "manateeFilemanager" = self."manatee-filemanager";
  "manateeImageviewer" = self."manatee-imageviewer";
  "manateeIrcclient" = self."manatee-ircclient";
  "manateeMplayer" = self."manatee-mplayer";
  "manateePdfviewer" = self."manatee-pdfviewer";
  "manateeProcessmanager" = self."manatee-processmanager";
  "manateeReader" = self."manatee-reader";
  "manateeTemplate" = self."manatee-template";
  "manateeTerminal" = self."manatee-terminal";
  "manateeWelcome" = self."manatee-welcome";
  "mapSyntax" = self."map-syntax";
  "markdownKate" = self."markdown-kate";
  "markdownPap" = self."markdown-pap";
  "markdownUnlit" = self."markdown-unlit";
  "markedPretty" = self."marked-pretty";
  "markovChain" = self."markov-chain";
  "markovProcesses" = self."markov-processes";
  "markupPreview" = self."markup-preview";
  "marmaladeUpload" = self."marmalade-upload";
  "masakazuBot" = self."masakazu-bot";
  "mathFunctions" = self."math-functions";
  "matrixMarketPure" = self."matrix-market-pure";
  "matrixMarket" = self."matrix-market";
  "maximalCliques" = self."maximal-cliques";
  "MaybeTMonadsTf" = self."MaybeT-monads-tf";
  "MaybeTTransformers" = self."MaybeT-transformers";
  "mboxTools" = self."mbox-tools";
  "MCFoldDP" = self."MC-Fold-DP";
  "mcmasterGlossExamples" = self."mcmaster-gloss-examples";
  "mcmcSamplers" = self."mcmc-samplers";
  "mcmcSynthesis" = self."mcmc-synthesis";
  "megaSdist" = self."mega-sdist";
  "meldableHeap" = self."meldable-heap";
  "memcachedBinary" = self."memcached-binary";
  "memoSqlite" = self."memo-sqlite";
  "mersenneRandomPure64" = self."mersenne-random-pure64";
  "mersenneRandom" = self."mersenne-random";
  "messagepackRpc" = self."messagepack-rpc";
  "metaMisc" = self."meta-misc";
  "metaParAccelerate" = self."meta-par-accelerate";
  "metaPar" = self."meta-par";
  "metricsdClient" = self."metricsd-client";
  "microformats2Types" = self."microformats2-types";
  "midiAlsa" = self."midi-alsa";
  "mimeDirectory" = self."mime-directory";
  "mimeMail" = self."mime-mail";
  "mimeMailSes" = self."mime-mail-ses";
  "mimeString" = self."mime-string";
  "mimeTypes" = self."mime-types";
  "minimalConfiguration" = self."minimal-configuration";
  "mirrorTweet" = self."mirror-tweet";
  "missingForeign" = self."missing-foreign";
  "missingPy2" = self."missing-py2";
  "mixArrows" = self."mix-arrows";
  "mixedStrategies" = self."mixed-strategies";
  "mlW" = self."ml-w";
  "mmtlBase" = self."mmtl-base";
  "modbusTcp" = self."modbus-tcp";
  "modularArithmetic" = self."modular-arithmetic";
  "modularPreludeClassy" = self."modular-prelude-classy";
  "modularPrelude" = self."modular-prelude";
  "moduleManagement" = self."module-management";
  "monadAbortFd" = self."monad-abort-fd";
  "monadAtom" = self."monad-atom";
  "monadAtomSimple" = self."monad-atom-simple";
  "monadBool" = self."monad-bool";
  "MonadCatchIOMtlForeign" = self."MonadCatchIO-mtl-foreign";
  "MonadCatchIOMtl" = self."MonadCatchIO-mtl";
  "MonadCatchIOTransformersForeign" = self."MonadCatchIO-transformers-foreign";
  "MonadCatchIOTransformers" = self."MonadCatchIO-transformers";
  "monadCodec" = self."monad-codec";
  "monadControl" = self."monad-control";
  "monadCoroutine" = self."monad-coroutine";
  "monadException" = self."monad-exception";
  "monadExtras" = self."monad-extras";
  "monadFork" = self."monad-fork";
  "monadGen" = self."monad-gen";
  "monadicArrays" = self."monadic-arrays";
  "monadiccpGecode" = self."monadiccp-gecode";
  "monadInterleave" = self."monad-interleave";
  "monadioUnwrappable" = self."monadio-unwrappable";
  "monadJournal" = self."monad-journal";
  "monadLibCompose" = self."monadLib-compose";
  "monadlocPp" = self."monadloc-pp";
  "monadLogger" = self."monad-logger";
  "monadLoggerSyslog" = self."monad-logger-syslog";
  "monadLoops" = self."monad-loops";
  "monadLoopsStm" = self."monad-loops-stm";
  "monadLrs" = self."monad-lrs";
  "monadMemo" = self."monad-memo";
  "monadMersenneRandom" = self."monad-mersenne-random";
  "monadOx" = self."monad-ox";
  "monadParallel" = self."monad-parallel";
  "monadParam" = self."monad-param";
  "monadParExtras" = self."monad-par-extras";
  "monadPar" = self."monad-par";
  "monadPeel" = self."monad-peel";
  "monadPrimitive" = self."monad-primitive";
  "monadProducts" = self."monad-products";
  "monadRan" = self."monad-ran";
  "monadResumption" = self."monad-resumption";
  "monadsFd" = self."monads-fd";
  "monadState" = self."monad-state";
  "monadStatevar" = self."monad-statevar";
  "monadsTf" = self."monads-tf";
  "monadStlikeIo" = self."monad-stlike-io";
  "monadStlikeStm" = self."monad-stlike-stm";
  "monadStm" = self."monad-stm";
  "monadSt" = self."monad-st";
  "monadSupply" = self."monad-supply";
  "monadTask" = self."monad-task";
  "monadTx" = self."monad-tx";
  "monadUnify" = self."monad-unify";
  "monadWrap" = self."monad-wrap";
  "MonatronIO" = self."Monatron-IO";
  "mongodbQueue" = self."mongodb-queue";
  "mongrel2Handler" = self."mongrel2-handler";
  "monoFoldable" = self."mono-foldable";
  "monoidExtras" = self."monoid-extras";
  "monoidOwns" = self."monoid-owns";
  "monoidRecord" = self."monoid-record";
  "monoidStatistics" = self."monoid-statistics";
  "monoidSubclasses" = self."monoid-subclasses";
  "monoidTransformer" = self."monoid-transformer";
  "monoTraversable" = self."mono-traversable";
  "montageClient" = self."montage-client";
  "monteCarlo" = self."monte-carlo";
  "mqttHs" = self."mqtt-hs";
  "msgpackIdl" = self."msgpack-idl";
  "msgpackRpc" = self."msgpack-rpc";
  "mtlEvilInstances" = self."mtl-evil-instances";
  "mtlPrelude" = self."mtl-prelude";
  "mtlTf" = self."mtl-tf";
  "multextEastMsd" = self."multext-east-msd";
  "multiplateSimplified" = self."multiplate-simplified";
  "multirecAltDeriver" = self."multirec-alt-deriver";
  "multirecBinary" = self."multirec-binary";
  "multisetComb" = self."multiset-comb";
  "MunkresSimple" = self."Munkres-simple";
  "murmurHash" = self."murmur-hash";
  "musicArticulation" = self."music-articulation";
  "musicbrainzEmail" = self."musicbrainz-email";
  "MusicBrainzLibdiscid" = self."MusicBrainz-libdiscid";
  "musicDiatonic" = self."music-diatonic";
  "musicDynamicsLiteral" = self."music-dynamics-literal";
  "musicDynamics" = self."music-dynamics";
  "musicGraphics" = self."music-graphics";
  "musicParts" = self."music-parts";
  "musicPitchLiteral" = self."music-pitch-literal";
  "musicPitch" = self."music-pitch";
  "musicPreludes" = self."music-preludes";
  "musicScore" = self."music-score";
  "musicSibelius" = self."music-sibelius";
  "musicSuite" = self."music-suite";
  "musicUtil" = self."music-util";
  "mustacheHaskell" = self."mustache-haskell";
  "mutableIter" = self."mutable-iter";
  "muteUnmute" = self."mute-unmute";
  "mvcUpdates" = self."mvc-updates";
  "mwcRandomMonad" = self."mwc-random-monad";
  "mwcRandom" = self."mwc-random";
  "mybitcoinSci" = self."mybitcoin-sci";
  "mysnapsessionExample" = self."mysnapsession-example";
  "mysqlEffect" = self."mysql-effect";
  "mysqlSimpleQuasi" = self."mysql-simple-quasi";
  "mysqlSimple" = self."mysql-simple";
  "nagiosCheck" = self."nagios-check";
  "nagiosPerfdata" = self."nagios-perfdata";
  "namedFormlet" = self."named-formlet";
  "namedLock" = self."named-lock";
  "namedRecords" = self."named-records";
  "namesTh" = self."names-th";
  "nanoCryptr" = self."nano-cryptr";
  "nanoHmac" = self."nano-hmac";
  "nanoMd5" = self."nano-md5";
  "nanomsgHaskell" = self."nanomsg-haskell";
  "natsQueue" = self."nats-queue";
  "naturalNumber" = self."natural-number";
  "naturalNumbers" = self."natural-numbers";
  "naturalSort" = self."natural-sort";
  "ncIndicators" = self."nc-indicators";
  "neatInterpolation" = self."neat-interpolation";
  "neheTuts" = self."nehe-tuts";
  "nemesisTitan" = self."nemesis-titan";
  "nestedSets" = self."nested-sets";
  "netConcurrent" = self."net-concurrent";
  "netlistToVhdl" = self."netlist-to-vhdl";
  "netstringEnumerator" = self."netstring-enumerator";
  "nettleFrp" = self."nettle-frp";
  "nettleNetkit" = self."nettle-netkit";
  "nettleOpenflow" = self."nettle-openflow";
  "netwireInputGlfw" = self."netwire-input-glfw";
  "netwireInput" = self."netwire-input";
  "networkAddress" = self."network-address";
  "networkApiSupport" = self."network-api-support";
  "networkBitcoin" = self."network-bitcoin";
  "networkBytestring" = self."network-bytestring";
  "networkCarbon" = self."network-carbon";
  "networkConduit" = self."network-conduit";
  "networkConduitTls" = self."network-conduit-tls";
  "networkConnection" = self."network-connection";
  "networkData" = self."network-data";
  "networkDbus" = self."network-dbus";
  "networkDns" = self."network-dns";
  "networkedGame" = self."networked-game";
  "networkEnumerator" = self."network-enumerator";
  "networkFancy" = self."network-fancy";
  "networkHouse" = self."network-house";
  "networkInfo" = self."network-info";
  "networkInterfacerequest" = self."network-interfacerequest";
  "networkIp" = self."network-ip";
  "networkMetrics" = self."network-metrics";
  "networkMinihttp" = self."network-minihttp";
  "networkMsg" = self."network-msg";
  "networkMulticast" = self."network-multicast";
  "networkNetpacket" = self."network-netpacket";
  "NetworkNineP" = self."Network-NineP";
  "networkPgi" = self."network-pgi";
  "networkProtocolXmpp" = self."network-protocol-xmpp";
  "networkRpca" = self."network-rpca";
  "networkServer" = self."network-server";
  "networkService" = self."network-service";
  "networkSimple" = self."network-simple";
  "networkSimpleSockaddr" = self."network-simple-sockaddr";
  "networkSimpleTls" = self."network-simple-tls";
  "networkSocketOptions" = self."network-socket-options";
  "networkStream" = self."network-stream";
  "networkTopicModels" = self."network-topic-models";
  "networkTransport" = self."network-transport";
  "networkTransportTcp" = self."network-transport-tcp";
  "networkTransportTests" = self."network-transport-tests";
  "networkTransportZeromq" = self."network-transport-zeromq";
  "networkUri" = self."network-uri";
  "networkWaiRouter" = self."network-wai-router";
  "networkWebsocket" = self."network-websocket";
  "newtypeGenerics" = self."newtype-generics";
  "newtypeTh" = self."newtype-th";
  "nextstepPlist" = self."nextstep-plist";
  "ngramsLoader" = self."ngrams-loader";
  "nixosTypes" = self."nixos-types";
  "nlpScoresScripts" = self."nlp-scores-scripts";
  "nlpScores" = self."nlp-scores";
  "nM" = self."n-m";
  "NomyxCore" = self."Nomyx-Core";
  "NomyxLanguage" = self."Nomyx-Language";
  "NomyxRules" = self."Nomyx-Rules";
  "NomyxWeb" = self."Nomyx-Web";
  "nonEmpty" = self."non-empty";
  "nonlinearOptimizationAd" = self."nonlinear-optimization-ad";
  "nonlinearOptimization" = self."nonlinear-optimization";
  "nonNegative" = self."non-negative";
  "noRoleAnnots" = self."no-role-annots";
  "notGlossExamples" = self."not-gloss-examples";
  "notGloss" = self."not-gloss";
  "notInBase" = self."not-in-base";
  "notmuchHaskell" = self."notmuch-haskell";
  "notmuchWeb" = self."notmuch-web";
  "npExtras" = self."np-extras";
  "npLinear" = self."np-linear";
  "ntpControl" = self."ntp-control";
  "nullCanvas" = self."null-canvas";
  "numeralsBase" = self."numerals-base";
  "numericExtras" = self."numeric-extras";
  "numericLimits" = self."numeric-limits";
  "numericPrelude" = self."numeric-prelude";
  "numericQq" = self."numeric-qq";
  "numericQuest" = self."numeric-quest";
  "numericTools" = self."numeric-tools";
  "numtypeTf" = self."numtype-tf";
  "offSimple" = self."off-simple";
  "ohlohHs" = self."ohloh-hs";
  "oisInputManager" = self."ois-input-manager";
  "oldLocale" = self."old-locale";
  "oldTime" = self."old-time";
  "onAHorse" = self."on-a-horse";
  "onDemandSshTunnel" = self."on-demand-ssh-tunnel";
  "oneLiner" = self."one-liner";
  "onuCourse" = self."onu-course";
  "ooPrototypes" = self."oo-prototypes";
  "OpenAFPUtils" = self."OpenAFP-Utils";
  "opencvRaw" = self."opencv-raw";
  "openPandoc" = self."open-pandoc";
  "openpgpAsciiarmor" = self."openpgp-asciiarmor";
  "openpgpCryptoApi" = self."openpgp-crypto-api";
  "openpgpCrypto" = self."openpgp-Crypto";
  "opensoundcontrolHt" = self."opensoundcontrol-ht";
  "opensslCreatekey" = self."openssl-createkey";
  "opensslStreams" = self."openssl-streams";
  "opentheoryChar" = self."opentheory-char";
  "opentheoryParser" = self."opentheory-parser";
  "opentheoryPrime" = self."opentheory-prime";
  "opentheoryPrimitive" = self."opentheory-primitive";
  "openTyperep" = self."open-typerep";
  "openUnion" = self."open-union";
  "openWitness" = self."open-witness";
  "optimalBlocks" = self."optimal-blocks";
  "optionsTime" = self."options-time";
  "optparseApplicative" = self."optparse-applicative";
  "orchidDemo" = self."orchid-demo";
  "ordAdhoc" = self."ord-adhoc";
  "orderStatistics" = self."order-statistics";
  "organizeImports" = self."organize-imports";
  "orgmodeParse" = self."orgmode-parse";
  "osmDownload" = self."osm-download";
  "osRelease" = self."os-release";
  "osxAr" = self."osx-ar";
  "ottparsePretty" = self."ottparse-pretty";
  "packageOTron" = self."package-o-tron";
  "packageVt" = self."package-vt";
  "packedDawg" = self."packed-dawg";
  "pacmanMemcache" = self."pacman-memcache";
  "pandocCiteproc" = self."pandoc-citeproc";
  "pandocLens" = self."pandoc-lens";
  "pandocTypes" = self."pandoc-types";
  "pandocUnlit" = self."pandoc-unlit";
  "parallelIo" = self."parallel-io";
  "parallelTasks" = self."parallel-tasks";
  "parallelTreeSearch" = self."parallel-tree-search";
  "parameterizedData" = self."parameterized-data";
  "parcoAttoparsec" = self."parco-attoparsec";
  "parcomLib" = self."parcom-lib";
  "parconcExamples" = self."parconc-examples";
  "parcoParsec" = self."parco-parsec";
  "parsec3Numbers" = self."parsec3-numbers";
  "parsecExtra" = self."parsec-extra";
  "parsecNumbers" = self."parsec-numbers";
  "parsecParsers" = self."parsec-parsers";
  "parsecPermutation" = self."parsec-permutation";
  "parsecTagsoup" = self."parsec-tagsoup";
  "parsecUtils" = self."parsec-utils";
  "parseDimacs" = self."parse-dimacs";
  "parseHelp" = self."parse-help";
  "parserHelper" = self."parser-helper";
  "partialHandler" = self."partial-handler";
  "partialIsomorphisms" = self."partial-isomorphisms";
  "partialLens" = self."partial-lens";
  "partialUri" = self."partial-uri";
  "patchCombinators" = self."patch-combinators";
  "patchImage" = self."patch-image";
  "pathPieces" = self."path-pieces";
  "patternArrows" = self."pattern-arrows";
  "paypalApi" = self."paypal-api";
  "pcapConduit" = self."pcap-conduit";
  "pcapEnumerator" = self."pcap-enumerator";
  "pcdLoader" = self."pcd-loader";
  "PCLTDB" = self."PCLT-DB";
  "pcreLess" = self."pcre-less";
  "pcreLightExtra" = self."pcre-light-extra";
  "pcreLight" = self."pcre-light";
  "pcreUtils" = self."pcre-utils";
  "pdfToolboxContent" = self."pdf-toolbox-content";
  "pdfToolboxCore" = self."pdf-toolbox-core";
  "pdfToolboxDocument" = self."pdf-toolbox-document";
  "pdfToolboxViewer" = self."pdf-toolbox-viewer";
  "peanoInf" = self."peano-inf";
  "pennTreebank" = self."penn-treebank";
  "pennyBin" = self."penny-bin";
  "pennyLib" = self."penny-lib";
  "persistableRecord" = self."persistable-record";
  "persistentCereal" = self."persistent-cereal";
  "persistentEquivalence" = self."persistent-equivalence";
  "persistentHssqlppp" = self."persistent-hssqlppp";
  "persistentMap" = self."persistent-map";
  "persistentMongoDB" = self."persistent-mongoDB";
  "persistentMysql" = self."persistent-mysql";
  "persistentOdbc" = self."persistent-odbc";
  "persistentPostgresql" = self."persistent-postgresql";
  "persistentProtobuf" = self."persistent-protobuf";
  "persistentRedis" = self."persistent-redis";
  "persistentRefs" = self."persistent-refs";
  "persistentSqlite" = self."persistent-sqlite";
  "persistentTemplate" = self."persistent-template";
  "persistentVector" = self."persistent-vector";
  "persistentZookeeper" = self."persistent-zookeeper";
  "pgHarness" = self."pg-harness";
  "pgsqlSimple" = self."pgsql-simple";
  "phantomState" = self."phantom-state";
  "phonePush" = self."phone-push";
  "phoneticCode" = self."phonetic-code";
  "piCalculus" = self."pi-calculus";
  "pipesAeson" = self."pipes-aeson";
  "pipesAttoparsec" = self."pipes-attoparsec";
  "pipesAttoparsecStreaming" = self."pipes-attoparsec-streaming";
  "pipesBinary" = self."pipes-binary";
  "pipesBytestring" = self."pipes-bytestring";
  "pipesCerealPlus" = self."pipes-cereal-plus";
  "pipesConcurrency" = self."pipes-concurrency";
  "pipesConduit" = self."pipes-conduit";
  "pipesCore" = self."pipes-core";
  "pipesCourier" = self."pipes-courier";
  "pipesCsv" = self."pipes-csv";
  "pipesErrors" = self."pipes-errors";
  "pipesExtra" = self."pipes-extra";
  "pipesExtras" = self."pipes-extras";
  "pipesGroup" = self."pipes-group";
  "pipesHttp" = self."pipes-http";
  "pipesInterleave" = self."pipes-interleave";
  "pipesNetwork" = self."pipes-network";
  "pipesNetworkTls" = self."pipes-network-tls";
  "pipesP2pExamples" = self."pipes-p2p-examples";
  "pipesP2p" = self."pipes-p2p";
  "pipesParse" = self."pipes-parse";
  "pipesPostgresqlSimple" = self."pipes-postgresql-simple";
  "pipesRt" = self."pipes-rt";
  "pipesSafe" = self."pipes-safe";
  "pipesShell" = self."pipes-shell";
  "pipesText" = self."pipes-text";
  "pipesVector" = self."pipes-vector";
  "pipesWai" = self."pipes-wai";
  "pipesWebsockets" = self."pipes-websockets";
  "pipesZlib" = self."pipes-zlib";
  "planarGraph" = self."planar-graph";
  "plotGtk3" = self."plot-gtk3";
  "plotGtk" = self."plot-gtk";
  "PlotHoMatic" = self."Plot-ho-matic";
  "plotLab" = self."plot-lab";
  "plotserverApi" = self."plotserver-api";
  "pluginsAuto" = self."plugins-auto";
  "pluginsMultistage" = self."plugins-multistage";
  "plyLoader" = self."ply-loader";
  "pngFile" = self."png-file";
  "pngloadFixed" = self."pngload-fixed";
  "pointlessFun" = self."pointless-fun";
  "pointlessHaskell" = self."pointless-haskell";
  "pointlessLenses" = self."pointless-lenses";
  "pointlessRewrite" = self."pointless-rewrite";
  "pokerEval" = self."poker-eval";
  "polhLexicon" = self."polh-lexicon";
  "polynomialsBernstein" = self."polynomials-bernstein";
  "polytypeableUtils" = self."polytypeable-utils";
  "pontariusMediaserver" = self."pontarius-mediaserver";
  "pontariusXmpp" = self."pontarius-xmpp";
  "pontariusXpmn" = self."pontarius-xpmn";
  "poolConduit" = self."pool-conduit";
  "pooledIo" = self."pooled-io";
  "pop3Client" = self."pop3-client";
  "populateSetupExeCache" = self."populate-setup-exe-cache";
  "portableLines" = self."portable-lines";
  "posixAcl" = self."posix-acl";
  "posixEscape" = self."posix-escape";
  "posixFilelock" = self."posix-filelock";
  "posixPaths" = self."posix-paths";
  "posixPty" = self."posix-pty";
  "posixRealtime" = self."posix-realtime";
  "posixTimer" = self."posix-timer";
  "posixWaitpid" = self."posix-waitpid";
  "postgresqlBinary" = self."postgresql-binary";
  "postgresqlCopyEscape" = self."postgresql-copy-escape";
  "postgresqlLibpq" = self."postgresql-libpq";
  "postgresqlOrm" = self."postgresql-orm";
  "postgresqlSimpleMigration" = self."postgresql-simple-migration";
  "postgresqlSimple" = self."postgresql-simple";
  "postgresqlSimpleSop" = self."postgresql-simple-sop";
  "postMessAge" = self."post-mess-age";
  "pqueueMtl" = self."pqueue-mtl";
  "practiceRoom" = self."practice-room";
  "prednoteTest" = self."prednote-test";
  "prefixUnits" = self."prefix-units";
  "preludeExtras" = self."prelude-extras";
  "preludeGeneralize" = self."prelude-generalize";
  "preludePlus" = self."prelude-plus";
  "preludePrime" = self."prelude-prime";
  "preludeSafeenum" = self."prelude-safeenum";
  "preprocessorTools" = self."preprocessor-tools";
  "prettyClass" = self."pretty-class";
  "prettyCompact" = self."pretty-compact";
  "prettyHex" = self."pretty-hex";
  "prettyNcols" = self."pretty-ncols";
  "prettyShow" = self."pretty-show";
  "prettySop" = self."pretty-sop";
  "prettyTree" = self."pretty-tree";
  "primulaBoard" = self."primula-board";
  "primulaBot" = self."primula-bot";
  "primUniq" = self."prim-uniq";
  "printfMauke" = self."printf-mauke";
  "PrintfTH" = self."Printf-TH";
  "priorityQueue" = self."priority-queue";
  "prioritySync" = self."priority-sync";
  "privilegedConcurrency" = self."privileged-concurrency";
  "processConduit" = self."process-conduit";
  "processExtras" = self."process-extras";
  "processIterio" = self."process-iterio";
  "processLeksah" = self."process-leksah";
  "processListlike" = self."process-listlike";
  "processProgress" = self."process-progress";
  "processQq" = self."process-qq";
  "processStreaming" = self."process-streaming";
  "procrastinatingStructure" = self."procrastinating-structure";
  "procrastinatingVariable" = self."procrastinating-variable";
  "productProfunctors" = self."product-profunctors";
  "profunctorExtras" = self."profunctor-extras";
  "proj4HsBindings" = self."proj4-hs-bindings";
  "projectTemplate" = self."project-template";
  "prologGraphLib" = self."prolog-graph-lib";
  "prologGraph" = self."prolog-graph";
  "propertyList" = self."property-list";
  "protobufNative" = self."protobuf-native";
  "protocolBuffersDescriptorFork" = self."protocol-buffers-descriptor-fork";
  "protocolBuffersDescriptor" = self."protocol-buffers-descriptor";
  "protocolBuffersFork" = self."protocol-buffers-fork";
  "protocolBuffers" = self."protocol-buffers";
  "proveEverywhereServer" = self."prove-everywhere-server";
  "proxyKindness" = self."proxy-kindness";
  "pugsCompat" = self."pugs-compat";
  "pugsDrIFT" = self."pugs-DrIFT";
  "pugsHsregex" = self."pugs-hsregex";
  "pugsHsSyck" = self."pugs-HsSyck";
  "pulseSimple" = self."pulse-simple";
  "PupEventsClient" = self."Pup-Events-Client";
  "PupEventsDemo" = self."Pup-Events-Demo";
  "PupEventsPQueue" = self."Pup-Events-PQueue";
  "PupEvents" = self."Pup-Events";
  "PupEventsServer" = self."Pup-Events-Server";
  "pureCdb" = self."pure-cdb";
  "pureFft" = self."pure-fft";
  "pureIo" = self."pure-io";
  "purePriorityQueue" = self."pure-priority-queue";
  "purePriorityQueueTests" = self."pure-priority-queue-tests";
  "pureZlib" = self."pure-zlib";
  "pushNotifyCcs" = self."push-notify-ccs";
  "pushNotifyGeneral" = self."push-notify-general";
  "pushNotify" = self."push-notify";
  "puzzleDrawCmdline" = self."puzzle-draw-cmdline";
  "puzzleDraw" = self."puzzle-draw";
  "pwstoreCli" = self."pwstore-cli";
  "pwstoreFast" = self."pwstore-fast";
  "pwstorePurehaskell" = self."pwstore-purehaskell";
  "pxslTools" = self."pxsl-tools";
  "pythonPickle" = self."python-pickle";
  "qcOiTestgenerator" = self."qc-oi-testgenerator";
  "qdVec" = self."qd-vec";
  "qhullSimple" = self."qhull-simple";
  "quadraticIrrational" = self."quadratic-irrational";
  "quandlApi" = self."quandl-api";
  "quantumArrow" = self."quantum-arrow";
  "querystringPickle" = self."querystring-pickle";
  "quickcheckAssertions" = self."quickcheck-assertions";
  "QuickCheckGenT" = self."QuickCheck-GenT";
  "quickcheckInstances" = self."quickcheck-instances";
  "quickcheckIo" = self."quickcheck-io";
  "quickcheckPoly" = self."quickcheck-poly";
  "quickcheckProperties" = self."quickcheck-properties";
  "quickcheckPropertyComb" = self."quickcheck-property-comb";
  "quickcheckPropertyMonad" = self."quickcheck-property-monad";
  "quickcheckRegex" = self."quickcheck-regex";
  "quickcheckRelaxng" = self."quickcheck-relaxng";
  "quickcheckRematch" = self."quickcheck-rematch";
  "quickcheckScript" = self."quickcheck-script";
  "quickcheckUnicode" = self."quickcheck-unicode";
  "quickcheckWebdriver" = self."quickcheck-webdriver";
  "quickGenerator" = self."quick-generator";
  "radiumFormulaParser" = self."radium-formula-parser";
  "radosHaskell" = self."rados-haskell";
  "railCompilerEditor" = self."rail-compiler-editor";
  "rainbowTests" = self."rainbow-tests";
  "randomAccessList" = self."random-access-list";
  "randomEffin" = self."random-effin";
  "randomEff" = self."random-eff";
  "randomExtras" = self."random-extras";
  "randomFu" = self."random-fu";
  "randomShuffle" = self."random-shuffle";
  "randomSource" = self."random-source";
  "randomStream" = self."random-stream";
  "randVars" = self."rand-vars";
  "RangedSets" = self."Ranged-sets";
  "rangeSetList" = self."range-set-list";
  "rangeSpace" = self."range-space";
  "rateLimit" = self."rate-limit";
  "ratioInt" = self."ratio-int";
  "ravenHaskellScotty" = self."raven-haskell-scotty";
  "ravenHaskell" = self."raven-haskell";
  "rawstringQm" = self."rawstring-qm";
  "rawStringsQq" = self."raw-strings-qq";
  "rdtscEnolan" = self."rdtsc-enolan";
  "reactHaskell" = self."react-haskell";
  "reactionLogic" = self."reaction-logic";
  "reactiveBacon" = self."reactive-bacon";
  "reactiveBalsa" = self."reactive-balsa";
  "reactiveBananaSdl" = self."reactive-banana-sdl";
  "reactiveBanana" = self."reactive-banana";
  "reactiveBananaThreepenny" = self."reactive-banana-threepenny";
  "reactiveBananaWx" = self."reactive-banana-wx";
  "reactiveFieldtrip" = self."reactive-fieldtrip";
  "reactiveGlut" = self."reactive-glut";
  "reactiveHaskell" = self."reactive-haskell";
  "reactiveIo" = self."reactive-io";
  "reactiveThread" = self."reactive-thread";
  "readBounded" = self."read-bounded";
  "readlineStatevar" = self."readline-statevar";
  "reallySimpleXmlParser" = self."really-simple-xml-parser";
  "reasonableLens" = self."reasonable-lens";
  "recordsTh" = self."records-th";
  "recursionSchemes" = self."recursion-schemes";
  "recursiveLineCount" = self."recursive-line-count";
  "redisHs" = self."redis-hs";
  "redisIo" = self."redis-io";
  "redisResp" = self."redis-resp";
  "redisSimple" = self."redis-simple";
  "refFd" = self."ref-fd";
  "reflectionExtras" = self."reflection-extras";
  "reflectionWithoutRemorse" = self."reflection-without-remorse";
  "refMtl" = self."ref-mtl";
  "reformBlaze" = self."reform-blaze";
  "reformHamlet" = self."reform-hamlet";
  "reformHappstack" = self."reform-happstack";
  "reformHsp" = self."reform-hsp";
  "refTf" = self."ref-tf";
  "regexApplicative" = self."regex-applicative";
  "regexBase" = self."regex-base";
  "regexCompat" = self."regex-compat";
  "regexCompatTdfa" = self."regex-compat-tdfa";
  "regexDeriv" = self."regex-deriv";
  "regexDfa" = self."regex-dfa";
  "regexEasy" = self."regex-easy";
  "regexGenex" = self."regex-genex";
  "regexParsec" = self."regex-parsec";
  "regexPcreBuiltin" = self."regex-pcre-builtin";
  "regexPcre" = self."regex-pcre";
  "regexPderiv" = self."regex-pderiv";
  "regexPosix" = self."regex-posix";
  "regexPosixUnittest" = self."regex-posix-unittest";
  "regexprSymbolic" = self."regexpr-symbolic";
  "regexpTries" = self."regexp-tries";
  "regexTdfaRc" = self."regex-tdfa-rc";
  "regexTdfa" = self."regex-tdfa";
  "regexTdfaText" = self."regex-tdfa-text";
  "regexTdfaUnittest" = self."regex-tdfa-unittest";
  "regexTdfaUtf8" = self."regex-tdfa-utf8";
  "regexTre" = self."regex-tre";
  "regexXmlschema" = self."regex-xmlschema";
  "regionalPointers" = self."regional-pointers";
  "regionsMonadsfd" = self."regions-monadsfd";
  "regionsMonadstf" = self."regions-monadstf";
  "regionsMtl" = self."regions-mtl";
  "regularExtras" = self."regular-extras";
  "regularWeb" = self."regular-web";
  "regularXmlpickler" = self."regular-xmlpickler";
  "reifiedRecords" = self."reified-records";
  "reinterpretCast" = self."reinterpret-cast";
  "relationalQueryHDBC" = self."relational-query-HDBC";
  "relationalQuery" = self."relational-query";
  "relationalRecordExamples" = self."relational-record-examples";
  "relationalRecord" = self."relational-record";
  "relationalSchemas" = self."relational-schemas";
  "relativeDate" = self."relative-date";
  "rematchText" = self."rematch-text";
  "remoteDebugger" = self."remote-debugger";
  "repaAlgorithms" = self."repa-algorithms";
  "repaBytestring" = self."repa-bytestring";
  "repaDevil" = self."repa-devil";
  "repaExamples" = self."repa-examples";
  "repaFftw" = self."repa-fftw";
  "repaIo" = self."repa-io";
  "repaPlugin" = self."repa-plugin";
  "repaSeries" = self."repa-series";
  "repaSndfile" = self."repa-sndfile";
  "repaV4l2" = self."repa-v4l2";
  "repoBasedBlog" = self."repo-based-blog";
  "representableFunctors" = self."representable-functors";
  "representableProfunctors" = self."representable-profunctors";
  "representableTries" = self."representable-tries";
  "reprTreeSyb" = self."repr-tree-syb";
  "requestMonad" = self."request-monad";
  "resourceEffect" = self."resource-effect";
  "resourcePoolCatchio" = self."resource-pool-catchio";
  "resourcePool" = self."resource-pool";
  "resourceSimple" = self."resource-simple";
  "restClient" = self."rest-client";
  "restCore" = self."rest-core";
  "restExample" = self."rest-example";
  "restfulSnap" = self."restful-snap";
  "restGen" = self."rest-gen";
  "restHappstack" = self."rest-happstack";
  "restrictedWorkers" = self."restricted-workers";
  "restSnap" = self."rest-snap";
  "restStringmap" = self."rest-stringmap";
  "restTypes" = self."rest-types";
  "restWai" = self."rest-wai";
  "resumableExceptions" = self."resumable-exceptions";
  "rethinkdbClientDriver" = self."rethinkdb-client-driver";
  "rethinkdbWereHamster" = self."rethinkdb-wereHamster";
  "reverseApply" = self."reverse-apply";
  "revState" = self."rev-state";
  "riakProtobuf" = self."riak-protobuf";
  "rippleFederation" = self."ripple-federation";
  "RlangQQ" = self."Rlang-QQ";
  "rngUtils" = self."rng-utils";
  "robotsTxt" = self."robots-txt";
  "rocksdbHaskell" = self."rocksdb-haskell";
  "roguestarEngine" = self."roguestar-engine";
  "roguestarGl" = self."roguestar-gl";
  "roguestarGlut" = self."roguestar-glut";
  "rollingQueue" = self."rolling-queue";
  "romanNumerals" = self."roman-numerals";
  "rotatingLog" = self."rotating-log";
  "roundtripString" = self."roundtrip-string";
  "roundtripXml" = self."roundtrip-xml";
  "routeGenerator" = self."route-generator";
  "routePlanning" = self."route-planning";
  "rpcFramework" = self."rpc-framework";
  "rsaglFrp" = self."rsagl-frp";
  "rsaglMath" = self."rsagl-math";
  "rtorrentRpc" = self."rtorrent-rpc";
  "rtorrentState" = self."rtorrent-state";
  "rubyQq" = self."ruby-qq";
  "rulerCore" = self."ruler-core";
  "s3Signer" = self."s3-signer";
  "safeAccess" = self."safe-access";
  "safeFailureCme" = self."safe-failure-cme";
  "safeFailure" = self."safe-failure";
  "safeFreeze" = self."safe-freeze";
  "safeGlobals" = self."safe-globals";
  "safeLazyIo" = self."safe-lazy-io";
  "safePlugins" = self."safe-plugins";
  "saferFileHandlesBytestring" = self."safer-file-handles-bytestring";
  "saferFileHandles" = self."safer-file-handles";
  "saferFileHandlesText" = self."safer-file-handles-text";
  "saiShapeSyb" = self."sai-shape-syb";
  "salviaDemo" = self."salvia-demo";
  "salviaExtras" = self."salvia-extras";
  "salviaProtocol" = self."salvia-protocol";
  "salviaSessions" = self."salvia-sessions";
  "salviaWebsocket" = self."salvia-websocket";
  "sampleFrameNp" = self."sample-frame-np";
  "sampleFrame" = self."sample-frame";
  "samtoolsConduit" = self."samtools-conduit";
  "samtoolsEnumerator" = self."samtools-enumerator";
  "samtoolsIteratee" = self."samtools-iteratee";
  "satchmoBackends" = self."satchmo-backends";
  "satchmoExamples" = self."satchmo-examples";
  "satchmoFunsat" = self."satchmo-funsat";
  "satchmoMinisat" = self."satchmo-minisat";
  "satMicroHs" = self."sat-micro-hs";
  "sc3Rdu" = self."sc3-rdu";
  "scalableServer" = self."scalable-server";
  "scanVectorMachine" = self."scan-vector-machine";
  "scholdocCiteproc" = self."scholdoc-citeproc";
  "scholdocTexmath" = self."scholdoc-texmath";
  "scholdocTypes" = self."scholdoc-types";
  "scienceConstantsDimensional" = self."science-constants-dimensional";
  "scienceConstants" = self."science-constants";
  "scionBrowser" = self."scion-browser";
  "sciRatio" = self."sci-ratio";
  "scopeCairo" = self."scope-cairo";
  "scottyBindingPlay" = self."scotty-binding-play";
  "scottyBlaze" = self."scotty-blaze";
  "scottyCookie" = self."scotty-cookie";
  "scottyFay" = self."scotty-fay";
  "scottyHastache" = self."scotty-hastache";
  "scottySession" = self."scotty-session";
  "scottyTls" = self."scotty-tls";
  "scpStreams" = self."scp-streams";
  "scrabbleBot" = self."scrabble-bot";
  "scytherProof" = self."scyther-proof";
  "sdeSolver" = self."sde-solver";
  "sdl2Image" = self."sdl2-image";
  "SDL2Ttf" = self."SDL2-ttf";
  "SDLGfx" = self."SDL-gfx";
  "SDLImage" = self."SDL-image";
  "SDLMixer" = self."SDL-mixer";
  "SDLMpeg" = self."SDL-mpeg";
  "SDLTtf" = self."SDL-ttf";
  "sealModule" = self."seal-module";
  "secretSanta" = self."secret-santa";
  "secretSharing" = self."secret-sharing";
  "secureSockets" = self."secure-sockets";
  "seleniumServer" = self."selenium-server";
  "semaphorePlus" = self."semaphore-plus";
  "semigroupoidExtras" = self."semigroupoid-extras";
  "semigroupoidsSyntax" = self."semigroupoids-syntax";
  "semigroupsActions" = self."semigroups-actions";
  "semiIso" = self."semi-iso";
  "semiringSimple" = self."semiring-simple";
  "seqlocDatafiles" = self."seqloc-datafiles";
  "sequentCore" = self."sequent-core";
  "sequentialIndex" = self."sequential-index";
  "serialTestGenerators" = self."serial-test-generators";
  "servantClient" = self."servant-client";
  "servantDocs" = self."servant-docs";
  "servantJquery" = self."servant-jquery";
  "servantPool" = self."servant-pool";
  "servantPostgresql" = self."servant-postgresql";
  "servantResponse" = self."servant-response";
  "servantScotty" = self."servant-scotty";
  "servantServer" = self."servant-server";
  "sesHtml" = self."ses-html";
  "sesHtmlSnaplet" = self."ses-html-snaplet";
  "setCover" = self."set-cover";
  "setExtra" = self."set-extra";
  "setMonad" = self."set-monad";
  "sexpShow" = self."sexp-show";
  "sfmlAudio" = self."sfml-audio";
  "SFMLControl" = self."SFML-control";
  "shadyGen" = self."shady-gen";
  "shadyGraphics" = self."shady-graphics";
  "shakeCabalBuild" = self."shake-cabal-build";
  "shakeExtras" = self."shake-extras";
  "shakeLanguageC" = self."shake-language-c";
  "shakespeareCss" = self."shakespeare-css";
  "shakespeareI18n" = self."shakespeare-i18n";
  "shakespeareJs" = self."shakespeare-js";
  "shakespeareText" = self."shakespeare-text";
  "shapelyData" = self."shapely-data";
  "sharedBuffer" = self."shared-buffer";
  "sharedMemory" = self."shared-memory";
  "shaStreams" = self."sha-streams";
  "ShellacCompatline" = self."Shellac-compatline";
  "ShellacEditline" = self."Shellac-editline";
  "ShellacHaskeline" = self."Shellac-haskeline";
  "ShellacReadline" = self."Shellac-readline";
  "shellConduit" = self."shell-conduit";
  "shellEscape" = self."shell-escape";
  "shellPipe" = self."shell-pipe";
  "shellyExtra" = self."shelly-extra";
  "shiversCfg" = self."shivers-cfg";
  "shortenStrings" = self."shorten-strings";
  "ShuThing" = self."Shu-thing";
  "siffletLib" = self."sifflet-lib";
  "signedMultiset" = self."signed-multiset";
  "simpleActors" = self."simple-actors";
  "simpleAtom" = self."simple-atom";
  "simpleBluetooth" = self."simple-bluetooth";
  "simpleConduit" = self."simple-conduit";
  "simpleConfig" = self."simple-config";
  "simpleCss" = self."simple-css";
  "simpleCValue" = self."simple-c-value";
  "simpleEval" = self."simple-eval";
  "simpleFirewire" = self."simple-firewire";
  "simpleForm" = self."simple-form";
  "simpleGeneticAlgorithm" = self."simple-genetic-algorithm";
  "simpleIndex" = self."simple-index";
  "simpleircLens" = self."simpleirc-lens";
  "simpleLog" = self."simple-log";
  "simpleLogSyslog" = self."simple-log-syslog";
  "simpleNeuralNetworks" = self."simple-neural-networks";
  "simpleObserver" = self."simple-observer";
  "simplePascal" = self."simple-pascal";
  "simplePipe" = self."simple-pipe";
  "simplePostgresqlOrm" = self."simple-postgresql-orm";
  "simpleReflect" = self."simple-reflect";
  "simpleRope" = self."simple-rope";
  "simpleSendfile" = self."simple-sendfile";
  "simpleServer" = self."simple-server";
  "simpleSession" = self."simple-session";
  "simpleSessions" = self."simple-sessions";
  "simpleSmt" = self."simple-smt";
  "simpleSqlParser" = self."simple-sql-parser";
  "simpleStackedVm" = self."simple-stacked-vm";
  "simpleTabular" = self."simple-tabular";
  "simpleTemplates" = self."simple-templates";
  "simpleVec3" = self."simple-vec3";
  "sizedTypes" = self."sized-types";
  "sizedVector" = self."sized-vector";
  "slaveThread" = self."slave-thread";
  "sliceCppGen" = self."slice-cpp-gen";
  "slotLambda" = self."slot-lambda";
  "smallptHs" = self."smallpt-hs";
  "smtLib" = self."smt-lib";
  "smtpMail" = self."smtp-mail";
  "smtpsGmail" = self."smtps-gmail";
  "snakeGame" = self."snake-game";
  "snapAccept" = self."snap-accept";
  "snapApp" = self."snap-app";
  "snapAuthCli" = self."snap-auth-cli";
  "snapBlazeClay" = self."snap-blaze-clay";
  "snapBlaze" = self."snap-blaze";
  "snapConfigurationUtilities" = self."snap-configuration-utilities";
  "snapCore" = self."snap-core";
  "snapCors" = self."snap-cors";
  "snapElm" = self."snap-elm";
  "snapErrorCollector" = self."snap-error-collector";
  "snapExtras" = self."snap-extras";
  "snapletAcidState" = self."snaplet-acid-state";
  "snapletActionlog" = self."snaplet-actionlog";
  "snapletAmqp" = self."snaplet-amqp";
  "snapletAuthAcid" = self."snaplet-auth-acid";
  "snapletCoffee" = self."snaplet-coffee";
  "snapletCssMin" = self."snaplet-css-min";
  "snapletEnvironments" = self."snaplet-environments";
  "snapletFay" = self."snaplet-fay";
  "snapletHaxl" = self."snaplet-haxl";
  "snapletHdbc" = self."snaplet-hdbc";
  "snapletHslogger" = self."snaplet-hslogger";
  "snapletI18n" = self."snaplet-i18n";
  "snapletInfluxdb" = self."snaplet-influxdb";
  "snapletLss" = self."snaplet-lss";
  "snapletMandrill" = self."snaplet-mandrill";
  "snapletMongodbMinimalistic" = self."snaplet-mongodb-minimalistic";
  "snapletMongoDB" = self."snaplet-mongoDB";
  "snapletMysqlSimple" = self."snaplet-mysql-simple";
  "snapletOauth" = self."snaplet-oauth";
  "snapletPersistent" = self."snaplet-persistent";
  "snapletPostgresqlSimple" = self."snaplet-postgresql-simple";
  "snapletPostmark" = self."snaplet-postmark";
  "snapletRecaptcha" = self."snaplet-recaptcha";
  "snapletRedis" = self."snaplet-redis";
  "snapletRedson" = self."snaplet-redson";
  "snapletRest" = self."snaplet-rest";
  "snapletRiak" = self."snaplet-riak";
  "snapletSass" = self."snaplet-sass";
  "snapletSedna" = self."snaplet-sedna";
  "snapletSesHtml" = self."snaplet-ses-html";
  "snapletSqliteSimple" = self."snaplet-sqlite-simple";
  "snapletStripe" = self."snaplet-stripe";
  "snapletTasks" = self."snaplet-tasks";
  "snapletTypedSessions" = self."snaplet-typed-sessions";
  "snapLoaderDynamic" = self."snap-loader-dynamic";
  "snapLoaderStatic" = self."snap-loader-static";
  "snapPredicates" = self."snap-predicates";
  "snappyFraming" = self."snappy-framing";
  "snappyIteratee" = self."snappy-iteratee";
  "snapServer" = self."snap-server";
  "snapTesting" = self."snap-testing";
  "snapUtils" = self."snap-utils";
  "snapWebRoutes" = self."snap-web-routes";
  "sndfileEnumerators" = self."sndfile-enumerators";
  "snippetExtractor" = self."snippet-extractor";
  "snowWhite" = self."snow-white";
  "soapOpenssl" = self."soap-openssl";
  "soapTls" = self."soap-tls";
  "socketActivation" = self."socket-activation";
  "socketIo" = self."socket-io";
  "sonicVisualiser" = self."sonic-visualiser";
  "sortByPinyin" = self."sort-by-pinyin";
  "sourceCodeServer" = self."source-code-server";
  "sparseLinAlg" = self."sparse-lin-alg";
  "spatialMath" = self."spatial-math";
  "specialFunctors" = self."special-functors";
  "specializeTh" = self."specialize-th";
  "specialKeys" = self."special-keys";
  "speculationTransformers" = self."speculation-transformers";
  "spellingSuggest" = self."spelling-suggest";
  "sphinxCli" = self."sphinx-cli";
  "splitChannel" = self."split-channel";
  "splitRecord" = self."split-record";
  "splitTchan" = self."split-tchan";
  "SpockAuth" = self."Spock-auth";
  "SpockWorker" = self."Spock-worker";
  "sqliteSimple" = self."sqlite-simple";
  "sqlSimpleMysql" = self."sql-simple-mysql";
  "sqlSimplePool" = self."sql-simple-pool";
  "sqlSimplePostgresql" = self."sql-simple-postgresql";
  "sqlSimple" = self."sql-simple";
  "sqlSimpleSqlite" = self."sql-simple-sqlite";
  "sqlvalueList" = self."sqlvalue-list";
  "sqlWords" = self."sql-words";
  "stableMaps" = self."stable-maps";
  "stableMemo" = self."stable-memo";
  "stableTree" = self."stable-tree";
  "stackPrism" = self."stack-prism";
  "standaloneHaddock" = self."standalone-haddock";
  "starToStarContra" = self."star-to-star-contra";
  "starToStar" = self."star-to-star";
  "statefulMtl" = self."stateful-mtl";
  "statePlus" = self."state-plus";
  "stateRecord" = self."state-record";
  "StateVarTransformer" = self."StateVar-transformer";
  "staticHash" = self."static-hash";
  "staticResources" = self."static-resources";
  "statisticsDirichlet" = self."statistics-dirichlet";
  "statisticsFusion" = self."statistics-fusion";
  "statisticsLinreg" = self."statistics-linreg";
  "stbImage" = self."stb-image";
  "stbTruetype" = self."stb-truetype";
  "stmChannelize" = self."stm-channelize";
  "stmChans" = self."stm-chans";
  "stmChunkedQueues" = self."stm-chunked-queues";
  "stmConduit" = self."stm-conduit";
  "stmContainers" = self."stm-containers";
  "stmDelay" = self."stm-delay";
  "stmFirehose" = self."stm-firehose";
  "stmIoHooks" = self."stm-io-hooks";
  "stmLifted" = self."stm-lifted";
  "stmLinkedlist" = self."stm-linkedlist";
  "stmOrelseIo" = self."stm-orelse-io";
  "stmPromise" = self."stm-promise";
  "stmQueueExtras" = self."stm-queue-extras";
  "stmSbchan" = self."stm-sbchan";
  "stmSplit" = self."stm-split";
  "stmStats" = self."stm-stats";
  "stmTlist" = self."stm-tlist";
  "stompConduit" = self."stomp-conduit";
  "stompPatterns" = self."stomp-patterns";
  "stompQueue" = self."stomp-queue";
  "storableComplex" = self."storable-complex";
  "storableEndian" = self."storable-endian";
  "storableRecord" = self."storable-record";
  "storableStaticArray" = self."storable-static-array";
  "storableTuple" = self."storable-tuple";
  "storablevectorCarray" = self."storablevector-carray";
  "storablevectorStreamfusion" = self."storablevector-streamfusion";
  "StrafunskiATermLib" = self."Strafunski-ATermLib";
  "StrafunskiSdf2Haskell" = self."Strafunski-Sdf2Haskell";
  "StrafunskiStrategyLib" = self."Strafunski-StrategyLib";
  "streamFusion" = self."stream-fusion";
  "streamingCommons" = self."streaming-commons";
  "streamMonad" = self."stream-monad";
  "strictBaseTypes" = self."strict-base-types";
  "strictConcurrency" = self."strict-concurrency";
  "strictGhcPlugin" = self."strict-ghc-plugin";
  "strictIdentity" = self."strict-identity";
  "strictIo" = self."strict-io";
  "stringClass" = self."string-class";
  "stringCombinators" = self."string-combinators";
  "stringConversions" = self."string-conversions";
  "stringConvert" = self."string-convert";
  "stringQq" = self."string-qq";
  "stringQuote" = self."string-quote";
  "stringSimilarity" = self."string-similarity";
  "stringtableAtom" = self."stringtable-atom";
  "stripeHaskell" = self."stripe-haskell";
  "structuralInduction" = self."structural-induction";
  "structuredHaskellMode" = self."structured-haskell-mode";
  "structuredMongoDB" = self."structured-mongoDB";
  "stylishHaskell" = self."stylish-haskell";
  "sunroofCompiler" = self."sunroof-compiler";
  "sunroofExamples" = self."sunroof-examples";
  "sunroofServer" = self."sunroof-server";
  "supercolliderHt" = self."supercollider-ht";
  "supercolliderMidi" = self."supercollider-midi";
  "svmLightUtils" = self."svm-light-utils";
  "svmSimple" = self."svm-simple";
  "swiftLda" = self."swift-lda";
  "sybExtras" = self."syb-extras";
  "sybWithClassInstancesText" = self."syb-with-class-instances-text";
  "sybWithClass" = self."syb-with-class";
  "symPlot" = self."sym-plot";
  "synchronousChannels" = self."synchronous-channels";
  "syntaxAttoparsec" = self."syntax-attoparsec";
  "syntaxExampleJson" = self."syntax-example-json";
  "syntaxExample" = self."syntax-example";
  "syntaxPretty" = self."syntax-pretty";
  "syntaxPrinter" = self."syntax-printer";
  "syntaxTreesForkBairyn" = self."syntax-trees-fork-bairyn";
  "syntaxTrees" = self."syntax-trees";
  "synthesizerAlsa" = self."synthesizer-alsa";
  "synthesizerCore" = self."synthesizer-core";
  "synthesizerDimensional" = self."synthesizer-dimensional";
  "synthesizerInference" = self."synthesizer-inference";
  "synthesizerLlvm" = self."synthesizer-llvm";
  "synthesizerMidi" = self."synthesizer-midi";
  "sysAuthSmbclient" = self."sys-auth-smbclient";
  "systemArgv0" = self."system-argv0";
  "systemCanonicalpath" = self."system-canonicalpath";
  "systemCommand" = self."system-command";
  "systemFileio" = self."system-fileio";
  "systemFilepath" = self."system-filepath";
  "systemGpio" = self."system-gpio";
  "systemInotify" = self."system-inotify";
  "systemLifted" = self."system-lifted";
  "systemPosixRedirect" = self."system-posix-redirect";
  "systemRandomEffect" = self."system-random-effect";
  "systemTimeMonotonic" = self."system-time-monotonic";
  "systemUtil" = self."system-util";
  "systemUuid" = self."system-uuid";
  "tagBits" = self."tag-bits";
  "taggedBinary" = self."tagged-binary";
  "taggedExceptionCore" = self."tagged-exception-core";
  "taggedList" = self."tagged-list";
  "taggedTh" = self."tagged-th";
  "taggedTransformer" = self."tagged-transformer";
  "taggyLens" = self."taggy-lens";
  "taglibApi" = self."taglib-api";
  "tagsetPositional" = self."tagset-positional";
  "tagsoupHt" = self."tagsoup-ht";
  "tagsoupParsec" = self."tagsoup-parsec";
  "tagstreamConduit" = self."tagstream-conduit";
  "tagStream" = self."tag-stream";
  "takusenOracle" = self."takusen-oracle";
  "tamarinProver" = self."tamarin-prover";
  "tamarinProverTerm" = self."tamarin-prover-term";
  "tamarinProverTheory" = self."tamarin-prover-theory";
  "tamarinProverUtils" = self."tamarin-prover-utils";
  "tastyAntXml" = self."tasty-ant-xml";
  "tastyGolden" = self."tasty-golden";
  "tastyHspec" = self."tasty-hspec";
  "tastyHtml" = self."tasty-html";
  "tastyHunitAdapter" = self."tasty-hunit-adapter";
  "tastyHunit" = self."tasty-hunit";
  "tastyIntegrate" = self."tasty-integrate";
  "tastyProgram" = self."tasty-program";
  "tastyQuickcheck" = self."tasty-quickcheck";
  "tastyRerun" = self."tasty-rerun";
  "tastySmallcheck" = self."tasty-smallcheck";
  "tastyTh" = self."tasty-th";
  "tcacheAWS" = self."tcache-AWS";
  "tddUtil" = self."tdd-util";
  "templateDefault" = self."template-default";
  "templateHaskell" = self."template-haskell";
  "templateHsml" = self."template-hsml";
  "temporalCsound" = self."temporal-csound";
  "temporalMedia" = self."temporal-media";
  "temporalMusicNotationDemo" = self."temporal-music-notation-demo";
  "temporalMusicNotation" = self."temporal-music-notation";
  "temporalMusicNotationWestern" = self."temporal-music-notation-western";
  "temporaryRc" = self."temporary-rc";
  "terminalProgressBar" = self."terminal-progress-bar";
  "terminalSize" = self."terminal-size";
  "terminationCombinators" = self."termination-combinators";
  "terminfoHs" = self."terminfo-hs";
  "termRewriting" = self."term-rewriting";
  "testFrameworkDoctest" = self."test-framework-doctest";
  "testFrameworkGolden" = self."test-framework-golden";
  "testFrameworkHunit" = self."test-framework-hunit";
  "testFrameworkProgram" = self."test-framework-program";
  "testFrameworkQuickcheck2" = self."test-framework-quickcheck2";
  "testFrameworkQuickcheck" = self."test-framework-quickcheck";
  "testFrameworkSandbox" = self."test-framework-sandbox";
  "testFramework" = self."test-framework";
  "testFrameworkSkip" = self."test-framework-skip";
  "testFrameworkSmallcheck" = self."test-framework-smallcheck";
  "testFrameworkTestingFeat" = self."test-framework-testing-feat";
  "testFrameworkThPrime" = self."test-framework-th-prime";
  "testFrameworkTh" = self."test-framework-th";
  "testingFeat" = self."testing-feat";
  "testPkg" = self."test-pkg";
  "testSandboxHunit" = self."test-sandbox-hunit";
  "testSandboxQuickcheck" = self."test-sandbox-quickcheck";
  "testSandbox" = self."test-sandbox";
  "testShouldbe" = self."test-shouldbe";
  "testSimple" = self."test-simple";
  "textBinary" = self."text-binary";
  "textFormat" = self."text-format";
  "textFormatSimple" = self."text-format-simple";
  "textIcu" = self."text-icu";
  "textIcuTranslit" = self."text-icu-translit";
  "textJsonQq" = self."text-json-qq";
  "textLatin1" = self."text-latin1";
  "textLdap" = self."text-ldap";
  "textLocaleEncoding" = self."text-locale-encoding";
  "textManipulate" = self."text-manipulate";
  "textNormal" = self."text-normal";
  "textPrinter" = self."text-printer";
  "textRegisterMachine" = self."text-register-machine";
  "textShow" = self."text-show";
  "textStreamDecode" = self."text-stream-decode";
  "textUtf7" = self."text-utf7";
  "textXmlGeneric" = self."text-xml-generic";
  "textXmlQq" = self."text-xml-qq";
  "tfpTh" = self."tfp-th";
  "tfRandom" = self."tf-random";
  "thAlpha" = self."th-alpha";
  "thBuild" = self."th-build";
  "thDesugar" = self."th-desugar";
  "theoremquestClient" = self."theoremquest-client";
  "thetaFunctions" = self."theta-functions";
  "thExpandSyns" = self."th-expand-syns";
  "thExtras" = self."th-extras";
  "thFold" = self."th-fold";
  "thInstanceReification" = self."th-instance-reification";
  "thInstances" = self."th-instances";
  "thKinds" = self."th-kinds";
  "thLiftInstances" = self."th-lift-instances";
  "thLift" = self."th-lift";
  "thOrphans" = self."th-orphans";
  "thPrintf" = self."th-printf";
  "threadLocalStorage" = self."thread-local-storage";
  "threadsPool" = self."threads-pool";
  "threepennyGui" = self."threepenny-gui";
  "thReifyMany" = self."th-reify-many";
  "thSccs" = self."th-sccs";
  "thumbnailPlus" = self."thumbnail-plus";
  "ticTacToe" = self."tic-tac-toe";
  "tidalVis" = self."tidal-vis";
  "tieKnot" = self."tie-knot";
  "timeCompat" = self."time-compat";
  "timeExtras" = self."time-extras";
  "timeExts" = self."time-exts";
  "timeHttp" = self."time-http";
  "timeIoAccess" = self."time-io-access";
  "timeLens" = self."time-lens";
  "timeoutControl" = self."timeout-control";
  "timeoutWithResults" = self."timeout-with-results";
  "timePatterns" = self."time-patterns";
  "timeRecurrence" = self."time-recurrence";
  "timersUpdatable" = self."timers-updatable";
  "timeSeries" = self."time-series";
  "timestampSubprocessLines" = self."timestamp-subprocess-lines";
  "timeUnits" = self."time-units";
  "timeW3c" = self."time-w3c";
  "timezoneOlson" = self."timezone-olson";
  "timezoneSeries" = self."timezone-series";
  "timingConvenience" = self."timing-convenience";
  "tlsDebug" = self."tls-debug";
  "tlsExtra" = self."tls-extra";
  "toHaskell" = self."to-haskell";
  "tokenBucket" = self."token-bucket";
  "tokyocabinetHaskell" = self."tokyocabinet-haskell";
  "tokyotyrantHaskell" = self."tokyotyrant-haskell";
  "tomatoRubatoOpenal" = self."tomato-rubato-openal";
  "toStringClass" = self."to-string-class";
  "toStringInstances" = self."to-string-instances";
  "totalMap" = self."total-map";
  "traceCall" = self."trace-call";
  "traceFunctionCall" = self."trace-function-call";
  "transactionalEvents" = self."transactional-events";
  "transformersAbort" = self."transformers-abort";
  "transformersBase" = self."transformers-base";
  "transformersCompat" = self."transformers-compat";
  "transformersCompose" = self."transformers-compose";
  "transformersConvert" = self."transformers-convert";
  "transformersFree" = self."transformers-free";
  "transformersRunnable" = self."transformers-runnable";
  "transformersSupply" = self."transformers-supply";
  "translatableIntset" = self."translatable-intset";
  "traverseWithClass" = self."traverse-with-class";
  "treemapHtml" = self."treemap-html";
  "treemapHtmlTools" = self."treemap-html-tools";
  "treeMonad" = self."tree-monad";
  "treeView" = self."tree-view";
  "tremulousQuery" = self."tremulous-query";
  "trivialConstraint" = self."trivial-constraint";
  "trueName" = self."true-name";
  "tsessionHappstack" = self."tsession-happstack";
  "tspViz" = self."tsp-viz";
  "tupFunctor" = self."tup-functor";
  "tupleGen" = self."tuple-gen";
  "tupleHlist" = self."tuple-hlist";
  "tupleLenses" = self."tuple-lenses";
  "tupleMorph" = self."tuple-morph";
  "tuplesHomogenousH98" = self."tuples-homogenous-h98";
  "tupleTh" = self."tuple-th";
  "turingMusic" = self."turing-music";
  "twentefpEventloopGraphics" = self."twentefp-eventloop-graphics";
  "twentefpGraphs" = self."twentefp-graphs";
  "twentefpNumber" = self."twentefp-number";
  "twentefpRosetree" = self."twentefp-rosetree";
  "twentefpTrees" = self."twentefp-trees";
  "twentefpWebsockets" = self."twentefp-websockets";
  "twilightStm" = self."twilight-stm";
  "twitterConduit" = self."twitter-conduit";
  "twitterEnumerator" = self."twitter-enumerator";
  "twitterFeed" = self."twitter-feed";
  "twitterTypesLens" = self."twitter-types-lens";
  "twitterTypes" = self."twitter-types";
  "txtSushi" = self."txt-sushi";
  "typeableTh" = self."typeable-th";
  "typeAligned" = self."type-aligned";
  "typeBooleans" = self."type-booleans";
  "typeCereal" = self."type-cereal";
  "typeDigits" = self."type-digits";
  "typeEq" = self."type-eq";
  "typeEqualityCheck" = self."type-equality-check";
  "typeEquality" = self."type-equality";
  "typeFunctions" = self."type-functions";
  "typeHint" = self."type-hint";
  "typeInt" = self."type-int";
  "typeLevelBst" = self."type-level-bst";
  "typeLevelNaturalNumberInduction" = self."type-level-natural-number-induction";
  "typeLevelNaturalNumberOperations" = self."type-level-natural-number-operations";
  "typeLevelNaturalNumber" = self."type-level-natural-number";
  "typeLevelNumbers" = self."type-level-numbers";
  "typeLevel" = self."type-level";
  "typeLevelSets" = self."type-level-sets";
  "typelevelTensor" = self."typelevel-tensor";
  "typeLevelTf" = self."type-level-tf";
  "typeList" = self."type-list";
  "typeNatural" = self."type-natural";
  "typeOrd" = self."type-ord";
  "typeOrdSpineCereal" = self."type-ord-spine-cereal";
  "typePrelude" = self."type-prelude";
  "typesafeEndian" = self."typesafe-endian";
  "typescriptDocs" = self."typescript-docs";
  "typeSettheory" = self."type-settheory";
  "typeSpine" = self."type-spine";
  "typeStructure" = self."type-structure";
  "typeSubTh" = self."type-sub-th";
  "typeUnary" = self."type-unary";
  "typographyGeometry" = self."typography-geometry";
  "uaParser" = self."ua-parser";
  "udbusModel" = self."udbus-model";
  "uhcLight" = self."uhc-light";
  "uhcUtil" = self."uhc-util";
  "uiCommand" = self."ui-command";
  "unagiChan" = self."unagi-chan";
  "unagiStreams" = self."unagi-streams";
  "unambCustom" = self."unamb-custom";
  "unboundedDelays" = self."unbounded-delays";
  "unboundedDelaysUnits" = self."unbounded-delays-units";
  "unboundGenerics" = self."unbound-generics";
  "unboxedContainers" = self."unboxed-containers";
  "unicodeNames" = self."unicode-names";
  "unicodeNormalization" = self."unicode-normalization";
  "unicodePrelude" = self."unicode-prelude";
  "unicodeProperties" = self."unicode-properties";
  "unicodeSymbols" = self."unicode-symbols";
  "uniEvents" = self."uni-events";
  "unificationFd" = self."unification-fd";
  "uniformPair" = self."uniform-pair";
  "uniGraphs" = self."uni-graphs";
  "uniHtk" = self."uni-htk";
  "unionFindArray" = self."union-find-array";
  "unionFind" = self."union-find";
  "unionMap" = self."union-map";
  "uniPosixutil" = self."uni-posixutil";
  "uniqueLogic" = self."unique-logic";
  "uniqueLogicTf" = self."unique-logic-tf";
  "uniReactor" = self."uni-reactor";
  "unitsDefs" = self."units-defs";
  "unitsParser" = self."units-parser";
  "uniUDrawGraph" = self."uni-uDrawGraph";
  "uniUtil" = self."uni-util";
  "universalBinary" = self."universal-binary";
  "universeBase" = self."universe-base";
  "universeInstancesBase" = self."universe-instances-base";
  "universeInstancesExtended" = self."universe-instances-extended";
  "universeInstancesTrans" = self."universe-instances-trans";
  "universeReverseInstances" = self."universe-reverse-instances";
  "universeTh" = self."universe-th";
  "unixBytestring" = self."unix-bytestring";
  "unixCompat" = self."unix-compat";
  "unixHandle" = self."unix-handle";
  "unixIoExtra" = self."unix-io-extra";
  "unixMemory" = self."unix-memory";
  "unixProcessConduit" = self."unix-process-conduit";
  "unixPtyLight" = self."unix-pty-light";
  "unixTime" = self."unix-time";
  "UnixutilsShadow" = self."Unixutils-shadow";
  "unmHip" = self."unm-hip";
  "unorderedContainersRematch" = self."unordered-containers-rematch";
  "unorderedContainers" = self."unordered-containers";
  "unpackFuncs" = self."unpack-funcs";
  "unrollGhcPlugin" = self."unroll-ghc-plugin";
  "unsafePromises" = self."unsafe-promises";
  "unusablePkg" = self."unusable-pkg";
  "uriConduit" = self."uri-conduit";
  "uriEncode" = self."uri-encode";
  "uriEnumeratorFile" = self."uri-enumerator-file";
  "uriEnumerator" = self."uri-enumerator";
  "uriTemplater" = self."uri-templater";
  "uriTemplate" = self."uri-template";
  "urldispHappstack" = self."urldisp-happstack";
  "urlGeneric" = self."url-generic";
  "usbEnumerator" = self."usb-enumerator";
  "usbIdDatabase" = self."usb-id-database";
  "usbIteratee" = self."usb-iteratee";
  "usbSafe" = self."usb-safe";
  "utf8Env" = self."utf8-env";
  "utf8Light" = self."utf8-light";
  "utf8Prelude" = self."utf8-prelude";
  "utf8String" = self."utf8-string";
  "utilityHt" = self."utility-ht";
  "uuagcBootstrap" = self."uuagc-bootstrap";
  "uuagcCabal" = self."uuagc-cabal";
  "uuagcDiagrams" = self."uuagc-diagrams";
  "uuCcoExamples" = self."uu-cco-examples";
  "uuCcoHutParsing" = self."uu-cco-hut-parsing";
  "uuCco" = self."uu-cco";
  "uuCcoUuParsinglib" = self."uu-cco-uu-parsinglib";
  "uuidAeson" = self."uuid-aeson";
  "uuidLe" = self."uuid-le";
  "uuidQuasi" = self."uuid-quasi";
  "uuInterleaved" = self."uu-interleaved";
  "uuOptions" = self."uu-options";
  "uuParsinglib" = self."uu-parsinglib";
  "uuTc" = self."uu-tc";
  "uvectorAlgorithms" = self."uvector-algorithms";
  "uzblWithSource" = self."uzbl-with-source";
  "v4l2Examples" = self."v4l2-examples";
  "vacuumCairo" = self."vacuum-cairo";
  "vacuumGraphviz" = self."vacuum-graphviz";
  "vacuumOpengl" = self."vacuum-opengl";
  "vacuumUbigraph" = self."vacuum-ubigraph";
  "validNames" = self."valid-names";
  "valueSupply" = self."value-supply";
  "variablePrecision" = self."variable-precision";
  "vcsRevision" = self."vcs-revision";
  "VecBoolean" = self."Vec-Boolean";
  "VecOpenGLRaw" = self."Vec-OpenGLRaw";
  "vectFloatingAccelerate" = self."vect-floating-accelerate";
  "vectFloating" = self."vect-floating";
  "vectOpengl" = self."vect-opengl";
  "vectorAlgorithms" = self."vector-algorithms";
  "vectorBinaryInstances" = self."vector-binary-instances";
  "vectorBinary" = self."vector-binary";
  "vectorBuffer" = self."vector-buffer";
  "vectorBytestring" = self."vector-bytestring";
  "vectorClock" = self."vector-clock";
  "vectorConduit" = self."vector-conduit";
  "vectorFftw" = self."vector-fftw";
  "vectorFunctorlazy" = self."vector-functorlazy";
  "vectorHeterogenous" = self."vector-heterogenous";
  "vectorInstancesCollections" = self."vector-instances-collections";
  "vectorInstances" = self."vector-instances";
  "vectorMmap" = self."vector-mmap";
  "vectorRandom" = self."vector-random";
  "vectorReadInstances" = self."vector-read-instances";
  "vectorSpaceMap" = self."vector-space-map";
  "vectorSpaceOpengl" = self."vector-space-opengl";
  "vectorSpacePoints" = self."vector-space-points";
  "vectorSpace" = self."vector-space";
  "vectorStatic" = self."vector-static";
  "vectorStrategies" = self."vector-strategies";
  "vectorThUnbox" = self."vector-th-unbox";
  "VecTransform" = self."Vec-Transform";
  "ViennaRNABindings" = self."ViennaRNA-bindings";
  "vintageBasic" = self."vintage-basic";
  "vinylGl" = self."vinyl-gl";
  "vinylJson" = self."vinyl-json";
  "visualGraphrewrite" = self."visual-graphrewrite";
  "visualProf" = self."visual-prof";
  "vkAwsRoute53" = self."vk-aws-route53";
  "vkPosixPty" = self."vk-posix-pty";
  "vowpalUtils" = self."vowpal-utils";
  "vtyExamples" = self."vty-examples";
  "vtyMenu" = self."vty-menu";
  "vtyUiExtras" = self."vty-ui-extras";
  "vtyUi" = self."vty-ui";
  "waiAppFileCgi" = self."wai-app-file-cgi";
  "waiAppStatic" = self."wai-app-static";
  "waiConduit" = self."wai-conduit";
  "waiCors" = self."wai-cors";
  "waiDigestiveFunctors" = self."wai-digestive-functors";
  "waiDispatch" = self."wai-dispatch";
  "waiEventsource" = self."wai-eventsource";
  "waiExtra" = self."wai-extra";
  "waiFrontendMonadcgi" = self."wai-frontend-monadcgi";
  "waiGraceful" = self."wai-graceful";
  "waiHandlerDevel" = self."wai-handler-devel";
  "waiHandlerFastcgi" = self."wai-handler-fastcgi";
  "waiHandlerLaunch" = self."wai-handler-launch";
  "waiHandlerScgi" = self."wai-handler-scgi";
  "waiHandlerSnap" = self."wai-handler-snap";
  "waiHandlerWebkit" = self."wai-handler-webkit";
  "waiHastache" = self."wai-hastache";
  "waiLite" = self."wai-lite";
  "waiLoggerPrefork" = self."wai-logger-prefork";
  "waiLogger" = self."wai-logger";
  "waiMiddlewareCacheRedis" = self."wai-middleware-cache-redis";
  "waiMiddlewareCache" = self."wai-middleware-cache";
  "waiMiddlewareCatch" = self."wai-middleware-catch";
  "waiMiddlewareEtag" = self."wai-middleware-etag";
  "waiMiddlewareHeaders" = self."wai-middleware-headers";
  "waiMiddlewareRoute" = self."wai-middleware-route";
  "waiMiddlewareStatic" = self."wai-middleware-static";
  "waiPredicates" = self."wai-predicates";
  "waiResponsible" = self."wai-responsible";
  "waiRouter" = self."wai-router";
  "waiRoute" = self."wai-route";
  "waiRoutes" = self."wai-routes";
  "waiRouting" = self."wai-routing";
  "waiSessionClientsession" = self."wai-session-clientsession";
  "waiSession" = self."wai-session";
  "waiSessionTokyocabinet" = self."wai-session-tokyocabinet";
  "waiStaticCache" = self."wai-static-cache";
  "waiStaticPages" = self."wai-static-pages";
  "waiTest" = self."wai-test";
  "waitHandle" = self."wait-handle";
  "waiThrottler" = self."wai-throttler";
  "waiUtil" = self."wai-util";
  "waiWebsockets" = self."wai-websockets";
  "warpDynamic" = self."warp-dynamic";
  "warpStatic" = self."warp-static";
  "warpTls" = self."warp-tls";
  "warpTlsUid" = self."warp-tls-uid";
  "weatherApi" = self."weather-api";
  "WebBitsHtml" = self."WebBits-Html";
  "WebBitsMultiplate" = self."WebBits-multiplate";
  "webBrowserInHaskell" = self."web-browser-in-haskell";
  "webCss" = self."web-css";
  "webdriverAngular" = self."webdriver-angular";
  "webdriverSnoy" = self."webdriver-snoy";
  "webEncodings" = self."web-encodings";
  "webFpco" = self."web-fpco";
  "webkitgtk3Javascriptcore" = self."webkitgtk3-javascriptcore";
  "webkitJavascriptcore" = self."webkit-javascriptcore";
  "webMongrel2" = self."web-mongrel2";
  "webPage" = self."web-page";
  "webPlugins" = self."web-plugins";
  "webRoutesBoomerang" = self."web-routes-boomerang";
  "webRoutesHappstack" = self."web-routes-happstack";
  "webRoutesHsp" = self."web-routes-hsp";
  "webRoutesMtl" = self."web-routes-mtl";
  "webRoutesQuasi" = self."web-routes-quasi";
  "webRoutesRegular" = self."web-routes-regular";
  "webRoutes" = self."web-routes";
  "webRoutesTh" = self."web-routes-th";
  "webRoutesTransformers" = self."web-routes-transformers";
  "webRoutesWai" = self."web-routes-wai";
  "websocketsSnap" = self."websockets-snap";
  "weddingAnnouncement" = self."wedding-announcement";
  "weightedRegexp" = self."weighted-regexp";
  "weightedSearch" = self."weighted-search";
  "whebMongo" = self."wheb-mongo";
  "whebRedis" = self."wheb-redis";
  "whebStrapped" = self."wheb-strapped";
  "whileLangParser" = self."while-lang-parser";
  "Win32DhcpServer" = self."Win32-dhcp-server";
  "Win32Errors" = self."Win32-errors";
  "Win32Extras" = self."Win32-extras";
  "Win32JunctionPoint" = self."Win32-junction-point";
  "Win32Notify" = self."Win32-notify";
  "Win32Services" = self."Win32-services";
  "Win32ServicesWrapper" = self."Win32-services-wrapper";
  "winHpPath" = self."win-hp-path";
  "wlPprintExtras" = self."wl-pprint-extras";
  "wlPprint" = self."wl-pprint";
  "wlPprintTerminfo" = self."wl-pprint-terminfo";
  "wlPprintText" = self."wl-pprint-text";
  "WordNetGhc74" = self."WordNet-ghc74";
  "wordTrie" = self."word-trie";
  "wpArchivebot" = self."wp-archivebot";
  "wtkGtk" = self."wtk-gtk";
  "wumpusBasic" = self."wumpus-basic";
  "wumpusCore" = self."wumpus-core";
  "wumpusDrawing" = self."wumpus-drawing";
  "wumpusMicroprint" = self."wumpus-microprint";
  "wumpusTree" = self."wumpus-tree";
  "X11Extras" = self."X11-extras";
  "X11Rm" = self."X11-rm";
  "X11Xdamage" = self."X11-xdamage";
  "X11Xfixes" = self."X11-xfixes";
  "X11Xft" = self."X11-xft";
  "x11Xim" = self."x11-xim";
  "x11Xinput" = self."x11-xinput";
  "X11Xshape" = self."X11-xshape";
  "x509Store" = self."x509-store";
  "x509System" = self."x509-system";
  "x509Util" = self."x509-util";
  "x509Validation" = self."x509-validation";
  "xcbTypes" = self."xcb-types";
  "xchatPlugin" = self."xchat-plugin";
  "xdgBasedir" = self."xdg-basedir";
  "xdgUserdirs" = self."xdg-userdirs";
  "xDsp" = self."x-dsp";
  "xhaskellLibrary" = self."xhaskell-library";
  "xhtmlCombinators" = self."xhtml-combinators";
  "xilinxLava" = self."xilinx-lava";
  "xingApi" = self."xing-api";
  "xlsxTemplater" = self."xlsx-templater";
  "xmlBasic" = self."xml-basic";
  "xmlCatalog" = self."xml-catalog";
  "xmlConduit" = self."xml-conduit";
  "xmlConduitWriter" = self."xml-conduit-writer";
  "xmlEnumeratorCombinators" = self."xml-enumerator-combinators";
  "xmlEnumerator" = self."xml-enumerator";
  "xmlHamlet" = self."xml-hamlet";
  "xmlHelpers" = self."xml-helpers";
  "xmlHtmlConduitLens" = self."xml-html-conduit-lens";
  "xmlLens" = self."xml-lens";
  "xmlMonad" = self."xml-monad";
  "xmlParsec" = self."xml-parsec";
  "xmlPicklers" = self."xml-picklers";
  "xmlPipe" = self."xml-pipe";
  "xmlPrettify" = self."xml-prettify";
  "xmlPush" = self."xml-push";
  "xmlToJsonFast" = self."xml-to-json-fast";
  "xmlToJson" = self."xml-to-json";
  "xmlTypes" = self."xml-types";
  "xmms2ClientGlib" = self."xmms2-client-glib";
  "xmms2Client" = self."xmms2-client";
  "xmonadBluetilebranch" = self."xmonad-bluetilebranch";
  "xmonadContribBluetilebranch" = self."xmonad-contrib-bluetilebranch";
  "xmonadContribGpl" = self."xmonad-contrib-gpl";
  "xmonadContrib" = self."xmonad-contrib";
  "xmonadEval" = self."xmonad-eval";
  "xmonadExtras" = self."xmonad-extras";
  "xmonadScreenshot" = self."xmonad-screenshot";
  "xmonadUtils" = self."xmonad-utils";
  "xournalBuilder" = self."xournal-builder";
  "xournalConvert" = self."xournal-convert";
  "xournalParser" = self."xournal-parser";
  "xournalRender" = self."xournal-render";
  "xournalTypes" = self."xournal-types";
  "xssSanitize" = self."xss-sanitize";
  "yahooFinanceConduit" = self."yahoo-finance-conduit";
  "yahooWebSearch" = self."yahoo-web-search";
  "yajlEnumerator" = self."yajl-enumerator";
  "yamlConfig" = self."yaml-config";
  "yamlLightLens" = self."yaml-light-lens";
  "yamlLight" = self."yaml-light";
  "yamlRpcScotty" = self."yaml-rpc-scotty";
  "yamlRpc" = self."yaml-rpc";
  "yamlRpcSnap" = self."yaml-rpc-snap";
  "yampaCanvas" = self."yampa-canvas";
  "yampaGlfw" = self."yampa-glfw";
  "yampaGlut" = self."yampa-glut";
  "yarrImageIo" = self."yarr-image-io";
  "yesodAngular" = self."yesod-angular";
  "yesodAuthAccount" = self."yesod-auth-account";
  "yesodAuthBcrypt" = self."yesod-auth-bcrypt";
  "yesodAuthDeskcom" = self."yesod-auth-deskcom";
  "yesodAuthFb" = self."yesod-auth-fb";
  "yesodAuthHashdb" = self."yesod-auth-hashdb";
  "yesodAuthKerberos" = self."yesod-auth-kerberos";
  "yesodAuthLdap" = self."yesod-auth-ldap";
  "yesodAuthOauth2" = self."yesod-auth-oauth2";
  "yesodAuthOauth" = self."yesod-auth-oauth";
  "yesodAuthPam" = self."yesod-auth-pam";
  "yesodAuth" = self."yesod-auth";
  "yesodAuthSmbclient" = self."yesod-auth-smbclient";
  "yesodAuthZendesk" = self."yesod-auth-zendesk";
  "yesodBin" = self."yesod-bin";
  "yesodComments" = self."yesod-comments";
  "yesodContinuations" = self."yesod-continuations";
  "yesodCore" = self."yesod-core";
  "yesodDatatables" = self."yesod-datatables";
  "yesodDefault" = self."yesod-default";
  "yesodDsl" = self."yesod-dsl";
  "yesodEventsource" = self."yesod-eventsource";
  "yesodExamples" = self."yesod-examples";
  "yesodFay" = self."yesod-fay";
  "yesodFb" = self."yesod-fb";
  "yesodFormJson" = self."yesod-form-json";
  "yesodForm" = self."yesod-form";
  "yesodGitrepo" = self."yesod-gitrepo";
  "yesodGoodies" = self."yesod-goodies";
  "yesodJson" = self."yesod-json";
  "yesodLinks" = self."yesod-links";
  "yesodMangopay" = self."yesod-mangopay";
  "yesodMarkdown" = self."yesod-markdown";
  "yesodNewsfeed" = self."yesod-newsfeed";
  "yesodPaginate" = self."yesod-paginate";
  "yesodPagination" = self."yesod-pagination";
  "yesodPaginator" = self."yesod-paginator";
  "yesodPersistent" = self."yesod-persistent";
  "yesodPlatform" = self."yesod-platform";
  "yesodPnotify" = self."yesod-pnotify";
  "yesodPure" = self."yesod-pure";
  "yesodRecaptcha" = self."yesod-recaptcha";
  "yesodRoutes" = self."yesod-routes";
  "yesodRoutesTypescript" = self."yesod-routes-typescript";
  "yesodRst" = self."yesod-rst";
  "yesodS3" = self."yesod-s3";
  "yesodSessionRedis" = self."yesod-session-redis";
  "yesodSitemap" = self."yesod-sitemap";
  "yesodStaticAngular" = self."yesod-static-angular";
  "yesodStatic" = self."yesod-static";
  "yesodTableview" = self."yesod-tableview";
  "yesodTestJson" = self."yesod-test-json";
  "yesodTest" = self."yesod-test";
  "yesodTextMarkdown" = self."yesod-text-markdown";
  "yesodTls" = self."yesod-tls";
  "yesodVend" = self."yesod-vend";
  "yesodWebsockets" = self."yesod-websockets";
  "yesodWorker" = self."yesod-worker";
  "yesPrecure5Command" = self."yes-precure5-command";
  "yicesEasy" = self."yices-easy";
  "yicesPainless" = self."yices-painless";
  "yiContrib" = self."yi-contrib";
  "yiEmacsColours" = self."yi-emacs-colours";
  "yiFuzzyOpen" = self."yi-fuzzy-open";
  "yiGtk" = self."yi-gtk";
  "yiLanguage" = self."yi-language";
  "yiMonokai" = self."yi-monokai";
  "yiRope" = self."yi-rope";
  "yiSnippet" = self."yi-snippet";
  "yiSpolsky" = self."yi-spolsky";
  "yiVty" = self."yi-vty";
  "yjftpLibs" = self."yjftp-libs";
  "YogurtStandalone" = self."Yogurt-Standalone";
  "yorkLava" = self."york-lava";
  "zasniGerna" = self."zasni-gerna";
  "zendeskApi" = self."zendesk-api";
  "zeromq3Conduit" = self."zeromq3-conduit";
  "zeromq3Haskell" = self."zeromq3-haskell";
  "zeromq4Haskell" = self."zeromq4-haskell";
  "zeromqHaskell" = self."zeromq-haskell";
  "zigbeeZnet25" = self."zigbee-znet25";
  "zipArchive" = self."zip-archive";
  "zipConduit" = self."zip-conduit";
  "zlibBindings" = self."zlib-bindings";
  "zlibConduit" = self."zlib-conduit";
  "zlibEnum" = self."zlib-enum";
  "zlibLens" = self."zlib-lens";
  "zmidiCore" = self."zmidi-core";
  "zmidiScore" = self."zmidi-score";
  "zoomCachePcm" = self."zoom-cache-pcm";
  "zoomCache" = self."zoom-cache";
  "zoomCacheSndfile" = self."zoom-cache-sndfile";
  "zshBattery" = self."zsh-battery";

}
