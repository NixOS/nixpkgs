diff -ru stanaka-net-amazon-ec2-bc66577-orig/lib/Net/Amazon/EC2/RunningInstances.pm stanaka-net-amazon-ec2-bc66577/lib/Net/Amazon/EC2/RunningInstances.pm
--- stanaka-net-amazon-ec2-bc66577-orig/lib/Net/Amazon/EC2/RunningInstances.pm	2011-06-13 19:45:30.000000000 -0400
+++ stanaka-net-amazon-ec2-bc66577/lib/Net/Amazon/EC2/RunningInstances.pm	2011-10-27 17:25:29.000000000 -0400
@@ -25,6 +25,10 @@
 This element remains empty until the instance enters a 
 running state.
 
+=item dns_name_v6 (optional)
+
+The public IPv6 address of the instance.
+
 =item image_id (required)
 
 The image id of the AMI currently running in this instance.
@@ -134,6 +138,7 @@
 
 has 'ami_launch_index'  	=> ( is => 'ro', isa => 'Str', required => 0 );
 has 'dns_name'          	=> ( is => 'ro', isa => 'Maybe[Str]', required => 0 );
+has 'dns_name_v6'          	=> ( is => 'ro', isa => 'Maybe[Str]', required => 0 );
 has 'image_id'          	=> ( is => 'ro', isa => 'Str', required => 1 );
 has 'kernel_id'         	=> ( is => 'ro', isa => 'Maybe[Str]', required => 1 );
 has 'ramdisk_id'        	=> ( is => 'ro', isa => 'Maybe[Str]', required => 1 );
diff -ru stanaka-net-amazon-ec2-bc66577-orig/lib/Net/Amazon/EC2.pm stanaka-net-amazon-ec2-bc66577/lib/Net/Amazon/EC2.pm
--- stanaka-net-amazon-ec2-bc66577-orig/lib/Net/Amazon/EC2.pm	2011-06-13 19:45:30.000000000 -0400
+++ stanaka-net-amazon-ec2-bc66577/lib/Net/Amazon/EC2.pm	2011-10-27 17:25:29.000000000 -0400
@@ -1691,6 +1691,7 @@
 	my $self = shift;
 	my %args = validate( @_, {
 		InstanceId => { type => SCALAR | ARRAYREF, optional => 1 },
+		Action => { default => "DescribeInstances" },
 	});
 	
 	# If we have a array ref of instances lets split them out into their InstanceId.n format
@@ -1703,7 +1704,8 @@
 		}
 	}
 	
-	my $xml = $self->_sign(Action  => 'DescribeInstances', %args);
+	my $xml = $self->_sign(Action => $args{Action}, %args);
+	delete $args{Action};
 	my $reservations;
 	
 	if ( grep { defined && length } $xml->{Errors} ) {
@@ -1791,6 +1793,7 @@
 				my $running_instance = Net::Amazon::EC2::RunningInstances->new(
 					ami_launch_index		=> $instance_elem->{amiLaunchIndex},
 					dns_name				=> $instance_elem->{dnsName},
+					dns_name_v6			=> $instance_elem->{dnsNameV6},
 					image_id				=> $instance_elem->{imageId},
 					kernel_id				=> $instance_elem->{kernelId},
 					ramdisk_id				=> $instance_elem->{ramdiskId},
