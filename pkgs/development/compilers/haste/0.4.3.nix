# This file was auto-generated by cabal2nix. Please do NOT edit manually!

{ cabal, binary, blazeBuilder, bzlib, dataBinaryIeee754
, either, deepseq, filepath, ghcPaths, HTTP, transformers, mtl
, network, networkUri, random, shellmate, systemFileio, tar
, utf8String, websockets
# build
, fetchgit, lib, gcc, ghc, cabalInstall, closurecompiler
# boot
, bytestrings , containers , dataDefault , dataDefaultClass
, dataDefaultInstancesBase , dataDefaultInstancesContainers
, dataDefaultInstancesDlist , dataDefaultInstancesOldLocale
, deepseqBoot , dlist , monadsTf , oldLocale , transformersBoot
}:

let
  version = "0.4.3";
  bootPkgs = [ bytestrings  containers  dataDefault  dataDefaultClass
               dataDefaultInstancesBase  dataDefaultInstancesContainers
               dataDefaultInstancesDlist  dataDefaultInstancesOldLocale
               deepseqBoot  dlist  monadsTf  oldLocale  transformersBoot ];

  pkgDir = "$HOME_TMP_DIR/.cabal/packages/hackage.haskell.org/";
  prefetchPkg = pkg: ''
    mkdir -p ${pkgDir}/${pkg.pname}/${pkg.version}
    cp -r ${pkg.src} ${pkgDir}/${pkg.pname}/${pkg.version}

    mkdir -p $CABAL_TMP_DIR/${pkg.pname}/${pkg.version}
    PKG_TMP_DIR="$(mktemp -d --tmpdir=$TMPDIR)"
    cd $PKG_TMP_DIR
    tar xzf ${pkg.src}
    cp ${pkg.pname}-${pkg.version}/${pkg.pname}.cabal $CABAL_TMP_DIR/${pkg.pname}/${pkg.version}/${pkg.pname}.cabal
    cd -
    rm -rf $PKG_TMP_DIR
  '';
  prefetchBoot = ''
    mkdir -p ${pkgDir}
    CABAL_TMP_DIR="$(mktemp -d --tmpdir=$TMPDIR)"
  '' + (lib.concatStringsSep "\n" (map prefetchPkg bootPkgs)) + ''
    cd $CABAL_TMP_DIR
    tar -cf ${pkgDir}/00-index.tar *
    cd -
    rm -rf CABAL_TMP_DIR
  '';
in

cabal.mkDerivation (self: rec {
  inherit version;
  pname = "haste-compiler";
  src = fetchgit { url="https://github.com/valderman/haste-compiler";
                   rev="ee5f4a77e7c8cf94438d0bac528cdb4f8d3c8d31";
                   sha256 = "646f0836b306eb578500a6301fb97873428b0fa2269470ea2b0819845e94af91";
                 };

  patches = [ ./network.patch ] ++ [ ./environment.patch ./closure.patch ./cabal.patch ];

  postPatch = ''
    substituteInPlace src/Haste/Environment.hs --replace '__NIX_HASTE_SYSDIR_TARGET__' "$out/lib/haste-${version}"
    substituteInPlace src/Haste/Environment.hs --replace '__NIX_GHC_LIBDIR_TARGET__' '${ghc.ghcPlain}/lib/ghc-${ghc.version}'
    substituteInPlace src/Haste/Environment.hs --replace '__NIX_GHC_TARGET__' '${ghc.ghcPlain}/bin/ghc'
    substituteInPlace src/Haste/Environment.hs --replace '__NIX_GHC_PKG_TARGET__' '${ghc.ghcPlain}/bin/ghc-pkg'
    substituteInPlace src/Haste/Environment.hs --replace '__NIX_CLOSURE_COMPILER_TARGET__' '${closurecompiler}/bin/closure-compiler'
    substituteInPlace src/haste-inst.hs --replace '__NIX_CABAL_INSTALL_TARGET__' '${cabalInstall}/bin/cabal'
    '';

  isLibrary = true;
  isExecutable = true;
  enableSharedExecutables = false;
  configureFlags = "--ghc-option=-lgcc_s";
  noHaddock = true;
  buildDepends = [
    binary blazeBuilder bzlib dataBinaryIeee754 dataDefault either
    filepath ghcPaths HTTP monadsTf mtl network networkUri random
    shellmate systemFileio tar transformers utf8String websockets
    cabalInstall
  ];
  #propagatedBuildInputs = 
  postInstall = ''
    # haste-boot has to be exectued in root directory of haste src
    cd $NIX_BUILD_TOP/git-export
    export PATH="$out/bin:$PATH"

    # set installation path for .cabal (and .haste) directories that are created during haste-boot
    HOME_TMP_DIR="$(mktemp -d --tmpdir=$TMPDIR)"
    export HOME="$HOME_TMP_DIR"

    # trigger cabal to build "setup-exe-cache/setup-Cabal..."
    cd libraries/integer-gmp
    cabal install -j2 || rm -rf dist
    cd -

    # fetch packages needed during boot
    ${prefetchBoot}

    # boot haste
    LD_PRELOAD=${gcc.gcc}/lib/libgcc_s.so.1 haste-boot --force --local --no-closure

    # remove files only needed for booting haste
    rm $out/bin/haste-{boot,copy-pkg,install-his}

    # patch package config files: replace "pkgroot" with full path
    for i in $out/lib/haste-${version}/packages/*.conf; do
      substituteInPlace $i --replace '${"\${pkgroot}"}' "$out/lib/haste-${version}"
    done

    # update package config cache
    $out/bin/haste-pkg --package-db=$out/lib/haste-${version}/packages recache

    # rename haste-inst into cabal-haste; make it consistent with ghcjs, where cabal is named cabal-ghcjs
    mv $out/bin/haste-inst $out/bin/cabal-haste
    '';
  meta = {
    homepage = "http://github.com/valderman/haste-compiler";
    description = "Haskell To ECMAScript compiler";
    license = self.stdenv.lib.licenses.bsd3;
    platforms = self.ghc.meta.platforms;
  };
})
