diff -rc gcc-4.2.0-orig/Makefile.in gcc-4.2.0/Makefile.in
*** gcc-4.2.0-orig/Makefile.in	2006-12-29 18:47:06.000000000 +0100
--- gcc-4.2.0/Makefile.in	2007-05-20 21:06:42.000000000 +0200
***************
*** 364,369 ****
--- 364,377 ----
  @host_makefile_frag@
  ###
  
+ CFLAGS += $(NIX_EXTRA_CFLAGS)
+ CPPFLAGS_FOR_TARGET += $(NIX_EXTRA_CFLAGS)
+ CXXFLAGS += $(NIX_EXTRA_CFLAGS)
+ LDFLAGS += $(NIX_EXTRA_LDFLAGS)
+ LDFLAGS_FOR_TARGET += $(NIX_EXTRA_LDFLAGS)
+ BOOT_CFLAGS += $(NIX_EXTRA_CFLAGS)
+ BOOT_LDFLAGS += $(NIX_EXTRA_LDFLAGS)
+ 
  # This is the list of directories that may be needed in RPATH_ENVVAR
  # so that prorgams built for the target machine work.
  TARGET_LIB_PATH = $(TARGET_LIB_PATH_libstdc++-v3)$(TARGET_LIB_PATH_libmudflap)$(TARGET_LIB_PATH_libssp)$(TARGET_LIB_PATH_libgomp)$(HOST_LIB_PATH_gcc)
diff -rc gcc-4.2.0-orig/gcc/Makefile.in gcc-4.2.0/gcc/Makefile.in
*** gcc-4.2.0-orig/gcc/Makefile.in	2007-03-12 05:40:09.000000000 +0100
--- gcc-4.2.0/gcc/Makefile.in	2007-05-20 19:35:13.000000000 +0200
***************
*** 396,402 ****
  MD5_H	    = $(srcdir)/../include/md5.h
  
  # Default native SYSTEM_HEADER_DIR, to be overridden by targets.
! NATIVE_SYSTEM_HEADER_DIR = /usr/include
  # Default cross SYSTEM_HEADER_DIR, to be overridden by targets.
  CROSS_SYSTEM_HEADER_DIR = @CROSS_SYSTEM_HEADER_DIR@
  
--- 396,406 ----
  MD5_H	    = $(srcdir)/../include/md5.h
  
  # Default native SYSTEM_HEADER_DIR, to be overridden by targets.
! # Nix: we override NATIVE_SYSTEM_HEADER_DIR in order to prevent
! # `fixinc' from fixing header files in /usr/include.  However,
! # NATIVE_SYSTEM_HEADER_DIR must point to an existing directory, so set
! # it to some dummy directory.
! NATIVE_SYSTEM_HEADER_DIR = $(NIX_FIXINC_DUMMY)
  # Default cross SYSTEM_HEADER_DIR, to be overridden by targets.
  CROSS_SYSTEM_HEADER_DIR = @CROSS_SYSTEM_HEADER_DIR@
  
***************
*** 3066,3072 ****
    -DGPLUSPLUS_INCLUDE_DIR=\"$(gcc_gxx_include_dir)\" \
    -DGPLUSPLUS_TOOL_INCLUDE_DIR=\"$(gcc_gxx_include_dir)/$(target_noncanonical)\" \
    -DGPLUSPLUS_BACKWARD_INCLUDE_DIR=\"$(gcc_gxx_include_dir)/backward\" \
!   -DLOCAL_INCLUDE_DIR=\"$(local_includedir)\" \
    -DCROSS_INCLUDE_DIR=\"$(CROSS_SYSTEM_HEADER_DIR)\" \
    -DTOOL_INCLUDE_DIR=\"$(gcc_tooldir)/include\" \
    @TARGET_SYSTEM_ROOT_DEFINE@
--- 3070,3076 ----
    -DGPLUSPLUS_INCLUDE_DIR=\"$(gcc_gxx_include_dir)\" \
    -DGPLUSPLUS_TOOL_INCLUDE_DIR=\"$(gcc_gxx_include_dir)/$(target_noncanonical)\" \
    -DGPLUSPLUS_BACKWARD_INCLUDE_DIR=\"$(gcc_gxx_include_dir)/backward\" \
!   -DLOCAL_INCLUDE_DIR=\"/no-such-dir\" \
    -DCROSS_INCLUDE_DIR=\"$(CROSS_SYSTEM_HEADER_DIR)\" \
    -DTOOL_INCLUDE_DIR=\"$(gcc_tooldir)/include\" \
    @TARGET_SYSTEM_ROOT_DEFINE@
diff -rc gcc-4.2.0-orig/gcc/cppdefault.c gcc-4.2.0/gcc/cppdefault.c
*** gcc-4.2.0-orig/gcc/cppdefault.c	2006-01-20 22:00:03.000000000 +0100
--- gcc-4.2.0/gcc/cppdefault.c	2007-05-20 17:16:44.000000000 +0200
***************
*** 41,46 ****
--- 41,50 ----
  # undef CROSS_INCLUDE_DIR
  #endif
  
+ #undef LOCAL_INCLUDE_DIR
+ #undef SYSTEM_INCLUDE_DIR
+ #undef STANDARD_INCLUDE_DIR
+ 
  const struct default_include cpp_include_defaults[]
  #ifdef INCLUDE_DEFAULTS
  = INCLUDE_DEFAULTS;
diff -rc gcc-4.2.0-orig/gcc/gcc.c gcc-4.2.0/gcc/gcc.c
*** gcc-4.2.0-orig/gcc/gcc.c	2007-03-05 21:37:05.000000000 +0100
--- gcc-4.2.0/gcc/gcc.c	2007-05-20 17:49:48.000000000 +0200
***************
*** 1449,1458 ****
  /* Default prefixes to attach to command names.  */
  
  #ifndef STANDARD_STARTFILE_PREFIX_1
! #define STANDARD_STARTFILE_PREFIX_1 "/lib/"
  #endif
  #ifndef STANDARD_STARTFILE_PREFIX_2
! #define STANDARD_STARTFILE_PREFIX_2 "/usr/lib/"
  #endif
  
  #ifdef CROSS_COMPILE  /* Don't use these prefixes for a cross compiler.  */
--- 1449,1458 ----
  /* Default prefixes to attach to command names.  */
  
  #ifndef STANDARD_STARTFILE_PREFIX_1
! #define STANDARD_STARTFILE_PREFIX_1 ""
  #endif
  #ifndef STANDARD_STARTFILE_PREFIX_2
! #define STANDARD_STARTFILE_PREFIX_2 ""
  #endif
  
  #ifdef CROSS_COMPILE  /* Don't use these prefixes for a cross compiler.  */
***************
*** 1473,1480 ****
  #endif
  
  static const char *const standard_exec_prefix = STANDARD_EXEC_PREFIX;
! static const char *const standard_exec_prefix_1 = "/usr/libexec/gcc/";
! static const char *const standard_exec_prefix_2 = "/usr/lib/gcc/";
  static const char *md_exec_prefix = MD_EXEC_PREFIX;
  
  static const char *md_startfile_prefix = MD_STARTFILE_PREFIX;
--- 1473,1480 ----
  #endif
  
  static const char *const standard_exec_prefix = STANDARD_EXEC_PREFIX;
! static const char *const standard_exec_prefix_1 = "/no-such-path/";
! static const char *const standard_exec_prefix_2 = "/no-such-path/";
  static const char *md_exec_prefix = MD_EXEC_PREFIX;
  
  static const char *md_startfile_prefix = MD_STARTFILE_PREFIX;
diff -rc gcc-4.2.0-orig/ltconfig gcc-4.2.0/ltconfig
*** gcc-4.2.0-orig/ltconfig	2007-02-14 18:08:35.000000000 +0100
--- gcc-4.2.0/ltconfig	2007-05-20 22:16:24.000000000 +0200
***************
*** 2322,2327 ****
--- 2322,2332 ----
  # A language-specific compiler.
  CC=$CC
  
+ # Ugly hack to get libmudflap (and possibly other libraries) to build.
+ # Libtool filters out \`-B' flags when linking (why?), so the \`-B' flag
+ # to Glibc gets lost.  Here we forcibly add it to any invocation.
+ CC="\$CC $NIX_EXTRA_CFLAGS $NIX_EXTRA_LDFLAGS"
+ 
  # Is the compiler the GNU C compiler?
  with_gcc=$with_gcc
  
