diff --git a/builder/builtins.go b/builder/builtins.go
index a1066b67..f4f8ca79 100644
--- a/builder/builtins.go
+++ b/builder/builtins.go
@@ -179,7 +179,7 @@ var avrBuiltins = []string{
 var CompilerRT = Library{
 	name: "compiler-rt",
 	cflags: func(target, headerPath string) []string {
-		return []string{"-Werror", "-Wall", "-std=c11", "-nostdlibinc"}
+		return []string{"-Werror", "-Wall", "-std=c11", "-isystem", "@clang_include@"}
 	},
 	sourceDir: func() string {
 		llvmDir := filepath.Join(goenv.Get("TINYGOROOT"), "llvm-project/compiler-rt/lib/builtins")
diff --git a/builder/picolibc.go b/builder/picolibc.go
index 1b7c748b..8a6b9ddd 100644
--- a/builder/picolibc.go
+++ b/builder/picolibc.go
@@ -32,7 +32,7 @@ var Picolibc = Library{
 			"-D__OBSOLETE_MATH_FLOAT=1", // use old math code that doesn't expect a FPU
 			"-D__OBSOLETE_MATH_DOUBLE=0",
 			"-D_WANT_IO_C99_FORMATS",
-			"-nostdlibinc",
+			"-isystem", "@clang_include@",
 			"-isystem", newlibDir + "/libc/include",
 			"-I" + newlibDir + "/libc/tinystdio",
 			"-I" + newlibDir + "/libm/common",
diff --git a/compileopts/config.go b/compileopts/config.go
index 9a4bc310..424421ae 100644
--- a/compileopts/config.go
+++ b/compileopts/config.go
@@ -276,6 +276,7 @@ func (c *Config) CFlags() []string {
 		path, _ := c.LibcPath("picolibc")
 		cflags = append(cflags,
 			"--sysroot="+path,
+			"-isystem", "@clang_include@",
 			"-isystem", filepath.Join(path, "include"), // necessary for Xtensa
 			"-isystem", filepath.Join(picolibcDir, "include"),
 			"-isystem", filepath.Join(picolibcDir, "tinystdio"),
@@ -285,7 +286,6 @@ func (c *Config) CFlags() []string {
 		path, _ := c.LibcPath("musl")
 		arch := MuslArchitecture(c.Triple())
 		cflags = append(cflags,
-			"-nostdlibinc",
 			"-isystem", filepath.Join(path, "include"),
 			"-isystem", filepath.Join(root, "lib", "musl", "arch", arch),
 			"-isystem", filepath.Join(root, "lib", "musl", "include"),
