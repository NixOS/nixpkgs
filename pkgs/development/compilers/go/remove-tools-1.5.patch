diff --git a/src/cmd/go/pkg.go b/src/cmd/go/pkg.go
index 61e3d8d..b8422ad 100644
--- a/src/cmd/go/pkg.go
+++ b/src/cmd/go/pkg.go
@@ -678,7 +678,7 @@ var goTools = map[string]targetDir{
 	"cmd/trace":                            toTool,
 	"cmd/vet":                              toTool,
 	"cmd/yacc":                             toTool,
-	"golang.org/x/tools/cmd/godoc":         toBin,
+	"nixos.org/x/tools/cmd/godoc":          toBin,
 	"code.google.com/p/go.tools/cmd/cover": stalePath,
 	"code.google.com/p/go.tools/cmd/godoc": stalePath,
 	"code.google.com/p/go.tools/cmd/vet":   stalePath,
diff --git a/src/go/build/build.go b/src/go/build/build.go
index 496fe11..8c81dbd 100644
--- a/src/go/build/build.go
+++ b/src/go/build/build.go
@@ -1388,7 +1388,7 @@ func init() {
 }
 
 // ToolDir is the directory containing build tools.
-var ToolDir = filepath.Join(runtime.GOROOT(), "pkg/tool/"+runtime.GOOS+"_"+runtime.GOARCH)
+var ToolDir = runtime.GOTOOLDIR()
 
 // IsLocalImport reports whether the import path is
 // a local import path, like ".", "..", "./foo", or "../foo".
diff --git a/src/runtime/extern.go b/src/runtime/extern.go
index d346362..fb22b6e 100644
--- a/src/runtime/extern.go
+++ b/src/runtime/extern.go
@@ -194,6 +194,17 @@ func GOROOT() string {
 	return defaultGoroot
 }
 
+// GOTOOLDIR returns the root of the Go tree.
+// It uses the GOTOOLDIR environment variable, if set,
+// or else the root used during the Go build.
+func GOTOOLDIR() string {
+	s := gogetenv("GOTOOLDIR")
+	if s != "" {
+		return s
+	}
+	return GOROOT() + "/pkg/tool/" + GOOS + "_" + GOARCH
+}
+
 // Version returns the Go tree's version string.
 // It is either the commit hash and date at the time of the build or,
 // when possible, a release tag like "go1.3".
