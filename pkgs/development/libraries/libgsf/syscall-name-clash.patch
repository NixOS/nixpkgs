diff -Naur libgsf-1.14.23-orig/tests/test-cp-msole.c libgsf-1.14.23/tests/test-cp-msole.c
--- libgsf-1.14.23-orig/tests/test-cp-msole.c	2009-05-18 21:55:48.000000000 -0400
+++ libgsf-1.14.23/tests/test-cp-msole.c	2012-07-15 03:52:03.858382670 -0400
@@ -34,7 +34,7 @@
 static void clone_dir (GsfInfile *in, GsfOutfile *out);
 
 static void
-clone (GsfInput *input, GsfOutput *output)
+clone_is_a_stupid_name_for_a_function_compiled_on_linux (GsfInput *input, GsfOutput *output)
 {
 	if (gsf_input_size (input) > 0) {
 		guint8 const *data;
@@ -87,7 +87,7 @@
 				gsf_infile_name_by_index  (in, i),
 				is_dir);
 
-		clone (new_input, new_output);
+		clone_is_a_stupid_name_for_a_function_compiled_on_linux (new_input, new_output);
 	}
 	/* An observation: when you think about the explanation to is_dir
 	 * above, you realize that clone_dir is called even for regular files.
@@ -137,7 +137,7 @@
 
 	outfile = gsf_outfile_msole_new (output);
 	g_object_unref (G_OBJECT (output));
-	clone (GSF_INPUT (infile), GSF_OUTPUT (outfile));
+	clone_is_a_stupid_name_for_a_function_compiled_on_linux (GSF_INPUT (infile), GSF_OUTPUT (outfile));
 
 	return 0;
 }
diff -Naur libgsf-1.14.23-orig/tests/test-cp-zip.c libgsf-1.14.23/tests/test-cp-zip.c
--- libgsf-1.14.23-orig/tests/test-cp-zip.c	2009-05-18 21:55:48.000000000 -0400
+++ libgsf-1.14.23/tests/test-cp-zip.c	2012-07-15 03:54:53.719198559 -0400
@@ -32,7 +32,7 @@
 #include <stdio.h>
 
 static void
-clone (GsfInfile *in, GsfOutfile *out)
+clone_is_a_stupid_name_for_a_function_compiled_on_linux (GsfInfile *in, GsfOutfile *out)
 {
 	GsfInput *input = GSF_INPUT (in);
 	GsfOutput *output = GSF_OUTPUT (out);
@@ -85,7 +85,7 @@
 			output = gsf_outfile_new_child_full  (out, name, is_dir,
 							      "compression-level", level,
 							      NULL);
-			clone (GSF_INFILE (input), GSF_OUTFILE (output));
+			clone_is_a_stupid_name_for_a_function_compiled_on_linux (GSF_INFILE (input), GSF_OUTFILE (output));
 		}
 	}
 	gsf_output_close (GSF_OUTPUT (out));
@@ -137,7 +137,7 @@
 
 	outfile = gsf_outfile_zip_new (output, &err);
 	g_object_unref (G_OBJECT (output));
-	clone (infile, outfile);
+	clone_is_a_stupid_name_for_a_function_compiled_on_linux (infile, outfile);
 
 	return 0;
 }
diff -Naur libgsf-1.14.23-orig/tests/test-dump-msole.c libgsf-1.14.23/tests/test-dump-msole.c
--- libgsf-1.14.23-orig/tests/test-dump-msole.c	2011-12-07 18:05:18.000000000 -0500
+++ libgsf-1.14.23/tests/test-dump-msole.c	2012-07-15 03:56:15.581110536 -0400
@@ -32,7 +32,7 @@
 #include <stdio.h>
 
 static void
-clone (GsfInput *input, GsfOutput *output)
+clone_is_a_stupid_name_for_a_function_compiled_on_linux (GsfInput *input, GsfOutput *output)
 {
 	guint8 const *data;
 	size_t len;
@@ -72,7 +72,7 @@
 			dst = gsf_outfile_new_child  (out,
 				gsf_infile_name_by_index  (in, i),
 				is_dir);
-			clone (src, dst);
+			clone_is_a_stupid_name_for_a_function_compiled_on_linux (src, dst);
 		}
 	}
 
@@ -118,7 +118,7 @@
 		g_error_free (err);
 		return 1;
 	}
-	clone (GSF_INPUT (infile), GSF_OUTPUT (outfile));
+	clone_is_a_stupid_name_for_a_function_compiled_on_linux (GSF_INPUT (infile), GSF_OUTPUT (outfile));
 
 	return 0;
 }
diff -Naur libgsf-1.14.23-orig/tests/test-restore-msole.c libgsf-1.14.23/tests/test-restore-msole.c
--- libgsf-1.14.23-orig/tests/test-restore-msole.c	2011-12-07 18:05:18.000000000 -0500
+++ libgsf-1.14.23/tests/test-restore-msole.c	2012-07-15 03:57:39.972017963 -0400
@@ -32,7 +32,7 @@
 #include <stdio.h>
 
 static void
-clone (GsfInput *input, GsfOutput *output)
+clone_is_a_stupid_name_for_a_function_compiled_on_linux (GsfInput *input, GsfOutput *output)
 {
 	guint8 const *data;
 	size_t len;
@@ -72,7 +72,7 @@
 			dst = gsf_outfile_new_child  (out,
 				gsf_infile_name_by_index (in, i),
 				is_dir);
-			clone (src, dst);
+			clone_is_a_stupid_name_for_a_function_compiled_on_linux (src, dst);
 		}
 	}
 
@@ -111,7 +111,7 @@
 
 	outfile = gsf_outfile_msole_new (output);
 	g_object_unref (G_OBJECT (output));
-	clone (GSF_INPUT (infile), GSF_OUTPUT (outfile));
+	clone_is_a_stupid_name_for_a_function_compiled_on_linux (GSF_INPUT (infile), GSF_OUTPUT (outfile));
 
 	return 0;
 }
