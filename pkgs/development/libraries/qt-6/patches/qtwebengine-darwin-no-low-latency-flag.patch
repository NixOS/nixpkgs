diff --git a/src/3rdparty/chromium/media/gpu/mac/vt_video_encode_accelerator_mac.cc b/src/3rdparty/chromium/media/gpu/mac/vt_video_encode_accelerator_mac.cc
index 6a3a777..249d4cc 100644
--- a/src/3rdparty/chromium/media/gpu/mac/vt_video_encode_accelerator_mac.cc
+++ b/src/3rdparty/chromium/media/gpu/mac/vt_video_encode_accelerator_mac.cc
@@ -20,12 +20,6 @@
 #include "media/base/media_log.h"
 #include "media/base/video_frame.h"
 
-// This is a min version of macOS where we want to support SVC encoding via
-// EnableLowLatencyRateControl flag. The flag is actually supported since 11.3,
-// but there we see frame drops even with ample bitrate budget. Excessive frame
-// drops were fixed in 12.0.1.
-#define LOW_LATENCY_FLAG_AVAILABLE_VER 12.0.1
-
 namespace media {
 
 namespace {
@@ -150,8 +144,6 @@ VTVideoEncodeAccelerator::GetSupportedProfiles() {
   profile.max_framerate_numerator = kMaxFrameRateNumerator;
   profile.max_framerate_denominator = kMaxFrameRateDenominator;
   profile.max_resolution = gfx::Size(kMaxResolutionWidth, kMaxResolutionHeight);
-  if (__builtin_available(macOS LOW_LATENCY_FLAG_AVAILABLE_VER, *))
-    profile.scalability_modes.push_back(SVCScalabilityMode::kL1T2);
   for (const auto& supported_profile : kSupportedProfiles) {
     profile.profile = supported_profile;
     profiles.push_back(profile);
@@ -595,13 +587,6 @@ bool VTVideoEncodeAccelerator::CreateCompressionSession(
       kVTVideoEncoderSpecification_RequireHardwareAcceleratedVideoEncoder};
   std::vector<CFTypeRef> encoder_values{kCFBooleanTrue};
 
-  if (__builtin_available(macOS LOW_LATENCY_FLAG_AVAILABLE_VER, *)) {
-    if (require_low_delay_) {
-      encoder_keys.push_back(
-          kVTVideoEncoderSpecification_EnableLowLatencyRateControl);
-      encoder_values.push_back(kCFBooleanTrue);
-    }
-  }
   base::ScopedCFTypeRef<CFDictionaryRef> encoder_spec =
       video_toolbox::DictionaryWithKeysAndValues(
           encoder_keys.data(), encoder_values.data(), encoder_keys.size());
@@ -669,19 +654,8 @@ bool VTVideoEncodeAccelerator::ConfigureCompressionSession() {
   }
 
   if (num_temporal_layers_ == 2) {
-    if (__builtin_available(macOS LOW_LATENCY_FLAG_AVAILABLE_VER, *)) {
-      if (!session_property_setter.IsSupported(
-              kVTCompressionPropertyKey_BaseLayerFrameRateFraction)) {
-        DLOG(ERROR) << "BaseLayerFrameRateFraction is not supported";
-        return false;
-      }
-      rv &= session_property_setter.Set(
-          kVTCompressionPropertyKey_BaseLayerFrameRateFraction, 0.5);
-      DLOG_IF(ERROR, !rv) << " Setting BaseLayerFrameRate property failed.";
-    } else {
       DLOG(ERROR) << "SVC encoding is not supported on this OS version.";
       rv = false;
-    }
   }
 
   return rv;
