{ lib
, stdenv
, fetchurl
, gmp
, writeScript
}:

# Note: this package is used for bootstrapping fetchurl, and thus
# cannot use fetchpatch! All mutable patches (generated by GitHub or
# cgit) that are needed here should be included directly in Nixpkgs as
# files.
let
  getPatchCount = version:
    let versionParts = lib.splitVersion version; in
    if builtins.length versionParts == 4 then lib.toInt (lib.last versionParts) else 0;

  getVersionNoPatches = version:
    lib.concatStringsSep "." (lib.take 3 (lib.splitVersion version));
in
stdenv.mkDerivation (finalAttrs: {
  version = "4.2.0-12";
  pname = "mpfr";

  src = fetchurl {
    urls = let name = "${finalAttrs.pname}-${getVersionNoPatches finalAttrs.version}"; in [
      "https://www.mpfr.org/${name}/${name}.tar.xz"
      "mirror://gnu/mpfr/${name}.tar.xz"
    ];
    hash = "sha256-BqN43xNQEkjBsttaqXeiyBJq6Emp2be+JUb7Spwm2ZM=";
  };

  patches = builtins.genList
    (i: builtins.toPath "${./patches}/patch${if i + 1 < 10 then "0" else ""}${toString (i + 1)}.patch")
    (getPatchCount finalAttrs.version);

  outputs = [ "out" "dev" "doc" "info" ];

  strictDeps = true;

  propagatedBuildInputs = [ gmp ];

  configureFlags = lib.optional stdenv.hostPlatform.isSunOS "--disable-thread-safe"
    ++ lib.optional stdenv.hostPlatform.is64bit "--with-pic"
    ++ lib.optionals stdenv.hostPlatform.isPower64 [
      # Without this, the `tget_set_d128` test experiences a link
      # error due to missing `__dpd_trunctdkf`.
      "--disable-decimal-float"
    ];

  doCheck = true; # not cross;

  enableParallelBuilding = true;

  passthru = {
    updateScript = ./update.sh;
  };

  meta = {
    homepage = "https://www.mpfr.org/";
    description = "Library for multiple-precision floating-point arithmetic";

    longDescription = ''
      The GNU MPFR library is a C library for multiple-precision
      floating-point computations with correct rounding.  MPFR is
      based on the GMP multiple-precision library.

      The main goal of MPFR is to provide a library for
      multiple-precision floating-point computation which is both
      efficient and has a well-defined semantics.  It copies the good
      ideas from the ANSI/IEEE-754 standard for double-precision
      floating-point arithmetic (53-bit mantissa).
    '';

    license = lib.licenses.lgpl2Plus;

    maintainers = [ ];
    platforms = lib.platforms.all;
  };
})
