diff --git a/SConstruct b/SConstruct
index 4358a23..6ce7776 100644
--- a/SConstruct
+++ b/SConstruct
@@ -55,7 +55,7 @@ def RawListVariable(key, help, default):
 # To be used to ensure a PREFIX directory is only created when installing.
 def createPathIsDirCreateWithTarget(target):
   def my_validator(key, val, env):
-    build_targets = (map(str, BUILD_TARGETS))
+    build_targets = (list(map(str, BUILD_TARGETS)))
     if target in build_targets:
       return PathVariable.PathIsDirCreate(key, val, env)
     else:
@@ -155,6 +155,7 @@ if sys.platform == 'win32':
 env = Environment(variables=opts,
                   tools=('default', 'textfile',),
                   CPPPATH=['.', ],
+                  ENV=os.environ,
                   )
 
 env.Append(BUILDERS = {
@@ -163,9 +164,9 @@ env.Append(BUILDERS = {
               suffix='.def', src_suffix='.h')
   })
 
-match = re.search('SERF_MAJOR_VERSION ([0-9]+).*'
-                  'SERF_MINOR_VERSION ([0-9]+).*'
-                  'SERF_PATCH_VERSION ([0-9]+)',
+match = re.search(b'SERF_MAJOR_VERSION ([0-9]+).*'
+                  b'SERF_MINOR_VERSION ([0-9]+).*'
+                  b'SERF_PATCH_VERSION ([0-9]+)',
                   env.File('serf.h').get_contents(),
                   re.DOTALL)
 MAJOR, MINOR, PATCH = [int(x) for x in match.groups()]
@@ -183,7 +184,7 @@ CALLOUT_OKAY = not (env.GetOption('clean') or env.GetOption('help'))
 
 unknown = opts.UnknownVariables()
 if unknown:
-  print 'Warning: Used unknown variables:', ', '.join(unknown.keys())
+  print('Warning: Used unknown variables:', ', '.join(list(unknown.keys())))
 
 apr = str(env['APR'])
 apu = str(env['APU'])
