diff --git a/mkspecs/common/macx.conf b/mkspecs/common/macx.conf
--- a/mkspecs/common/macx.conf
+++ b/mkspecs/common/macx.conf
@@ -10,7 +10,7 @@ QMAKE_APPLE_DEVICE_ARCHS = x86_64
 
 # Should be 10.15, but as long as the CI builds with
 # older SDKs we have to keep this.
-QT_MAC_SDK_VERSION_MIN = 10.14
+QT_MAC_SDK_VERSION_MIN = 10.12
 
 QT_MAC_SDK_VERSION_MAX = 10.15
 
diff --git a/src/corelib/kernel/qcore_mac_objc.mm b/src/corelib/kernel/qcore_mac_objc.mm
--- a/src/corelib/kernel/qcore_mac_objc.mm
+++ b/src/corelib/kernel/qcore_mac_objc.mm
@@ -142,16 +142,10 @@ QMacAutoReleasePool::QMacAutoReleasePool()
 
 #ifdef QT_DEBUG
     void *poolFrame = nullptr;
-    if (__builtin_available(macOS 10.14, iOS 12.0, tvOS 12.0, watchOS 5.0, *)) {
-        void *frame;
-        if (backtrace_from_fp(__builtin_frame_address(0), &frame, 1))
-            poolFrame = frame;
-    } else {
         static const int maxFrames = 3;
         void *callstack[maxFrames];
         if (backtrace(callstack, maxFrames) == maxFrames)
             poolFrame = callstack[maxFrames - 1];
-    }
 
     if (poolFrame) {
         Dl_info info;
diff --git a/src/gui/rhi/qrhi.cpp b/src/gui/rhi/qrhi.cpp
--- a/src/gui/rhi/qrhi.cpp
+++ b/src/gui/rhi/qrhi.cpp
@@ -4050,7 +4050,7 @@ QRhi *QRhi::create(Implementation impl, QRhiInitParams *params, Flags flags, QRh
 #endif
     case Metal:
 //#ifdef Q_OS_DARWIN
-#ifdef Q_OS_MACOS
+#if 0
         r->d = new QRhiMetal(static_cast<QRhiMetalInitParams *>(params),
                              static_cast<QRhiMetalNativeHandles *>(importDevice));
         break;
diff --git a/src/gui/rhi/rhi.pri b/src/gui/rhi/rhi.pri
--- a/src/gui/rhi/rhi.pri
+++ b/src/gui/rhi/rhi.pri
@@ -44,7 +44,7 @@ win32 {
 }
 
 # darwin {
-macos {
+false {
     HEADERS += \
         rhi/qrhimetal_p.h \
         rhi/qrhimetal_p_p.h
diff --git a/src/plugins/platforms/cocoa/qcocoadrag.mm b/src/plugins/platforms/cocoa/qcocoadrag.mm
--- a/src/plugins/platforms/cocoa/qcocoadrag.mm
+++ b/src/plugins/platforms/cocoa/qcocoadrag.mm
@@ -134,7 +134,7 @@ Qt::DropAction QCocoaDrag::drag(QDrag *o)
     NSImage *nsimage = qt_mac_create_nsimage(pm);
     [nsimage setSize:NSSizeFromCGSize(pmDeviceIndependentSize.toCGSize())];
 
-    QMacPasteboard dragBoard(CFStringRef(NSPasteboardNameDrag), QMacInternalPasteboardMime::MIME_DND);
+    QMacPasteboard dragBoard((CFStringRef) NSDragPboard, QMacInternalPasteboardMime::MIME_DND);
     m_drag->mimeData()->setData(QLatin1String("application/x-qt-mime-type-name"), QByteArray("dummy"));
     dragBoard.setMimeData(m_drag->mimeData(), QMacPasteboard::LazyRequest);
 
@@ -145,7 +145,7 @@ Qt::DropAction QCocoaDrag::drag(QDrag *o)
     CGFloat flippedY = pmDeviceIndependentSize.height() - hotSpot.y();
     event_location.y -= flippedY;
     NSSize mouseOffset_unused = NSMakeSize(0.0, 0.0);
-    NSPasteboard *pboard = [NSPasteboard pasteboardWithName:NSPasteboardNameDrag];
+    NSPasteboard *pboard = [NSPasteboard pasteboardWithName:NSDragPboard];
 
     [theWindow dragImage:nsimage
         at:event_location
