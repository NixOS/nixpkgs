diff -ru glibc-2.21-orig/locale/loadarchive.c glibc-2.21/locale/loadarchive.c
--- glibc-2.21-orig/locale/loadarchive.c	2015-05-14 11:44:02.826785677 +0000
+++ glibc-2.21/locale/loadarchive.c	2015-05-14 11:45:11.144816356 +0000
@@ -124,6 +124,25 @@
 }
 
 
+static int
+open_locale_archive (void)
+{
+  int fd = -1;
+  char *path = getenv ("LOCALE_ARCHIVE_2_11");
+  char *path2 = getenv ("LOCALE_ARCHIVE");
+  const char *usualpath = "/usr/lib/locale/locale-archive";
+  if (path)
+    fd = open_not_cancel_2 (path, O_RDONLY|O_LARGEFILE|O_CLOEXEC);
+  if (path2 && fd < 0)
+    fd = open_not_cancel_2 (path2, O_RDONLY|O_LARGEFILE|O_CLOEXEC);
+  if (fd < 0)
+    fd = open_not_cancel_2 (archfname, O_RDONLY|O_LARGEFILE|O_CLOEXEC);
+  if (fd < 0)
+    fd = open_not_cancel_2 (usualpath, O_RDONLY|O_LARGEFILE|O_CLOEXEC);
+  return fd;
+}
+
+
 /* Find the locale *NAMEP in the locale archive, and return the
    internalized data structure for its CATEGORY data.  If this locale has
    already been loaded from the archive, just returns the existing data
@@ -203,7 +222,7 @@
       archmapped = &headmap;
 
       /* The archive has never been opened.  */
-      fd = open_not_cancel_2 (archfname, O_RDONLY|O_LARGEFILE|O_CLOEXEC);
+      fd = open_locale_archive ();
       if (fd < 0)
 	/* Cannot open the archive, for whatever reason.  */
 	return NULL;
@@ -398,8 +417,7 @@
 	  if (fd == -1)
 	    {
 	      struct stat64 st;
-	      fd = open_not_cancel_2 (archfname,
-				      O_RDONLY|O_LARGEFILE|O_CLOEXEC);
+	      fd = open_locale_archive ();
 	      if (fd == -1)
 		/* Cannot open the archive, for whatever reason.  */
 		return NULL;
diff -ru glibc-2.21-orig/locale/programs/locale.c glibc-2.21/locale/programs/locale.c
--- glibc-2.21-orig/locale/programs/locale.c	2015-05-14 11:44:02.827785678 +0000
+++ glibc-2.21/locale/programs/locale.c	2015-05-14 11:44:53.902806494 +0000
@@ -629,6 +629,20 @@
 		  ((const struct nameent *) b)->name);
 }
 
+static int
+open_nix_locale_archive (const char * fname, int access)
+{
+  int fd = -1;
+  char *path = getenv ("LOCALE_ARCHIVE_2_11");
+  char *path2 = getenv ("LOCALE_ARCHIVE");
+  if (path)
+    fd = open64 (path, access);
+  if (path2 && fd < 0)
+    fd = open64 (path2, access);
+  if (fd < 0)
+    fd = open64 (fname, access);
+  return fd;
+}
 
 static int
 write_archive_locales (void **all_datap, char *linebuf)
@@ -642,7 +656,7 @@
   int fd, ret = 0;
   uint32_t cnt;
 
-  fd = open64 (ARCHIVE_NAME, O_RDONLY);
+  fd = open_nix_locale_archive (ARCHIVE_NAME, O_RDONLY);
   if (fd < 0)
     return 0;
 
diff -ru glibc-2.21-orig/locale/programs/locarchive.c glibc-2.21/locale/programs/locarchive.c
--- glibc-2.21-orig/locale/programs/locarchive.c	2015-05-14 11:44:02.827785678 +0000
+++ glibc-2.21/locale/programs/locarchive.c	2015-05-14 11:44:53.902806494 +0000
@@ -553,6 +553,20 @@
   *ah = new_ah;
 }
 
+static int
+open_nix_locale_archive (const char * fname, int access)
+{
+  int fd = -1;
+  char *path = getenv ("LOCALE_ARCHIVE_2_11");
+  char *path2 = getenv ("LOCALE_ARCHIVE");
+  if (path)
+    fd = open64 (path, access);
+  if (path2 && fd < 0)
+    fd = open64 (path2, access);
+  if (fd < 0)
+    fd = open64 (fname, access);
+  return fd;
+}
 
 void
 open_archive (struct locarhandle *ah, bool readonly)
@@ -578,7 +592,7 @@
   while (1)
     {
       /* Open the archive.  We must have exclusive write access.  */
-      fd = open64 (archivefname, readonly ? O_RDONLY : O_RDWR);
+      fd = open_nix_locale_archive (archivefname, readonly ? O_RDONLY : O_RDWR);
       if (fd == -1)
 	{
 	  /* Maybe the file does not yet exist? If we are opening
