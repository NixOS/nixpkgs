--- a/plugins/qca-ossl/CMakeLists.txt	2015-10-02 05:39:21.000000000 -0400
+++ b/plugins/qca-ossl/CMakeLists.txt	2016-01-29 01:40:22.193522019 -0500
@@ -25,6 +25,13 @@
     message(WARNING "qca-ossl will be compiled without AES CTR mode encryption support")
   endif(HAVE_OPENSSL_AES_CTR)
 
+  check_function_exists(EVP_sha HAVE_OPENSSL_SHA0)
+  if(HAVE_OPENSSL_SHA0)
+    add_definitions(-DHAVE_OPENSSL_SHA0)
+  else(HAVE_OPENSSL_SHA0)
+    message(WARNING "qca-ossl will be compiled without SHA-0 digest algorithm support")
+  endif(HAVE_OPENSSL_SHA0)
+
   set(QCA_OSSL_SOURCES qca-ossl.cpp)
 
   my_automoc( QCA_OSSL_SOURCES )
--- a/plugins/qca-ossl/qca-ossl.cpp	2015-10-02 05:39:21.000000000 -0400
+++ b/plugins/qca-ossl/qca-ossl.cpp	2016-01-29 01:40:22.195522008 -0500
@@ -5403,9 +5403,11 @@
 			ctx = SSL_CTX_new(SSLv2_client_method());
 			break;
 #endif
+#ifndef OPENSSL_NO_SSL3_METHOD
 		case TLS::SSL_v3:
 			ctx = SSL_CTX_new(SSLv3_client_method());
 			break;
+#endif
 		case TLS::TLS_v1:
 			ctx = SSL_CTX_new(TLSv1_client_method());
 			break;
@@ -6880,7 +6882,9 @@
 {
 	QStringList list;
 	list += "sha1";
+#ifdef HAVE_OPENSSL_SHA0
 	list += "sha0";
+#endif
 	list += "ripemd160";
 #ifdef HAVE_OPENSSL_MD2
 	list += "md2";
@@ -7133,8 +7137,10 @@
 			return new opensslInfoContext(this);
 		else if ( type == "sha1" )
 			return new opensslHashContext( EVP_sha1(), this, type);
+#ifdef HAVE_OPENSSL_SHA0
 		else if ( type == "sha0" )
 			return new opensslHashContext( EVP_sha(), this, type);
+#endif
 		else if ( type == "ripemd160" )
 			return new opensslHashContext( EVP_ripemd160(), this, type);
 #ifdef HAVE_OPENSSL_MD2
