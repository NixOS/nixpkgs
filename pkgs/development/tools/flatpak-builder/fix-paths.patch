--- a/src/builder-context.c
+++ b/src/builder-context.c
@@ -711,7 +711,7 @@
   g_autoptr(GFile) rofiles_base = NULL;
   g_autoptr(GFile) rofiles_dir = NULL;
   g_autofree char *tmpdir_name = NULL;
-  char *argv[] = { "rofiles-fuse",
+  char *argv[] = { "@rofilesfuse@",
                    "-o",
                    "kernel_cache,entry_timeout=60,attr_timeout=60,splice_write,splice_move",
                    (char *)flatpak_file_get_path_cached (self->app_dir),
--- a/src/builder-git.c
+++ b/src/builder-git.c
@@ -44,7 +44,7 @@
   va_list ap;
 
   va_start (ap, error);
-  res = flatpak_spawn (dir, output, flags, error, "git", ap);
+  res = flatpak_spawn (dir, output, flags, error, "@git@", ap);
   va_end (ap);
 
   return res;
@@ -58,7 +58,7 @@
   va_list ap;
 
   va_start (ap, error);
-  res = flatpak_spawn (NULL, NULL, 0, error, "cp", ap);
+  res = flatpak_spawn (NULL, NULL, 0, error, "@cp@", ap);
   va_end (ap);
 
   return res;
--- a/src/builder-source-archive.c
+++ b/src/builder-source-archive.c
@@ -401,7 +401,7 @@
   va_list ap;
 
   va_start (ap, error);
-  res = flatpak_spawn (dir, NULL, 0, error, "tar", ap);
+  res = flatpak_spawn (dir, NULL, 0, error, "@tar@", ap);
   va_end (ap);
 
   return res;
@@ -416,7 +416,7 @@
   va_list ap;
 
   va_start (ap, error);
-  res = flatpak_spawn (dir, NULL, 0, error, "unzip", ap);
+  res = flatpak_spawn (dir, NULL, 0, error, "@unzip@", ap);
   va_end (ap);
 
   return res;
@@ -428,7 +428,7 @@
        GError **error)
 {
   gboolean res;
-  const gchar *argv[] = { "sh", "-c", "rpm2cpio \"$1\" | cpio -i -d",
+  const gchar *argv[] = { "sh", "-c", "@rpm2cpio@ \"$1\" | @cpio@ -i -d",
       "sh", /* shell's $0 */
       rpm_path, /* shell's $1 */
       NULL };
--- a/src/builder-source-bzr.c
+++ b/src/builder-source-bzr.c
@@ -124,7 +124,7 @@
   va_list ap;
 
   va_start (ap, error);
-  res = flatpak_spawn (dir, output, 0, error, "bzr", ap);
+  res = flatpak_spawn (dir, output, 0, error, "@bzr@", ap);
   va_end (ap);
 
   return res;
--- a/src/builder-source-patch.c
+++ b/src/builder-source-patch.c
@@ -204,11 +204,11 @@
 
   args = g_ptr_array_new ();
   if (use_git) {
-    g_ptr_array_add (args, "git");
+    g_ptr_array_add (args, "@git@");
     g_ptr_array_add (args, "apply");
     g_ptr_array_add (args, "-v");
   } else {
-    g_ptr_array_add (args, "patch");
+    g_ptr_array_add (args, "@patch@");
   }
   for (i = 0; extra_options != NULL && extra_options[i] != NULL; i++)
     g_ptr_array_add (args, (gchar *) extra_options[i]);
--- a/src/builder-utils.c
+++ b/src/builder-utils.c
@@ -139,7 +139,7 @@
   va_list ap;
 
   va_start (ap, error);
-  res = flatpak_spawn (NULL, NULL, 0, error, "strip", ap);
+  res = flatpak_spawn (NULL, NULL, 0, error, "@strip@", ap);
   va_end (ap);
 
   return res;
@@ -153,7 +153,7 @@
   va_list ap;
 
   va_start (ap, error);
-  res = flatpak_spawn (NULL, NULL, 0, error, "eu-strip", ap);
+  res = flatpak_spawn (NULL, NULL, 0, error, "@eustrip@", ap);
   va_end (ap);
 
   return res;
@@ -167,7 +167,7 @@
   va_list ap;
 
   va_start (ap, error);
-  res = flatpak_spawn (NULL, NULL, 0, error, "eu-elfcompress", ap);
+  res = flatpak_spawn (NULL, NULL, 0, error, "@euelfcompress@", ap);
   va_end (ap);
 
   return res;
