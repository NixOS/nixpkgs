
# Generated by crate2nix 0.6.0-alpha.0 with the command:
#   "generate"
# See https://github.com/kolloch/crate2nix for more info.

{ pkgs? import <nixpkgs> { config = {}; },
  lib? pkgs.lib,
  callPackage? pkgs.callPackage,
  stdenv? pkgs.stdenv,
  buildRustCrate? pkgs.buildRustCrate,
  fetchurl? pkgs.fetchurl,
  fetchCrate? pkgs.fetchCrate,
  # The features to enable for the root_crate or the workspace_members.
  rootFeatures? ["default"]}:

rec {
  #
  # "public" attributes that we attempt to keep stable with new versions of crate2nix.
  #

  rootCrate = {
    packageId = "git-subcopy 0.1.0 (path+file:///home/user/Coding/Rust/git-subcopy)";

    # Use this attribute to refer to the derivation building your root crate package.
    # You can override the features with rootCrate.build.override { features = [ "default" "feature1" ... ]; }.
    build = buildRustCrateWithFeatures {
      packageId = "git-subcopy 0.1.0 (path+file:///home/user/Coding/Rust/git-subcopy)";
      features = rootFeatures;
    };
  };
  root_crate =
    builtins.trace "root_crate is deprecated since crate2nix 0.4. Please use rootCrate instead." rootCrate.build;
  # Refer your crate build derivation by name here.
  # You can override the features with
  # workspaceMembers."${crateName}".build.override { features = [ "default" "feature1" ... ]; }.
  workspaceMembers = {
    "git-subcopy" = {
      packageId = "git-subcopy 0.1.0 (path+file:///home/user/Coding/Rust/git-subcopy)";
      build = buildRustCrateWithFeatures {
        packageId = "git-subcopy 0.1.0 (path+file:///home/user/Coding/Rust/git-subcopy)";
        features = rootFeatures;
      };
    };
  };
  workspace_members =
    builtins.trace
      "workspace_members is deprecated in crate2nix 0.4. Please use workspaceMembers instead."
      lib.mapAttrs (n: v: v.build) workspaceMembers;

  #
  # "private" attributes that may change in every new version of crate2nix.
  #

  # Build and dependency information for crates.
  # Many of the fields are passed one-to-one to buildRustCrate.
  #
  # Noteworthy:
  # * `crateBin = [{name = ","; path = ",";}];`: a hack to disable building the binary.
  # * `dependencies`/`buildDependencies`: similar to the corresponding fields for buildRustCrate.
  #   but with additional information which is used during dependency/feature resolution.
  # * `resolvedDependencies`: the selected default features reported by cargo - only included for debugging.

  crates = {
    "aho-corasick 0.7.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "aho-corasick";
        version = "0.7.6";
        edition = "2015";
        sha256 = "1srdggg7iawz7rfyb79qfnz6vmzkgl6g6gabyd9ad6pbx7zzj8gz";
        libName = "aho_corasick";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "memchr" = {
            packageId = "memchr 2.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" ];
          "std" = [ "memchr/use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ansi_term";
        version = "0.11.0";
        edition = "2015";
        sha256 = "08fk0p2xvkqpmz3zlrwnf6l8sj2vngw464rvzspzp31sbgxbwm4v";
        authors = [
          "ogham@bsago.me"
          "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = {
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "windows");
            features = [ "errhandlingapi" "consoleapi" "processenv" ];
          };
        };
        features = {
        };
      };
    "anyhow 1.0.11 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "anyhow";
        version = "1.0.11";
        edition = "2018";
        sha256 = "1a18yg7klajcxbzf4f8ynyg7jlcci0ypigsp9znk7cd5dnbln4gb";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "arrayref 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "arrayref";
        version = "0.3.5";
        edition = "2015";
        sha256 = "00dfn9lbr4pc524imc25v3rbmswiqk3jldsgmx4rdngcpxb8ssjf";
        authors = [
          "David Roundy <roundyd@physics.oregonstate.edu>"
        ];
        features = {
        };
      };
    "arrayvec 0.4.12 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "arrayvec";
        version = "0.4.12";
        edition = "2015";
        sha256 = "0g11if4ihxifdiiwk6brnywkpgbvfbfwxgfqw5a407hprcq3s49f";
        authors = [
          "bluss"
        ];
        dependencies = {
          "nodrop" = {
            packageId = "nodrop 0.1.14 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" ];
          "serde-1" = [ "serde" ];
        };
      };
    "atty 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "atty";
        version = "0.2.13";
        edition = "2015";
        sha256 = "0a1ii8h9fvvrq05bz7j135zjjz1sjz6n2invn2ngxqri0jxgmip2";
        authors = [
          "softprops <d.tangren@gmail.com>"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = target."unix";
          };
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "consoleapi" "processenv" "minwinbase" "minwindef" "winbase" ];
          };
        };
        features = {
        };
      };
    "autocfg 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "autocfg";
        version = "0.1.6";
        edition = "2015";
        sha256 = "1yzawpsmrcy3x60i59hfwwg7mfdwc74199m2lgkc4vam5ijy8mz7";
        authors = [
          "Josh Stone <cuviper@gmail.com>"
        ];
        features = {
        };
      };
    "backtrace 0.3.38 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "backtrace";
        version = "0.3.38";
        edition = "2018";
        sha256 = "0k41sw74xd19s9lsqab1rf94wi8l7ppfarib8hpd0y7q2iym5j41";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "backtrace-sys" = {
            packageId = "backtrace-sys 0.1.31 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = {
            packageId = "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "rustc-demangle" = "rustc-demangle 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" "libunwind" "libbacktrace" "dladdr" "dbghelp" ];
          "gimli-symbolize" = [ "addr2line" "findshlibs" "memmap" "goblin" ];
          "libbacktrace" = [ "backtrace-sys" ];
          "rustc-dep-of-std" = [ "backtrace-sys/rustc-dep-of-std" "cfg-if/rustc-dep-of-std" "core" "compiler_builtins" "libc/rustc-dep-of-std" "rustc-demangle/rustc-dep-of-std" ];
          "serialize-rustc" = [ "rustc-serialize" ];
          "serialize-serde" = [ "serde" ];
          "verify-winapi" = [ "winapi/dbghelp" "winapi/handleapi" "winapi/libloaderapi" "winapi/minwindef" "winapi/processthreadsapi" "winapi/synchapi" "winapi/winbase" "winapi/winnt" ];
        };
        resolvedDefaultFeatures = [ "backtrace-sys" "dbghelp" "default" "dladdr" "libbacktrace" "libunwind" "std" ];
      };
    "backtrace-sys 0.1.31 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "backtrace-sys";
        version = "0.1.31";
        edition = "2015";
        sha256 = "1gv41cypl4y5r32za4gx2fks43d76sp1r3yb5524i4gs50lrkypv";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        buildDependencies = {
          "cc" = "cc 1.0.45 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
    "base64 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "base64";
        version = "0.10.1";
        edition = "2015";
        sha256 = "1zz3jq619hahla1f70ra38818b5n8cp4iilij81i90jq6z7hlfhg";
        authors = [
          "Alice Maz <alice@alicemaz.com>"
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        dependencies = {
          "byteorder" = "byteorder 1.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "bitflags 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "bitflags";
        version = "1.2.0";
        edition = "2015";
        sha256 = "0cybfqfkplbznkvm0cjn6wv7vpp718i47ld4g84qrb0lwa0jpmcg";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "blake2b_simd 0.5.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "blake2b_simd";
        version = "0.5.8";
        edition = "2018";
        sha256 = "14974amxa9lgn8syjp1am4yj4vhmcc27k21bvyz4fsawv3hfv204";
        authors = [
          "Jack O'Connor"
        ];
        dependencies = {
          "arrayref" = "arrayref 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "arrayvec" = {
            packageId = "arrayvec 0.4.12 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "constant_time_eq" = "constant_time_eq 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "byteorder 1.3.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "byteorder";
        version = "1.3.2";
        edition = "2015";
        sha256 = "099fxwc79ncpcl8dgg9hql8gznz11a3sjs7pai0mg6w8r05khvdx";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "c2-chacha 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "c2-chacha";
        version = "0.2.2";
        edition = "2018";
        sha256 = "1lcfazshbiw8kdpcgphlmls0mz5j4wnvsq1diaz4b2bcvgm3r2cn";
        authors = [
          "The CryptoCorrosion Contributors"
        ];
        dependencies = {
          "lazy_static" = {
            packageId = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "ppv-lite86" = {
            packageId = "ppv-lite86 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)";
            rename = "ppv-lite86";
          };
        };
        features = {
          "default" = [ "std" "simd" "rustcrypto_api" ];
          "rustcrypto_api" = [ "stream-cipher" "byteorder" ];
          "simd" = [ "ppv-lite86/simd" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "lazy_static" "simd" "std" ];
      };
    "cc 1.0.45 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cc";
        version = "1.0.45";
        edition = "2018";
        # Hack to suppress building binaries
        crateBin = [{name = ","; path = ",";}];
        sha256 = "0qhw9k5av9x6yvv4jfrji576wy90vgdnr76cifs8xqm70scdl2sm";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "jobserver" = {
            packageId = "jobserver 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "num_cpus" = {
            packageId = "num_cpus 1.10.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "parallel" = [ "num_cpus" "jobserver" ];
        };
        resolvedDefaultFeatures = [ "jobserver" "num_cpus" "parallel" ];
      };
    "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cfg-if";
        version = "0.1.10";
        edition = "2018";
        sha256 = "0x52qzpbyl2f2jqs7kkqzgfki2cpq99gpfjjigdp8pwwfqk01007";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
    "clap 2.33.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "clap";
        version = "2.33.0";
        edition = "2015";
        sha256 = "054n9ngh6pkknpmd4acgdsp40iw6f5jzq8a4h2b76gnbvk6p5xjh";
        authors = [
          "Kevin K. <kbknapp@gmail.com>"
        ];
        dependencies = {
          "ansi_term" = {
            packageId = "ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = (!target."windows");
          };
          "atty" = {
            packageId = "atty 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "bitflags" = "bitflags 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "strsim" = {
            packageId = "strsim 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "textwrap" = "textwrap 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "unicode-width" = "unicode-width 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "vec_map" = {
            packageId = "vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "color" = [ "ansi_term" "atty" ];
          "default" = [ "suggestions" "color" "vec_map" ];
          "doc" = [ "yaml" ];
          "lints" = [ "clippy" ];
          "suggestions" = [ "strsim" ];
          "wrap_help" = [ "term_size" "textwrap/term_size" ];
          "yaml" = [ "yaml-rust" ];
        };
        resolvedDefaultFeatures = [ "ansi_term" "atty" "color" "default" "strsim" "suggestions" "vec_map" ];
      };
    "cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cloudabi";
        version = "0.0.3";
        edition = "2015";
        sha256 = "1z9lby5sr6vslfd14d6igk03s7awf91mxpsfmsp3prxbxlk0x7h5";
        libPath = "cloudabi.rs";
        authors = [
          "Nuxi (https://nuxi.nl/) and contributors"
        ];
        dependencies = {
          "bitflags" = {
            packageId = "bitflags 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "bitflags" ];
        };
        resolvedDefaultFeatures = [ "bitflags" "default" ];
      };
    "constant_time_eq 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "constant_time_eq";
        version = "0.1.4";
        edition = "2015";
        sha256 = "0k3b5yavx7si8cy030py6bhgmg24sghzs8chbs4d4r13wjp5c5ih";
        authors = [
          "Cesar Eduardo Barros <cesarb@cesarb.eti.br>"
        ];
        features = {
        };
      };
    "crossbeam-utils 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-utils";
        version = "0.6.6";
        edition = "2015";
        sha256 = "01gxccmrjkkcavdh8fc01kj3b5fmk10f0lkx66jmnv69kcssry72";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "lazy_static" = {
            packageId = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
    "dirs 2.0.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "dirs";
        version = "2.0.2";
        edition = "2015";
        sha256 = "0zk0kdnl2hd3qk76yq6yk7hc7s73gpnnzi1p208ygrh270y96fpx";
        authors = [
          "Simon Ochsenreither <simon@ochsenreither.de>"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "dirs-sys" = "dirs-sys 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "dirs-sys 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "dirs-sys";
        version = "0.3.4";
        edition = "2015";
        sha256 = "1hb7h6g5xyhc26v8d8fksxfw1gv6kl427jzp9vhl7y8v6992d80d";
        authors = [
          "Simon Ochsenreither <simon@ochsenreither.de>"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = {
            packageId = "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "redox_users" = {
            packageId = "redox_users 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "knownfolders" "objbase" "shlobj" "winbase" "winerror" ];
          };
        };
        features = {
        };
      };
    "env_logger 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "env_logger";
        version = "0.7.0";
        edition = "2018";
        sha256 = "0j8afwla5z038iqnq3s56fljw49v0sl9hnywr1pgmyz1dz40fpky";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "atty" = {
            packageId = "atty 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "humantime" = {
            packageId = "humantime 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "log" = {
            packageId = "log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "std" ];
          };
          "regex" = {
            packageId = "regex 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "termcolor" = {
            packageId = "termcolor 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "termcolor" "atty" "humantime" "regex" ];
        };
        resolvedDefaultFeatures = [ "atty" "default" "humantime" "regex" "termcolor" ];
      };
    "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "failure";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1msaj1c0fg12dzyf4fhxqlx1gfx41lj2smdjmkc9hkrgajk2g3kx";
        authors = [
          "Without Boats <boats@mozilla.com>"
        ];
        dependencies = {
          "backtrace" = {
            packageId = "backtrace 0.3.38 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "failure_derive" = {
            packageId = "failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "std" "derive" ];
          "derive" = [ "failure_derive" ];
          "std" = [ "backtrace" ];
        };
        resolvedDefaultFeatures = [ "backtrace" "default" "derive" "failure_derive" "std" ];
      };
    "failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "failure_derive";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1wzk484b87r4qszcvdl2bkniv5ls4r2f2dshz7hmgiv6z4ln12g0";
        procMacro = true;
        authors = [
          "Without Boats <woboats@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = "syn 0.15.44 (registry+https://github.com/rust-lang/crates.io-index)";
          "synstructure" = "synstructure 0.10.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "fuchsia-cprng";
        version = "0.1.1";
        edition = "2018";
        sha256 = "07apwv9dj716yjlcj29p94vkqn5zmfh7hlrqvrjx3wzshphc95h9";
        authors = [
          "Erick Tryzelaar <etryzelaar@google.com>"
        ];
        features = {
        };
      };
    "getrandom 0.1.12 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "getrandom";
        version = "0.1.12";
        edition = "2018";
        sha256 = "0n3cyf8vm82hbbj6xzgaszjn852i0jl9qxibl7im7mvn7s9yrvb6";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = {
            packageId = "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = (target."unix" || (target."os" == "redox"));
          };
          "wasi" = {
            packageId = "wasi 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "wasi");
          };
        };
        features = {
          "rustc-dep-of-std" = [ "compiler_builtins" "core" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    "git-subcopy 0.1.0 (path+file:///home/user/Coding/Rust/git-subcopy)"
      = rec {
        crateName = "git-subcopy";
        version = "0.1.0";
        edition = "2018";
        src = (builtins.filterSource sourceFilter ./.);
        authors = [
          "jD91mZM2 <me@krake.one>"
        ];
        dependencies = {
          "anyhow" = "anyhow 1.0.11 (registry+https://github.com/rust-lang/crates.io-index)";
          "base64" = "base64 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "dirs" = "dirs 2.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "env_logger" = "env_logger 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "git2" = "git2 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "log" = "log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "structopt" = "structopt 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "tempfile" = "tempfile 3.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "walkdir" = "walkdir 2.2.9 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "git2 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "git2";
        version = "0.10.1";
        edition = "2018";
        sha256 = "18a4n241m34vb1myyh5ysg3608qaz7x72p2cviylk4gp72vk4alq";
        authors = [
          "Josh Triplett <josh@joshtriplett.org>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "bitflags" = "bitflags 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)";
          "libgit2-sys" = "libgit2-sys 0.9.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "log" = "log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "openssl-probe" = {
            packageId = "openssl-probe 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = (target."unix" && (!(target."os" == "macos")));
          };
          "openssl-sys" = {
            packageId = "openssl-sys 0.9.51 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = (target."unix" && (!(target."os" == "macos")));
          };
          "url" = "url 2.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "ssh" "https" "ssh_key_from_memory" ];
          "https" = [ "libgit2-sys/https" "openssl-sys" "openssl-probe" ];
          "ssh" = [ "libgit2-sys/ssh" ];
          "ssh_key_from_memory" = [ "libgit2-sys/ssh_key_from_memory" ];
          "vendored-openssl" = [ "openssl-sys/vendored" ];
        };
        resolvedDefaultFeatures = [ "default" "https" "openssl-probe" "openssl-sys" "ssh" "ssh_key_from_memory" ];
      };
    "heck 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "heck";
        version = "0.3.1";
        edition = "2015";
        sha256 = "1q7vmnlh62kls6cvkfhbcacxkawaznaqa5wwm9dg1xkcza846c3d";
        authors = [
          "Without Boats <woboats@gmail.com>"
        ];
        dependencies = {
          "unicode-segmentation" = "unicode-segmentation 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "humantime 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "humantime";
        version = "1.3.0";
        edition = "2015";
        sha256 = "1y7q207gg33jr5rnlnb0h08k00i54g9fypf3drjk8g1sq2swn92r";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
        ];
        dependencies = {
          "quick-error" = "quick-error 1.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "idna 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "idna";
        version = "0.2.0";
        edition = "2015";
        sha256 = "1mm05aq43qc5n492njnac5xn4rhiraii25xc0hwppr471jzijh8d";
        authors = [
          "The rust-url developers"
        ];
        dependencies = {
          "matches" = "matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "unicode-bidi" = "unicode-bidi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "unicode-normalization" = "unicode-normalization 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "jobserver 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "jobserver";
        version = "0.1.17";
        edition = "2015";
        sha256 = "0qazd61l3zgnchzrr9gkvvdzdz1d6g8xrc2skac5qa0ykd1yblyx";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "getrandom" = {
            packageId = "getrandom 0.1.12 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
          };
          "libc" = {
            packageId = "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "log" = "log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "lazy_static";
        version = "1.4.0";
        edition = "2015";
        sha256 = "13h6sdghdcy7vcqsm2gasfw3qg7ssa0fl3sw7lq6pdkbk52wbyfr";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        features = {
          "spin_no_std" = [ "spin" ];
        };
      };
    "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "libc";
        version = "0.2.62";
        edition = "2015";
        sha256 = "1vsb4pyn6gl6sri6cv5hin5wjfgk7lk2bshzmxb1xnkckjhz4gbx";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "align" "rustc-std-workspace-core" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "libgit2-sys 0.9.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "libgit2-sys";
        version = "0.9.1";
        edition = "2018";
        sha256 = "08cc5k5w9h1gp411lgnz3q7n3bhl4vq6a54bbnalwqqx9i4scb6x";
        libName = "libgit2_sys";
        libPath = "lib.rs";
        authors = [
          "Josh Triplett <josh@joshtriplett.org>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "libc" = "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)";
          "libssh2-sys" = {
            packageId = "libssh2-sys 0.2.12 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "libz-sys" = "libz-sys 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)";
          "openssl-sys" = {
            packageId = "openssl-sys 0.9.51 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = target."unix";
          };
        };
        buildDependencies = {
          "cc" = {
            packageId = "cc 1.0.45 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "parallel" ];
          };
          "pkg-config" = "pkg-config 0.3.16 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "https" = [ "openssl-sys" ];
          "ssh" = [ "libssh2-sys" ];
        };
        resolvedDefaultFeatures = [ "https" "libssh2-sys" "openssl-sys" "ssh" "ssh_key_from_memory" ];
      };
    "libssh2-sys 0.2.12 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "libssh2-sys";
        version = "0.2.12";
        edition = "2015";
        sha256 = "173dcrlqrjyhw8nfliki843rzd4v6d3qa2a8mc8qwj1s8vxpjh6m";
        libName = "libssh2_sys";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "libc" = "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)";
          "libz-sys" = "libz-sys 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)";
          "openssl-sys" = {
            packageId = "openssl-sys 0.9.51 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
        };
        buildDependencies = {
          "cc" = "cc 1.0.45 (registry+https://github.com/rust-lang/crates.io-index)";
          "pkg-config" = "pkg-config 0.3.16 (registry+https://github.com/rust-lang/crates.io-index)";
          "vcpkg" = {
            packageId = "vcpkg 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."env" == "msvc");
          };
        };
        features = {
          "vendored-openssl" = [ "openssl-sys/vendored" ];
        };
      };
    "libz-sys 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "libz-sys";
        version = "1.0.25";
        edition = "2015";
        sha256 = "195jzg8mgjbvmkbpx1rzkzrqm0g2fdivk79v44c9lzl64r3f9fym";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "libc" = "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "cc" = "cc 1.0.45 (registry+https://github.com/rust-lang/crates.io-index)";
          "pkg-config" = "pkg-config 0.3.16 (registry+https://github.com/rust-lang/crates.io-index)";
          "vcpkg" = {
            packageId = "vcpkg 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."env" == "msvc");
          };
        };
        features = {
        };
      };
    "log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "log";
        version = "0.4.8";
        edition = "2015";
        sha256 = "0wvzzzcn89dai172rrqcyz06pzldyyy0lf0w71csmn206rdpnb15";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "kv_unstable_sval" = [ "kv_unstable" "sval/fmt" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    "matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "matches";
        version = "0.1.8";
        edition = "2015";
        sha256 = "03hl636fg6xggy0a26200xs74amk3k9n0908rga2szn68agyz3cv";
        libPath = "lib.rs";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        features = {
        };
      };
    "memchr 2.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "memchr";
        version = "2.2.1";
        edition = "2015";
        sha256 = "1mj5z8lhz6jbapslpq8a39pwcsl1p0jmgp7wgcj7nv4pcqhya7a0";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
    "nodrop 0.1.14 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "nodrop";
        version = "0.1.14";
        edition = "2015";
        sha256 = "0b4adir378n2irr76z8grc9jxif8vlyy01rid8j4r716y9y4dg9r";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
          "use_union" = [ "nodrop-union" ];
        };
      };
    "num_cpus 1.10.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "num_cpus";
        version = "1.10.1";
        edition = "2015";
        sha256 = "1zi5s2cbnqqb0k0kdd6gqn2x97f9bssv44430h6w28awwzppyh8i";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = {
          "libc" = "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "openssl-probe 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "openssl-probe";
        version = "0.1.2";
        edition = "2015";
        sha256 = "1a89fznx26vvaxyrxdvgf6iwai5xvs6xjvpjin68fgvrslv6n15a";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
        };
      };
    "openssl-sys 0.9.51 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "openssl-sys";
        version = "0.9.51";
        edition = "2015";
        sha256 = "1rmrznzzk21ciif9rffgshmlh15r9gbvga9f9jpv4gibn3fc88nx";
        build = "build/main.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = {
          "libc" = "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "autocfg" = "autocfg 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "cc" = "cc 1.0.45 (registry+https://github.com/rust-lang/crates.io-index)";
          "pkg-config" = "pkg-config 0.3.16 (registry+https://github.com/rust-lang/crates.io-index)";
          "vcpkg" = {
            packageId = "vcpkg 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."env" == "msvc");
          };
        };
        features = {
          "vendored" = [ "openssl-src" ];
        };
      };
    "percent-encoding 2.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "percent-encoding";
        version = "2.1.0";
        edition = "2015";
        sha256 = "0i838f2nr81585ckmfymf8l1x1vdmx6n8xqvli0lgcy60yl2axy3";
        libPath = "lib.rs";
        authors = [
          "The rust-url developers"
        ];
        features = {
        };
      };
    "pkg-config 0.3.16 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "pkg-config";
        version = "0.3.16";
        edition = "2015";
        sha256 = "1a2gg5a9l74brz1vzkkzfl8aihd7b4rk3vhbmiahkmpzavywza5j";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
        };
      };
    "ppv-lite86 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ppv-lite86";
        version = "0.2.5";
        edition = "2018";
        sha256 = "1r3bhih75vhl8v7q0flmywl7hmfg902yf3jjzracsh0jlkldij6r";
        authors = [
          "The CryptoCorrosion Contributors"
        ];
        features = {
          "default" = [ "std" "simd" ];
        };
        resolvedDefaultFeatures = [ "default" "simd" "std" ];
      };
    "proc-macro-error 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "proc-macro-error";
        version = "0.2.6";
        edition = "2018";
        sha256 = "0jvxpc2g64ww40179nalqhwlc906qbskdn9j58v34q3d5f6yl9wj";
        authors = [
          "CreepySkeleton <creepy-skeleton@yandex.ru>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = "syn 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "proc-macro2";
        version = "0.4.30";
        edition = "2015";
        sha256 = "0iifv51wrm6r4r2gghw6rray3nv53zcap355bbz1nsmbhj5s09b9";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "unicode-xid" = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
    "proc-macro2 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "proc-macro2";
        version = "1.0.5";
        edition = "2018";
        sha256 = "1h9afwvh0g04rrf31rs8y3r3738vcf69rafw82g3jx38ij5v2arn";
        libName = "proc_macro2";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "unicode-xid" = "unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
    "quick-error 1.2.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "quick-error";
        version = "1.2.2";
        edition = "2015";
        sha256 = "192a3adc5phgpibgqblsdx1b421l5yg9bjbmv552qqq9f37h60k5";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
          "Colin Kiegel <kiegel@gmx.de>"
        ];
        features = {
        };
      };
    "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "quote";
        version = "0.6.13";
        edition = "2015";
        sha256 = "1hrvsin40i4q8swrhlj9057g7nsp0lg02h8zbzmgz14av9mzv8g8";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = {
            packageId = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
    "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "quote";
        version = "1.0.2";
        edition = "2018";
        sha256 = "0r7030w7dymarn92gjgm02hsm04fwsfs6f1l20wdqiyrm9z8rs5q";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = {
            packageId = "proc-macro2 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
    "rand 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand";
        version = "0.7.2";
        edition = "2018";
        sha256 = "1f53047g63b9kyyx1k8wgwzspk4n96w2n2h1a9848ggl9y9h0ik6";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "getrandom" = {
            packageId = "getrandom 0.1.12 (registry+https://github.com/rust-lang/crates.io-index)";
            rename = "getrandom_package";
            optional = true;
          };
          "libc" = {
            packageId = "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = target."unix";
          };
          "rand_chacha" = {
            packageId = "rand_chacha 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = (!(target."os" == "emscripten"));
          };
          "rand_core" = "rand_core 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_hc" = {
            packageId = "rand_hc 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "emscripten");
          };
        };
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "getrandom" = [ "getrandom_package" "rand_core/getrandom" ];
          "nightly" = [ "simd_support" ];
          "simd_support" = [ "packed_simd" ];
          "small_rng" = [ "rand_pcg" ];
          "std" = [ "rand_core/std" "rand_chacha/std" "alloc" "getrandom" ];
          "stdweb" = [ "getrandom_package/stdweb" ];
          "wasm-bindgen" = [ "getrandom_package/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "getrandom" "getrandom_package" "std" ];
      };
    "rand_chacha 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_chacha";
        version = "0.2.1";
        edition = "2018";
        sha256 = "0zpp3wmxhhmripb6bywhzhx5rfwl4dfbny85hpalwdj0sncv0p0k";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
          "The CryptoCorrosion Contributors"
        ];
        dependencies = {
          "c2-chacha" = {
            packageId = "c2-chacha 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "simd" ];
          };
          "rand_core" = "rand_core 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" "simd" ];
          "std" = [ "c2-chacha/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_core";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0q0ssgpj9x5a6fda83nhmfydy7a6c0wvxm0jhncsmjx8qp8gw91m";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "rand_core" = "rand_core 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "serde1" = [ "rand_core/serde1" ];
          "std" = [ "rand_core/std" ];
        };
      };
    "rand_core 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_core";
        version = "0.4.2";
        edition = "2015";
        sha256 = "18zpzwn4bl7lp9f36iacy8mvdnfrhfmzsl35gmln98dcindff2ly";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
    "rand_core 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_core";
        version = "0.5.1";
        edition = "2018";
        sha256 = "19qfnh77bzz0x2gfsk91h0gygy0z1s5l3yyc2j91gmprq60d6s3r";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "getrandom" = {
            packageId = "getrandom 0.1.12 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "serde1" = [ "serde" ];
          "std" = [ "alloc" "getrandom" "getrandom/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "getrandom" "std" ];
      };
    "rand_hc 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_hc";
        version = "0.2.0";
        edition = "2018";
        sha256 = "0592q9kqcna9aiyzy6vp3fadxkkbpfkmi2cnkv48zhybr0v2yf01";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = {
          "rand_core" = "rand_core 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "rand_os 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_os";
        version = "0.1.3";
        edition = "2015";
        sha256 = "0ywwspizgs9g8vzn6m5ix9yg36n15119d6n792h7mk4r5vs0ww4j";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = {
          "cloudabi" = {
            packageId = "cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "cloudabi");
          };
          "fuchsia-cprng" = {
            packageId = "fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "fuchsia");
          };
          "libc" = {
            packageId = "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "rand_core" = {
            packageId = "rand_core 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "std" ];
          };
          "rdrand" = {
            packageId = "rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."env" == "sgx");
          };
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "minwindef" "ntsecapi" "winnt" ];
          };
        };
        features = {
        };
      };
    "rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rdrand";
        version = "0.4.0";
        edition = "2015";
        sha256 = "15hrcasn0v876wpkwab1dwbk9kvqwrb3iv4y4dibb6yxnfvzwajk";
        authors = [
          "Simonas Kazlauskas <rdrand@kazlauskas.me>"
        ];
        dependencies = {
          "rand_core" = {
            packageId = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "redox_syscall";
        version = "0.1.56";
        edition = "2015";
        sha256 = "0jcp8nd947zcy938bz09pzlmi3vyxfdzg92pjxdvvk0699vwcc26";
        libName = "syscall";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        features = {
        };
      };
    "redox_users 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "redox_users";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0kqc1vjmkcvgkxjpqva3nyqd9dixivsh4qswxclyqf7ql8a2g17s";
        authors = [
          "Jose Narvaez <goyox86@gmail.com>"
          "Wesley Hershberger <mggmugginsmc@gmail.com>"
        ];
        dependencies = {
          "failure" = "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_os" = "rand_os 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "redox_syscall" = "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)";
          "rust-argon2" = "rust-argon2 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "regex 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "regex";
        version = "1.3.1";
        edition = "2015";
        sha256 = "0508b01q7iwky5gzp1cc3lpz6al1qam8skgcvkfgxr67nikiz7jn";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "aho-corasick" = {
            packageId = "aho-corasick 0.7.6 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "memchr" = {
            packageId = "memchr 2.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "regex-syntax" = {
            packageId = "regex-syntax 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "thread_local" = {
            packageId = "thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "std" "perf" "unicode" ];
          "perf" = [ "perf-cache" "perf-dfa" "perf-inline" "perf-literal" ];
          "perf-cache" = [ "thread_local" ];
          "perf-literal" = [ "aho-corasick" "memchr" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
          "unicode-age" = [ "regex-syntax/unicode-age" ];
          "unicode-bool" = [ "regex-syntax/unicode-bool" ];
          "unicode-case" = [ "regex-syntax/unicode-case" ];
          "unicode-gencat" = [ "regex-syntax/unicode-gencat" ];
          "unicode-perl" = [ "regex-syntax/unicode-perl" ];
          "unicode-script" = [ "regex-syntax/unicode-script" ];
          "unicode-segment" = [ "regex-syntax/unicode-segment" ];
          "unstable" = [ "pattern" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "aho-corasick" "default" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "thread_local" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
      };
    "regex-syntax 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "regex-syntax";
        version = "0.6.12";
        edition = "2015";
        sha256 = "1lqhddhwzpgq8zfkxhm241n7g4m3yc11fb4098dkgawbxvybr53v";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "unicode" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
        };
        resolvedDefaultFeatures = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
      };
    "remove_dir_all 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "remove_dir_all";
        version = "0.5.2";
        edition = "2015";
        sha256 = "04sxg2ppvxiljc2i13bwvpbi540rf9d2a89cq0wmqf9pjvr3a1wm";
        authors = [
          "Aaronepower <theaaronepower@gmail.com>"
        ];
        dependencies = {
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "std" "errhandlingapi" "winerror" "fileapi" "winbase" ];
          };
        };
        features = {
        };
      };
    "rust-argon2 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rust-argon2";
        version = "0.5.1";
        edition = "2015";
        sha256 = "049dqwn63i6xix55cnh8n4iqm2d3yzpisfsc2568vfmaaa4866d2";
        libName = "argon2";
        authors = [
          "Martijn Rijkeboer <mrr@sru-systems.com>"
        ];
        dependencies = {
          "base64" = "base64 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "blake2b_simd" = "blake2b_simd 0.5.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "crossbeam-utils" = "crossbeam-utils 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "rustc-demangle 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rustc-demangle";
        version = "0.1.16";
        edition = "2015";
        sha256 = "0zmn448d0f898ahfkz7cir0fi0vk84dabjpw84mk6a1r6nf9vzmi";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
    "same-file 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "same-file";
        version = "1.0.5";
        edition = "2015";
        sha256 = "0vn7bc069wsdick0nk0n2j3wvgq2vzb5ix957c35nkhkwlszv4l5";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "winapi-util" = {
            packageId = "winapi-util 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
          };
        };
        features = {
        };
      };
    "smallvec 0.6.10 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "smallvec";
        version = "0.6.10";
        edition = "2015";
        sha256 = "01w7xd79q0bwn683gk4ryw50ad1zzxkny10f7gkbaaj1ax6f4q4h";
        libPath = "lib.rs";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "strsim 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "strsim";
        version = "0.8.0";
        edition = "2015";
        sha256 = "0d3jsdz22wgjyxdakqnvdgmwjdvkximz50d9zfk4qlalw635qcvy";
        authors = [
          "Danny Guo <dannyguo91@gmail.com>"
        ];
        features = {
        };
      };
    "structopt 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "structopt";
        version = "0.3.3";
        edition = "2018";
        sha256 = "1s0skfg8r063n49lswx67lrxk699gzqwiys7xn86v8krhsqbxng5";
        authors = [
          "Guillaume Pinot <texitoi@texitoi.eu>"
          "others"
        ];
        dependencies = {
          "clap" = {
            packageId = "clap 2.33.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "structopt-derive" = "structopt-derive 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "color" = [ "clap/color" ];
          "debug" = [ "clap/debug" ];
          "default" = [ "clap/default" ];
          "doc" = [ "clap/doc" ];
          "lints" = [ "clap/lints" ];
          "no_cargo" = [ "clap/no_cargo" ];
          "paw" = [ "structopt-derive/paw" ];
          "suggestions" = [ "clap/suggestions" ];
          "wrap_help" = [ "clap/wrap_help" ];
          "yaml" = [ "clap/yaml" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "structopt-derive 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "structopt-derive";
        version = "0.3.3";
        edition = "2018";
        sha256 = "1lmlj87ll4ym184rqh7gn9vsymvwgqz18ply12qmbk6p3wc40yh0";
        procMacro = true;
        authors = [
          "Guillaume Pinot <texitoi@texitoi.eu>"
        ];
        dependencies = {
          "heck" = "heck 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "proc-macro-error" = "proc-macro-error 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "proc-macro2" = "proc-macro2 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = {
            packageId = "syn 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "full" ];
          };
        };
        features = {
        };
      };
    "syn 0.15.44 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "syn";
        version = "0.15.44";
        edition = "2015";
        sha256 = "09v11h141grmsnamd5j14mn8vpnfng6p60kdmsm8akz9m0qn7s1n";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = {
            packageId = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "quote" = {
            packageId = "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          };
          "unicode-xid" = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "clone-impls" "default" "derive" "extra-traits" "parsing" "printing" "proc-macro" "quote" "visit" ];
      };
    "syn 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "syn";
        version = "1.0.5";
        edition = "2018";
        sha256 = "08qbk425r8c4q4rrpq1q9wkd3v3bji8nlfaxj8v4l7lkpjkh0xgs";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = {
            packageId = "proc-macro2 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "quote" = {
            packageId = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          };
          "unicode-xid" = "unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "clone-impls" "default" "derive" "full" "parsing" "printing" "proc-macro" "quote" ];
      };
    "synstructure 0.10.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "synstructure";
        version = "0.10.2";
        edition = "2015";
        sha256 = "0bp29grjsim99xm1l6h38mbl98gnk47lf82rawlmws5zn4asdpj4";
        authors = [
          "Nika Layzell <nika@thelayzells.com>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = {
            packageId = "syn 0.15.44 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "visit" "extra-traits" ];
          };
          "unicode-xid" = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "tempfile 3.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "tempfile";
        version = "3.1.0";
        edition = "2018";
        sha256 = "1r7ykxw90p5hm1g46i8ia33j5iwl3q252kbb6b074qhdav3sqndk";
        authors = [
          "Steven Allen <steven@stebalien.com>"
          "The Rust Project Developers"
          "Ashley Mannix <ashleymannix@live.com.au>"
          "Jason White <jasonaw0@gmail.com>"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = {
            packageId = "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "rand" = "rand 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "redox_syscall" = {
            packageId = "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "remove_dir_all" = "remove_dir_all 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "fileapi" "handleapi" "winbase" ];
          };
        };
        features = {
        };
      };
    "termcolor 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "termcolor";
        version = "1.0.5";
        edition = "2015";
        sha256 = "16266x431hbkmvyh0pv4yn7wm2kagicqaq6hy4fabn93c08sx0gp";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "wincolor" = {
            packageId = "wincolor 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
          };
        };
        features = {
        };
      };
    "textwrap 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "textwrap";
        version = "0.11.0";
        edition = "2015";
        sha256 = "0s25qh49n7kjayrdj4q3v0jk0jc6vy88rdw0bvgfxqlscpqpxi7d";
        authors = [
          "Martin Geisler <martin@geisler.net>"
        ];
        dependencies = {
          "unicode-width" = "unicode-width 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "thread_local";
        version = "0.3.6";
        edition = "2015";
        sha256 = "02rksdwjmz2pw9bmgbb4c0bgkbq5z6nvg510sq1s6y2j1gam0c7i";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = {
          "lazy_static" = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "unicode-bidi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-bidi";
        version = "0.3.4";
        edition = "2015";
        sha256 = "0lcd6jasrf8p9p0q20qyf10c6xhvw40m2c4rr105hbk6zy26nj1q";
        libName = "unicode_bidi";
        authors = [
          "The Servo Project Developers"
        ];
        dependencies = {
          "matches" = "matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "flame_it" = [ "flame" "flamer" ];
          "with_serde" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "unicode-normalization 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-normalization";
        version = "0.1.8";
        edition = "2015";
        sha256 = "1pb26i2xd5zz0icabyqahikpca0iwj2jd4145pczc4bb7p641dsz";
        authors = [
          "kwantam <kwantam@gmail.com>"
        ];
        dependencies = {
          "smallvec" = "smallvec 0.6.10 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "unicode-segmentation 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-segmentation";
        version = "1.3.0";
        edition = "2015";
        sha256 = "0jnns99wpjjpqzdn9jiplsr003rr41i95c008jb4inccb3avypp0";
        authors = [
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
      };
    "unicode-width 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-width";
        version = "0.1.6";
        edition = "2015";
        sha256 = "1mss965j7d8pv7z7zg6qfkcb7lyhxkxvbh8akzr4xxxx3vzazwsi";
        authors = [
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "std" "core" "compiler_builtins" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-xid";
        version = "0.1.0";
        edition = "2015";
        sha256 = "05wdmwlfzxhq3nhsxn6wx4q8dhxzzfb9szsz6wiw092m1rjj01zj";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-xid";
        version = "0.2.0";
        edition = "2015";
        sha256 = "1c85gb3p3qhbjvfyjb31m06la4f024jx319k10ig7n47dz2fk8v7";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "url 2.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "url";
        version = "2.1.0";
        edition = "2015";
        sha256 = "0mvv28fvrrv3hc064gjgpqjvjn1j151qbi9i5bcilal6rkcd1brq";
        authors = [
          "The rust-url developers"
        ];
        dependencies = {
          "idna" = "idna 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "matches" = "matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "percent-encoding" = "percent-encoding 2.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "vcpkg 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "vcpkg";
        version = "0.2.7";
        edition = "2015";
        sha256 = "1lwykbbscbdy4nhrfidgg3rk2xw9cvx5672sx1c97wm8y3vjpcd9";
        authors = [
          "Jim McGrath <jimmc2@gmail.com>"
        ];
        features = {
        };
      };
    "vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "vec_map";
        version = "0.8.1";
        edition = "2015";
        sha256 = "1jj2nrg8h3l53d43rwkpkikq5a5x15ms4rf1rw92hp5lrqhi8mpi";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Jorge Aparicio <japaricious@gmail.com>"
          "Alexis Beingessner <a.beingessner@gmail.com>"
          "Brian Anderson <>"
          "tbu- <>"
          "Manish Goregaokar <>"
          "Aaron Turon <aturon@mozilla.com>"
          "Adolfo Ochagavía <>"
          "Niko Matsakis <>"
          "Steven Fackler <>"
          "Chase Southwood <csouth3@illinois.edu>"
          "Eduard Burtescu <>"
          "Florian Wilkens <>"
          "Félix Raimundo <>"
          "Tibor Benke <>"
          "Markus Siemens <markus@m-siemens.de>"
          "Josh Branchaud <jbranchaud@gmail.com>"
          "Huon Wilson <dbau.pp@gmail.com>"
          "Corey Farwell <coref@rwell.org>"
          "Aaron Liblong <>"
          "Nick Cameron <nrc@ncameron.org>"
          "Patrick Walton <pcwalton@mimiga.net>"
          "Felix S Klock II <>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
          "Sean McArthur <sean.monstar@gmail.com>"
          "Vadim Petrochenkov <>"
        ];
        features = {
          "eders" = [ "serde" ];
        };
      };
    "walkdir 2.2.9 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "walkdir";
        version = "2.2.9";
        edition = "2015";
        sha256 = "04k0pqbd8p36wxr8003r644ymka5jr5kn1p8xaz9r3nylgwlwjmq";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "same-file" = "same-file 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "std" "winnt" ];
          };
          "winapi-util" = {
            packageId = "winapi-util 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
          };
        };
        features = {
        };
      };
    "wasi 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "wasi";
        version = "0.7.0";
        edition = "2018";
        sha256 = "1lqknxy8x9mrsy0pna6xlwzypbhli73nbai9gmin5f4z1ghlng25";
        authors = [
          "The Cranelift Project Developers"
        ];
        features = {
          "default" = [ "alloc" ];
          "rustc-dep-of-std" = [ "compiler_builtins" "core" "rustc-std-workspace-alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" ];
      };
    "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi";
        version = "0.3.8";
        edition = "2015";
        sha256 = "084ialbgww1vxry341fmkg5crgpvab3w52ahx1wa54yqjgym0vxs";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = {
          "winapi-i686-pc-windows-gnu" = {
            packageId = "winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (stdenv.hostPlatform.config == "i686-pc-windows-gnu");
          };
          "winapi-x86_64-pc-windows-gnu" = {
            packageId = "winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (stdenv.hostPlatform.config == "x86_64-pc-windows-gnu");
          };
        };
        features = {
          "debug" = [ "impl-debug" ];
        };
        resolvedDefaultFeatures = [ "consoleapi" "errhandlingapi" "fileapi" "handleapi" "knownfolders" "minwinbase" "minwindef" "ntsecapi" "objbase" "processenv" "shlobj" "std" "winbase" "wincon" "winerror" "winnt" ];
      };
    "winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-i686-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "05ihkij18r4gamjpxj4gra24514can762imjzlmak5wlzidplzrp";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
    "winapi-util 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-util";
        version = "0.1.2";
        edition = "2015";
        sha256 = "07jj7rg7nndd7bqhjin1xphbv8kb5clvhzpqpxkvm3wl84r3mj1h";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "std" "consoleapi" "errhandlingapi" "fileapi" "minwindef" "processenv" "winbase" "wincon" "winerror" "winnt" ];
          };
        };
        features = {
        };
      };
    "winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-x86_64-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0n1ylmlsb8yg1v583i4xy0qmqg42275flvbc51hdqjjfjcl9vlbj";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
    "wincolor 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "wincolor";
        version = "1.0.2";
        edition = "2015";
        sha256 = "0bxgy5pf0pzykb21xipb41yfxs60inrs5kyavllphbrka5aqps89";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "minwindef" "wincon" ];
          };
          "winapi-util" = "winapi-util 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
  };

  #
  # crate2nix/default.nix (excerpt start)
  # 

  # Target (platform) data for conditional dependencies.
  # This corresponds to what buildRustCrate is setting.
  target = {
      unix = true;
      windows = false;

      # This doesn't appear to be officially documented anywhere yet.
      # See https://github.com/rust-lang-nursery/rust-forge/issues/101.
      os = if stdenv.hostPlatform.isDarwin
        then "macos"
        else stdenv.hostPlatform.parsed.kernel.name;
      arch = stdenv.hostPlatform.parsed.cpu.name;
      family = "unix";
      env = "gnu";
      endian = if stdenv.hostPlatform.parsed.cpu.significantByte.name == "littleEndian" then "little" else "big";
      pointer_width = toString stdenv.hostPlatform.parsed.cpu.bits;
      vendor = stdenv.hostPlatform.parsed.vendor.name;
      debug_assertions = false;
  };

  /* Filters common temp files and build files */
  # TODO(pkolloch): Substitute with gitignore filter
  sourceFilter = name: type:
    let baseName = builtins.baseNameOf (builtins.toString name);
    in ! (
      # Filter out git
      baseName == ".gitignore" ||
      (type == "directory" && baseName == ".git" ) ||

      # Filter out build results
      (type == "directory" && (
        baseName == "target" ||
        baseName == "_site" ||
        baseName == ".sass-cache" ||
        baseName == ".jekyll-metadata" ||
        baseName == "build-artifacts"
        )) ||

      # Filter out nix-build result symlinks
      (type == "symlink" && lib.hasPrefix "result" baseName) ||

      # Filter out IDE config
      (type == "directory" && (
        baseName == ".idea" ||
        baseName == ".vscode"
        )) ||
      lib.hasSuffix ".iml" baseName ||

      # Filter out nix build files
      # lib.hasSuffix ".nix" baseName ||

      # Filter out editor backup / swap files.
      lib.hasSuffix "~" baseName ||
      builtins.match "^\\.sw[a-z]$$" baseName != null ||
      builtins.match "^\\..*\\.sw[a-z]$$" baseName != null ||
      lib.hasSuffix ".tmp" baseName ||
      lib.hasSuffix ".bak" baseName ||
      baseName == "tests.nix"
    );

  /* A restricted overridable version of  buildRustCrateWithFeaturesImpl. */
  buildRustCrateWithFeatures = {packageId, features}:
    lib.makeOverridable
      ({features}: buildRustCrateWithFeaturesImpl {inherit packageId features;})
      { inherit features; };

  /* Returns a buildRustCrate derivation for the given packageId and features. */
  buildRustCrateWithFeaturesImpl = { crateConfigs? crates, packageId, features } @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);

    let mergedFeatures = mergePackageFeatures args;
        buildByPackageId = packageId:
          let features = mergedFeatures."${packageId}" or [];
              crateConfig = lib.filterAttrs (n: v: n != "resolvedDefaultFeatures") crateConfigs."${packageId}";
              dependencies =
                dependencyDerivations buildByPackageId features (crateConfig.dependencies or {});
              buildDependencies =
                dependencyDerivations buildByPackageId features (crateConfig.buildDependencies or {});
              dependenciesWithRenames =
                lib.filterAttrs (n: v: v ? "rename")
                  (crateConfig.buildDependencies or {} // crateConfig.dependencies or {});
              crateRenames =
                lib.mapAttrs (name: value: value.rename or name) dependenciesWithRenames;
          in buildRustCrate (crateConfig // { inherit features dependencies buildDependencies crateRenames; });
    in buildByPackageId packageId;

  /* Returns the actual derivations for the given dependencies. */
  dependencyDerivations = buildByPackageId: features: dependencies:
    assert (builtins.isFunction buildByPackageId);
    assert (builtins.isList features);
    assert (builtins.isAttrs dependencies);

    let enabledDependencies = filterEnabledDependencies dependencies features;
        depDerivation = dependencyName: dependency:
        buildByPackageId (dependencyPackageId dependency);
    in builtins.attrValues (lib.mapAttrs depDerivation enabledDependencies);

  /* Returns differences between cargo default features and crate2nix default features.
   *
   * This is useful for verifying the feature resolution in crate2nix.
   */
  diffDefaultPackageFeatures = {crateConfigs ? crates, packageId}:
    assert (builtins.isAttrs crateConfigs);

    let prefixValues = prefix: lib.mapAttrs (n: v: { "${prefix}" = v; });
        mergedFeatures =
          prefixValues
            "crate2nix"
            (mergePackageFeatures {inherit crateConfigs packageId; features = ["default"]; });
        configs = prefixValues "cargo" crateConfigs;
        combined = lib.foldAttrs (a: b: a // b) {} [ mergedFeatures configs ];
        onlyInCargo = builtins.attrNames (lib.filterAttrs (n: v: !(v ? "crate2nix" ) && (v ? "cargo")) combined);
        onlyInCrate2Nix = builtins.attrNames (lib.filterAttrs (n: v: (v ? "crate2nix" ) && !(v ? "cargo")) combined);
        differentFeatures = lib.filterAttrs
          (n: v:
          (v ? "crate2nix" )
          && (v ? "cargo")
          && (v.crate2nix.features or []) != (v."cargo".resolved_default_features or []))
          combined;
    in builtins.toJSON { inherit onlyInCargo onlyInCrate2Nix differentFeatures; };

  /* Returns the feature configuration by package id for the given input crate. */
  mergePackageFeatures = {crateConfigs ? crates, packageId, features} @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);

    let packageFeatures = listOfPackageFeatures args;
        grouped = lib.groupBy (x: x.packageId) packageFeatures;
    in lib.mapAttrs (n: v: sortedUnique (builtins.concatLists (builtins.map (v: v.features) v))) grouped;

  /* Returns a { packageId, features } attribute set for every package needed for building the
     package for the given packageId with the given features.

     Returns multiple, potentially conflicting attribute sets for dependencies that are reachable
     by multiple paths in the dependency tree.
  */
  listOfPackageFeatures = {crateConfigs ? crates, packageId, features, dependencyPath? [packageId]} @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);

    let
        crateConfig = crateConfigs."${packageId}" or (builtins.throw "Package not found: ${packageId}");
        expandedFeatures = expandFeatures (crateConfig.features or {}) features;

        depWithResolvedFeatures = dependencyName: dependency:
          let packageId = dependencyPackageId dependency;
              features = dependencyFeatures expandedFeatures dependencyName dependency;
          in { inherit packageId features; };

        resolveDependencies = path: dependencies:
          assert (builtins.isAttrs dependencies);

          let enabledDependencies = filterEnabledDependencies dependencies expandedFeatures;
              directDependencies =
                builtins.attrValues (lib.mapAttrs depWithResolvedFeatures enabledDependencies);
          in builtins.concatMap
            ({packageId, features}: listOfPackageFeatures {
              # This is purely for debugging.
              dependencyPath = dependencyPath ++ [path packageId];
              inherit crateConfigs packageId features;
            })
             directDependencies;

        resolvedDependencies = builtins.concatLists
          [
            (resolveDependencies "dependencies" (crateConfig.dependencies or {}))
            (resolveDependencies "buildDependencies" (crateConfig.buildDependencies or {}))
          ];

    in [{inherit packageId; features = expandedFeatures;}] ++ resolvedDependencies;

  /* Returns the enabled dependencies given the enabled features. */
  filterEnabledDependencies = dependencies: features:
    assert (builtins.isAttrs dependencies);
    assert (builtins.isList features);

    lib.filterAttrs
      (depName: dep:
        builtins.isString dep
        || dep.target or true
        && (!(dep.optional or false) || builtins.any (doesFeatureEnableDependency depName) features))
      dependencies;

  /* Returns whether the given feature should enable the given dependency. */
  doesFeatureEnableDependency = depName: feature:
    let prefix = "${depName}/";
        len = builtins.stringLength prefix;
        startsWithPrefix = builtins.substring 0 len feature == prefix;
    in feature == depName || startsWithPrefix;

  /* Returns the expanded features for the given inputFeatures by applying the rules in featureMap.

     featureMap is an attribute set which maps feature names to lists of further feature names to enable in case this
     feature is selected.
  */
  expandFeatures = featureMap: inputFeatures:
    assert (builtins.isAttrs featureMap);
    assert (builtins.isList inputFeatures);

    let expandFeature = feature:
          assert (builtins.isString feature);
          [feature] ++ (expandFeatures featureMap (featureMap."${feature}" or []));
        outFeatures = builtins.concatMap expandFeature inputFeatures;
    in sortedUnique outFeatures;

  /* The package ID of the given dependency. */
  dependencyPackageId = dependency: if builtins.isString dependency then dependency else dependency.packageId;

  /* Returns the actual dependencies for the given dependency. */
  dependencyFeatures = features: dependencyName: dependency:
    assert (builtins.isList features);
    assert (builtins.isString dependencyName);
    assert (builtins.isAttrs dependency || builtins.isString dependency);

    let defaultOrNil = if builtins.isString dependency || dependency.usesDefaultFeatures or true
                       then ["default"]
                       else [];
        explicitFeatures = if builtins.isString dependency then [] else dependency.features or [];
        additionalDependencyFeatures =

          let dependencyPrefix = dependencyName+"/";
              dependencyFeatures =
                builtins.filter (f: lib.hasPrefix dependencyPrefix f) features;
          in builtins.map (lib.removePrefix dependencyPrefix) dependencyFeatures;
    in
      defaultOrNil ++ explicitFeatures ++ additionalDependencyFeatures;

  /* Sorts and removes duplicates from a list of strings. */
  sortedUnique = features:
    assert (builtins.isList features);
    assert (builtins.all builtins.isString features);

    let outFeaturesSet = lib.foldl (set: feature: set // {"${feature}" = 1;} ) {} features;
        outFeaturesUnique = builtins.attrNames outFeaturesSet;
    in builtins.sort (a: b: a < b) outFeaturesUnique;

  #
  # crate2nix/default.nix (excerpt end)
  # 

}
