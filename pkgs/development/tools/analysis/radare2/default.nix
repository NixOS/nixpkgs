{stdenv, fetchFromGitHub
, callPackage
, ninja, meson , pkgconfig
, libusb, readline, libewf, perl, zlib, openssl
, libuv
, gtk2 ? null, vte ? null, gtkdialog ? null
, python ? null
, ruby ? null
, lua ? null
, useX11, rubyBindings, pythonBindings, luaBindings
}:

assert useX11 -> (gtk2 != null && vte != null && gtkdialog != null);
assert rubyBindings -> ruby != null;
assert pythonBindings -> python != null;


let
  inherit (stdenv.lib) optional;

  generic = {
    version_commit,
    gittap,
    gittip,
    rev,
    version,
    sha256,
    cs_tip,
    cs_sha256
  }:
    stdenv.mkDerivation rec {
      name = "radare2-${version}";

      src = fetchFromGitHub {
        owner = "radare";
        repo = "radare2";
        inherit rev sha256;
      };

      postPatch = let
        capstone = fetchFromGitHub {
          owner = "aquynh";
          repo = "capstone";
          # version from $sourceRoot/shlr/Makefile
          rev = cs_tip;
          sha256 = cs_sha256;
        };
      in ''
        if ! grep -F "CS_TIP=${cs_tip}" shlr/Makefile; then echo "CS_TIP mismatch"; exit 1; fi
        # When using meson, it expects capstone source relative to build directory
        mkdir -p build/shlr
        ln -s ${capstone} build/shlr/capstone
      '';

      postInstall = ''
        ln -s $out/bin/radare2 $out/bin/r2
        install -D -m755 $src/binr/r2pm/r2pm $out/bin/r2pm
      '';

      mesonFlags = [
        "-Dr2_version_commit=${version_commit}"
        "-Dr2_gittap=${gittap}"
        "-Dr2_gittip=${gittip}"
        # 2.8.0 expects this, but later it becomes an option with default=false.
        "-Dcapstone_in_builddir=true"

        "-Duse_sys_openssl=true"
        "-Duse_sys_zlib=true"
      ];

      enableParallelBuilding = true;

      nativeBuildInputs = [ pkgconfig ninja meson ];
      buildInputs = [ readline libusb libewf perl zlib openssl libuv ]
        ++ optional useX11 [gtkdialog vte gtk2]
        ++ optional rubyBindings [ruby]
        ++ optional pythonBindings [python]
        ++ optional luaBindings [lua];

      meta = {
        description = "unix-like reverse engineering framework and commandline tools";
        homepage = http://radare.org/;
        license = stdenv.lib.licenses.gpl2Plus;
        maintainers = with stdenv.lib.maintainers; [raskin makefu mic92];
        platforms = with stdenv.lib.platforms; linux;
        inherit version;
      };
  };
in {
  #<generated>
  # DO NOT EDIT! Automatically generated by ./update.py
  radare2 = generic {
    version_commit = "20315";
    gittap = "3.1.3";
    gittip = "57dd0b4e7ec70cc95f859651b1b63b076b8df7a7";
    rev = "3.1.3";
    version = "3.1.3";
    sha256 = "17bd7i9lbr0nxa3llw354mppx44xi7bjwif7g7wxw0zcjlfxnk5d";
    cs_tip = "f01c267f889e932b069a559ce0c604c1ae986c0a";
    cs_sha256 = "15ifnql2gi2f9g8j60hc4hbxbvi2qn1r110ry32qmlz55svxh67y";
  };
  r2-for-cutter = generic {
    version_commit = "20315";
    gittap = "2.9.0-310-gcb62c376b";
    gittip = "cb62c376bef6c7427019a7c28910c33c364436dd";
    rev = "cb62c376bef6c7427019a7c28910c33c364436dd";
    version = "2018-10-07";
    sha256 = "0z4nr1d2ca8ibq34441j15pj22wh46brcbr00j5hcqvn8y2lh96l";
    cs_tip = "e2c1cd46c06744beaceff42dd882de3a90f0a37c";
    cs_sha256 = "1czzqj8zdjgh7h2ixi26ij3mm4bgm4xw2slin6fv73nic8yaw722";
  };
  #</generated>
}
