{ lib
, stdenv
, fetchFromGitHub
, maven
, git
, nodejs
, nodePackages
, python3
, makeWrapper
, prefetch-yarn-deps
, fetchYarnDeps
, buildNpmPackage
, mkYarnModules
, yarn
, jre_headless
, gawk
}:

let
  version = "3.62.0-01";

  src = fetchFromGitHub {
    owner = "sonatype";
    repo = "nexus-public";
    rev = "tags/release-${version}";
    hash = "sha256-tzBOs9Fdhq6kY2pY259gDosxHwUrvsYZliPTUtnzuNA=";
  };

  offline-cache = fetchYarnDeps {
    # this yarn.lock is generated by running yarn in the root directory of the
    # src. We cannot use the upstream yarn.lock, as yarn2nix only supports yarn
    # v1 syntax.
    yarnLock = ./yarn.lock;
    hash = "sha256-M+6365ZWPPPSvEanpWqc9J9JxLb5jQujvhSQeeXRzVU=";
  };
in
maven.buildMavenPackage rec {
  pname = "nexus";
  inherit version;
  inherit src;

  mvnHash = "sha256-O8lvb/ZPiFX0E+HiZKBjZtbS7URtMbmWab+aMNyed4o=";

  mvnFetchExtraArgs = {

    nativeBuildInputs = [
      git
    ];

    postPatch = ''
      # disable yarn during the fetch stage
      substituteInPlace pom.xml \
        --replace "<goal>yarn</goal>" " "
      substituteInPlace plugins/nexus-coreui-plugin/pom.xml \
        --replace "<goal>yarn</goal>" " "
    '';

  };
  mvnParameters = "-Dmaven.test.skip=true";

  nativeBuildInputs = [
    git
    makeWrapper
    nodejs
    yarn
    nodePackages.node-gyp
    python3
    prefetch-yarn-deps
  ];

  postPatch = ''
    substituteInPlace components/nexus-rapture/package.json --replace "workspace:" ""
    substituteInPlace plugins/nexus-coreui-plugin/package.json --replace "workspace:" ""
    substituteInPlace pom.xml \
      --replace "<goal>install-node-and-yarn</goal>" " "

    mkdir -p components/nexus-ui-plugin/target/node/yarn/dist/bin/
    mkdir -p components/nexus-rapture/target/node/yarn/dist/bin/
    ln -s ${yarn}/bin/yarn components/nexus-ui-plugin/target/node/yarn/dist/bin/
    ln -s ${yarn}/bin/yarn components/nexus-rapture/target/node/yarn/dist/bin/
  '';

  preBuild = ''
    export HOME=$NIX_BUILD_TOP/fake_home
    # use our yarn.lock instead of upstream
    cp ${./yarn.lock} yarn.lock
    ${yarn}/bin/yarn config --offline set yarn-offline-mirror ${offline-cache}
    fixup-yarn-lock ./yarn.lock

    ${yarn}/bin/yarn install --offline
    patchShebangs node_modules/
  '';

  installPhase = ''
    runHook preInstall

    mkdir -p $out
    cp -rfv assemblies/nexus-base-template/target/assembly/* $out
    rm -fv $out/bin/nexus.bat


    chmod +x $out/bin/nexus
    wrapProgram $out/bin/nexus \
       --set JAVA_HOME ${jre_headless} \
       --set ALTERNATIVE_NAME "nexus" \
       --set KARAF_BASE "$out" \
       --set KARAF_DATA "/var/lib/nexus/" \
       --set KARAF_ETC "$out/etc/karaf" \
       --prefix PATH "${lib.makeBinPath [ gawk ]}"

    runHook postInstall
  '';

  meta = with lib; {
    description = "Repository manager for binary software components";
    homepage = "https://www.sonatype.com/products/sonatype-nexus-oss";
    license = licenses.epl10;
    platforms = platforms.all;
    maintainers = with maintainers; [ aespinosa ironpinguin s1341 zaninime ];
  };
}
