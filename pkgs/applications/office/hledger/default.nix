{ lib, haskellPackages, haskell, removeReferencesTo, installShellFiles, makeWrapper }:

let
  static = haskell.lib.compose.justStaticExecutables haskellPackages.hledger;

in
  (haskell.lib.compose.overrideCabal (drv: {
    buildTools = (drv.buildTools or []) ++ [ installShellFiles makeWrapper removeReferencesTo ];

#      remove-references-to \
#        -t ${haskellPackages.hledger-types} \
#        $out/bin/hledger
    postInstall = ''
      installShellCompletion --name hledger shell-completion/hledger-completion.bash
    '';
  }) static).overrideAttrs (drv: {
    # These libraries are still referenced, because they generate
    # a `Paths_*` module for figuring out their version.
    # The `Paths_*` module is generated by Cabal, and contains the
    # version, but also paths to e.g. the data directories, which
    # lead to a transitive runtime dependency on the whole GHC distribution.
    # This should ideally be fixed in haskellPackages (or even Cabal),
    # but a minimal pandoc is important enough to patch it manually.
    # TODO
    #disallowedReferences = [ haskellPackages.hledger-types ];
  })
