diff --git a/src/services/log.js b/src/services/log.js
index 4f29994..1e89e0a 100644
--- a/src/services/log.js
+++ b/src/services/log.js
@@ -1,14 +1,5 @@
 "use strict";
 
-const fs = require('fs');
-const dataDir = require('./data_dir');
-
-if (!fs.existsSync(dataDir.LOG_DIR)) {
-    fs.mkdirSync(dataDir.LOG_DIR, 0o700);
-}
-
-let logFile = null;
-
 const SECOND = 1000;
 const MINUTE = 60 * SECOND;
 const HOUR = 60 * MINUTE;
@@ -16,45 +7,7 @@ const DAY = 24 * HOUR;
 
 const NEW_LINE = process.platform === "win32" ? '\r\n' : '\n';
 
-let todaysMidnight = null;
-
-initLogFile();
-
-function getTodaysMidnight() {
-    const now = new Date();
-
-    return new Date(now.getFullYear(), now.getMonth(), now.getDate());
-}
-
-function initLogFile() {
-    todaysMidnight = getTodaysMidnight();
-
-    const path = dataDir.LOG_DIR + '/trilium-' + formatDate() + '.log';
-
-    if (logFile) {
-        logFile.end();
-    }
-
-    logFile = fs.createWriteStream(path, {flags: 'a'});
-}
-
-function checkDate(millisSinceMidnight) {
-    if (millisSinceMidnight >= DAY) {
-        initLogFile();
-
-        millisSinceMidnight -= DAY;
-    }
-
-    return millisSinceMidnight;
-}
-
 function log(str) {
-    let millisSinceMidnight = Date.now() - todaysMidnight.getTime();
-
-    millisSinceMidnight = checkDate(millisSinceMidnight);
-
-    logFile.write(formatTime(millisSinceMidnight) + ' ' + str + NEW_LINE);
-
     console.log(str);
 }
 
@@ -83,37 +36,6 @@ function request(req, res, timeMs, responseLength = "?") {
         `${res.statusCode} ${req.method} ${req.url} with ${responseLength} bytes took ${timeMs}ms`);
 }
 
-function pad(num) {
-    num = Math.floor(num);
-
-    return num < 10 ? ("0" + num) : num.toString();
-}
-
-function padMilli(num) {
-    if (num < 10) {
-        return "00" + num;
-    }
-    else if (num < 100) {
-        return "0" + num;
-    }
-    else {
-        return num.toString();
-    }
-}
-
-function formatTime(millisSinceMidnight) {
-    return pad(millisSinceMidnight / HOUR)
-        + ":" + pad((millisSinceMidnight % HOUR) / MINUTE)
-        + ":" + pad((millisSinceMidnight % MINUTE) / SECOND)
-        + "." + padMilli(millisSinceMidnight % SECOND);
-}
-
-function formatDate() {
-    return pad(todaysMidnight.getFullYear())
-        + "-" + pad(todaysMidnight.getMonth() + 1)
-        + "-" + pad(todaysMidnight.getDate());
-}
-
 module.exports = {
     info,
     error,
