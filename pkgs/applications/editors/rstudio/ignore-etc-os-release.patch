diff --git a/cmake/globals.cmake b/cmake/globals.cmake
index e7df58a..7d208e4 100644
--- a/cmake/globals.cmake
+++ b/cmake/globals.cmake
@@ -23,11 +23,6 @@ if(UNIX AND NOT APPLE)
    set(LINUX TRUE)
 endif()
 
-# read /etc/os-release
-if(LINUX)
-   include(OsRelease)
-endif()
-
 # version info
 if ("$ENV{RSTUDIO_VERSION_MAJOR}" STREQUAL "")
   string(TIMESTAMP CPACK_PACKAGE_VERSION_MAJOR "%Y")
diff --git a/cmake/modules/OsRelease.cmake b/cmake/modules/OsRelease.cmake
index 81a9e1f..8b13789 100644
--- a/cmake/modules/OsRelease.cmake
+++ b/cmake/modules/OsRelease.cmake
@@ -1,24 +1 @@
-#
-# OsRelease.cmake
-#
-# Copyright (C) 2022 by Posit Software, PBC
-#
-# This program is licensed to you under the terms of version 3 of the
-# GNU Affero General Public License. This program is distributed WITHOUT
-# ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING THOSE OF NON-INFRINGEMENT,
-# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Please refer to the
-# AGPL (http://www.gnu.org/licenses/agpl-3.0.txt) for more details.
-#
-#
-
-# reads and parses /etc/os-release into CMake variables
-file(STRINGS "/etc/os-release" OS_RELEASE)
-foreach(LINE ${OS_RELEASE})
-	string(FIND "${LINE}" "=" INDEX)
-	string(SUBSTRING "${LINE}" 0 "${INDEX}" KEY)
-	math(EXPR INDEX "${INDEX} + 1")
-	string(SUBSTRING "${LINE}" "${INDEX}" -1 VALUE)
-	separate_arguments(VALUE UNIX_COMMAND "${VALUE}")
-	set("OS_RELEASE_${KEY}" "${VALUE}" CACHE INTERNAL "/etc/os-release: ${KEY}")
-endforeach()
 
diff --git a/package/linux/.gitignore b/package/linux/.gitignore
index 185956a..69d0c36 100644
--- a/package/linux/.gitignore
+++ b/package/linux/.gitignore
@@ -1,3 +1 @@
-iterate*
-cmake*
-
+iterate*
\ No newline at end of file
diff --git a/package/linux/CMakeLists.txt b/package/linux/CMakeLists.txt
index e8272ee..217f5b5 100644
--- a/package/linux/CMakeLists.txt
+++ b/package/linux/CMakeLists.txt
@@ -147,78 +147,6 @@ if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/CMakeOverlay.txt")
    include(CMakeOverlay.txt)
 endif()
 
-# dynamically configured debian control scripts--process to temporary files
-configure_file(${CMAKE_CURRENT_SOURCE_DIR}/debian-control/${DEBIAN_POSTINST}
-               ${CMAKE_CURRENT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/postinst)
-configure_file(${CMAKE_CURRENT_SOURCE_DIR}/debian-control/${DEBIAN_POSTRM}
-               ${CMAKE_CURRENT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/postrm)
-
-# Lintian insists on 0755 permissions on postinst and postrm files, but by
-# default CMake just copies the permissions set on the original (*.in) files,
-# which can change when those files are created/altered by source control. We
-# set 0755 manually on these files to avoid any dependencies on particular
-# permissions bits on the source files.
-file(COPY ${CMAKE_CURRENT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/postinst
-          ${CMAKE_CURRENT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/postrm
-          DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/debian-control
-          FILE_PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ
-          GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
-
-set(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA "${CMAKE_CURRENT_BINARY_DIR}/debian-control/postinst;${CMAKE_CURRENT_BINARY_DIR}/debian-control/postrm")
-
-# dynamically configured rpm scripts (only works with cmake 2.8.1 or higher).
-# alternatively you can get CPackRPM.cmake from the cmake tip and copy it into
-# your local cmake modules directory -- this is what we currently do
-configure_file(${CMAKE_CURRENT_SOURCE_DIR}/rpm-script/${RPM_POSTINST}
-               ${CMAKE_CURRENT_BINARY_DIR}/rpm-script/postinst.sh)
-configure_file(${CMAKE_CURRENT_SOURCE_DIR}/rpm-script/${RPM_POSTRM}
-               ${CMAKE_CURRENT_BINARY_DIR}/rpm-script/postrm.sh)
-
-set(CPACK_RPM_SPEC_INSTALL_POST "/bin/true")
-set(CPACK_RPM_POST_INSTALL_SCRIPT_FILE "${CMAKE_CURRENT_BINARY_DIR}/rpm-script/postinst.sh")
-set(CPACK_RPM_POST_UNINSTALL_SCRIPT_FILE "${CMAKE_CURRENT_BINARY_DIR}/rpm-script/postrm.sh")
-
-# /usr and /usr/lib are already present in CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST,
-# but some Linux distributions complain without this explicit suppression
-set(CPACK_RPM_SPEC_MORE_DEFINE "%define ignore \#")
-set(CPACK_RPM_USER_FILELIST
-  "%ignore /usr"
-  "%ignore /usr/lib")
-
-set(CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST_ADDITION
-  "/usr/share/applications"
-  "/usr/share/icons"
-  "/usr/share/pixmaps"
-  "/usr/share/mime/packages"
-  "/usr/share/mime"
-  "/usr/share/icons/hicolor"
-  "/usr/share/icons/hicolor/16x16"
-  "/usr/share/icons/hicolor/16x16/apps"
-  "/usr/share/icons/hicolor/24x24/apps"
-  "/usr/share/icons/hicolor/256x256/apps"
-  "/usr/share/icons/hicolor/32x32/apps"
-  "/usr/share/icons/hicolor/48x48/apps"
-  "/usr/share/icons/hicolor/24x24"
-  "/usr/share/icons/hicolor/256x256"
-  "/usr/share/icons/hicolor/32x32"
-  "/usr/share/icons/hicolor/48x48"
-  "/usr/share/icons/hicolor"
-  "/usr/share/icons/hicolor/16x16"
-  "/usr/share/icons/hicolor/16x16/apps"
-  "/usr/share/icons/hicolor/24x24/apps"
-  "/usr/share/icons/hicolor/256x256/apps"
-  "/usr/share/icons/hicolor/32x32/apps"
-  "/usr/share/icons/hicolor/48x48/apps"
-  "/usr/share/icons/hicolor/16x16/mimetypes"
-  "/usr/share/icons/hicolor/24x24/mimetypes"
-  "/usr/share/icons/hicolor/256x256/mimetypes"
-  "/usr/share/icons/hicolor/32x32/mimetypes"
-  "/usr/share/icons/hicolor/48x48/mimetypes"
-  "/usr/share/icons/hicolor/24x24"
-  "/usr/share/icons/hicolor/256x256"
-  "/usr/share/icons/hicolor/32x32"
-  "/usr/share/icons/hicolor/48x48")
-
 # package file name
 if(DEFINED RSTUDIO_PACKAGE_FILE_NAME_OVERRIDE)
   set(RSTUDIO_PACKAGE_FILE_NAME "${RSTUDIO_PACKAGE_FILE_NAME_OVERRIDE}")
diff --git a/src/cpp/session/CMakeLists.txt b/src/cpp/session/CMakeLists.txt
index d63daff..c46d75d 100644
--- a/src/cpp/session/CMakeLists.txt
+++ b/src/cpp/session/CMakeLists.txt
@@ -455,18 +455,6 @@ endforeach()
 configure_file(${CMAKE_CURRENT_SOURCE_DIR}/../../../NOTICE
                ${CMAKE_CURRENT_SOURCE_DIR}/resources COPYONLY)
 
-# configure custom panmirror script into the resources directory
-#
-# On Linux and Windows builders, found in the tools directory, on Mac and dev
-# environments found in the source tree.
-set(RSTUDIO_PANMIRROR_SCRIPT ${CMAKE_CURRENT_SOURCE_DIR}/../../gwt/lib/quarto/packages/editor-server/src/resources/md-writer.lua)
-if(NOT EXISTS "${RSTUDIO_PANMIRROR_SCRIPT}")
-   set(RSTUDIO_PANMIRROR_SCRIPT ${RSTUDIO_TOOLS_ROOT}/../src/gwt/lib/quarto/packages/editor-server/src/resources/md-writer.lua)
-endif()
-file(MAKE_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/resources/panmirror-scripts)
-configure_file(${RSTUDIO_PANMIRROR_SCRIPT}
-               ${CMAKE_CURRENT_SOURCE_DIR}/resources/panmirror-scripts/ COPYONLY)
-
 # set include directories
 include_directories(
    include
