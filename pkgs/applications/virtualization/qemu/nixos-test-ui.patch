diff --git a/qapi/ui.json b/qapi/ui.json
index 006616aa77..e83487caee 100644
--- a/qapi/ui.json
+++ b/qapi/ui.json
@@ -1488,7 +1488,8 @@
     { 'name': 'curses', 'if': 'CONFIG_CURSES' },
     { 'name': 'cocoa', 'if': 'CONFIG_COCOA' },
     { 'name': 'spice-app', 'if': 'CONFIG_SPICE' },
-    { 'name': 'dbus', 'if': 'CONFIG_DBUS_DISPLAY' }
+    { 'name': 'dbus', 'if': 'CONFIG_DBUS_DISPLAY' },
+    { 'name': 'nixos-test' }
   ]
 }
 
@@ -1515,6 +1516,7 @@
 { 'union'   : 'DisplayOptions',
   'base'    : { 'type'           : 'DisplayType',
                 '*full-screen'   : 'bool',
+                '*capture-file'  : 'str',
                 '*window-close'  : 'bool',
                 '*show-cursor'   : 'bool',
                 '*gl'            : 'DisplayGLMode' },
diff --git a/qemu-options.hx b/qemu-options.hx
index 56efe3d153..9f86166cbc 100644
--- a/qemu-options.hx
+++ b/qemu-options.hx
@@ -2073,6 +2073,7 @@ DEF("display", HAS_ARG, QEMU_OPTION_display,
 #if defined(CONFIG_COCOA)
     "-display cocoa[,show-cursor=on|off][,left-command-key=on|off]\n"
 #endif
+    "-display nixos-test=<filename>\n"
     "-display none\n"
     "                select display backend type\n"
     "                The default display is equivalent to\n                "
@@ -2093,6 +2094,10 @@ SRST
     Select type of display to use. Use ``-display help`` to list the available
     display types. Valid values for type are
 
+    ``nixos-test``
+        Write raw video frames into the given filename instead of displaying
+        anything.
+
     ``spice-app[,gl=on|off]``
         Start QEMU as a Spice server and launch the default Spice client
         application. The Spice server will redirect the serial consoles
@@ -2580,6 +2585,15 @@ SRST
         control requests.
 ERST
 
+DEF("nixos-test", HAS_ARG, QEMU_OPTION_nixos_test,
+    "-nixos-test <filename>  shorthand for -display nixos-test=<filename>\n",
+    QEMU_ARCH_ALL)
+SRST
+``-nixos-test filename``
+    Instead of displaying anything, capture all the output as raw video frames
+    into the file name given by ``filename``.
+ERST
+
 ARCHHEADING(, QEMU_ARCH_I386)
 
 ARCHHEADING(i386 target only:, QEMU_ARCH_I386)
diff --git a/softmmu/vl.c b/softmmu/vl.c
index 3db4fd2680..253f1e5c96 100644
--- a/softmmu/vl.c
+++ b/softmmu/vl.c
@@ -1105,6 +1105,15 @@ static void parse_display(const char *p)
             error_report("VNC requires a display argument vnc=<display>");
             exit(1);
         }
+    } else if (strstart(p, "nixos-test", &opts)) {
+        dpy.type = DISPLAY_TYPE_NIXOS_TEST;
+        if (*opts == '=') {
+            dpy.capture_file = opts + 1;
+        } else {
+            error_report("the nixos-test option requires a filename argument"
+                         " nixos-test=<filename>");
+            exit(1);
+        }
     } else {
         parse_display_qapi(p);
     }
@@ -3226,6 +3235,10 @@ void qemu_init(int argc, char **argv)
                 dpy.has_full_screen = true;
                 dpy.full_screen = true;
                 break;
+            case QEMU_OPTION_nixos_test:
+                dpy.type = DISPLAY_TYPE_NIXOS_TEST;
+                dpy.capture_file = optarg;
+                break;
             case QEMU_OPTION_pidfile:
                 pid_file = optarg;
                 break;
diff --git a/ui/meson.build b/ui/meson.build
index d81609fb0e..3157393190 100644
--- a/ui/meson.build
+++ b/ui/meson.build
@@ -50,6 +50,10 @@ system_ss.add(when: vnc, if_false: files('vnc-stubs.c'))
 
 ui_modules = {}
 
+nixos_test_ss = ss.source_set()
+nixos_test_ss.add(files('nixos-test.c'))
+ui_modules += {'nixos-test': nixos_test_ss}
+
 if curses.found()
   curses_ss = ss.source_set()
   curses_ss.add(when: [curses, iconv], if_true: [files('curses.c'), pixman])
