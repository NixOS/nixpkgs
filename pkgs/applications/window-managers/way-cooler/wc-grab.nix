# Generated by carnix 0.6.5: carnix -o wc-grab.nix Cargo.lock
{ lib, stdenv, buildRustCrate, fetchgit }:
let kernel = stdenv.hostPlatform.parsed.kernel.name;
    updateFeatures = f: up: functions: builtins.deepSeq f (lib.lists.foldl' (features: fun: fun features) (lib.attrsets.recursiveUpdate f up) functions);
    mapFeatures = features: map (fun: fun { features = features; });
    mkFeatures = feat: lib.lists.foldl (features: featureName:
      if feat.${featureName} or false then
        [ featureName ] ++ features
      else
        features
    ) [] (builtins.attrNames feat);
in
rec {
  wc_grab = f: wc_grab_0_3_0 { features = wc_grab_0_3_0_features { wc_grab_0_3_0 = f; }; };
  adler32_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "adler32";
    version = "1.0.0";
    authors = [ "Remi Rampin <remirampin@gmail.com>" ];
    sha256 = "0pj35a7m4apn5xjg9n63gsdj6w8iw76zg4p9znrij43xnfqp084w";
    inherit dependencies buildDependencies features;
  };
  ansi_term_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ansi_term";
    version = "0.9.0";
    authors = [ "ogham@bsago.me" "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>" ];
    sha256 = "1vcd8m2hglrdi4zmqnkkz5zy3c73ifgii245k7vj6qr5dzpn9hij";
    inherit dependencies buildDependencies features;
  };
  atty_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "atty";
    version = "0.2.2";
    authors = [ "softprops <d.tangren@gmail.com>" ];
    sha256 = "05c6jvrxljp4s1aycgq2z3y56f7f5yvc56v25cqlmpc1qx65z7ba";
    inherit dependencies buildDependencies features;
  };
  bitflags_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "0.7.0";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1hr72xg5slm0z4pxs2hiy4wcyx3jva70h58b7mid8l0a4c8f7gn5";
    inherit dependencies buildDependencies features;
  };
  bitflags_0_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "0.8.0";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1h489m0wzhng5gvvc40jgdbaf0ac3rgkka31vwinhsjmfvrqcc4v";
    inherit dependencies buildDependencies features;
  };
  byteorder_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "byteorder";
    version = "1.0.0";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "14pdnds4517vcpablc51vv76hvc3glnpkpbb7qdil591q7lyb0m1";
    inherit dependencies buildDependencies features;
  };
  clap_2_22_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "clap";
    version = "2.22.0";
    authors = [ "Kevin K. <kbknapp@gmail.com>" ];
    sha256 = "0gdgyfh3ydpd2px4xh0i5qd6bhi2c5f43bqv9z4kla9vkmmfiavd";
    inherit dependencies buildDependencies features;
  };
  color_quant_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "color_quant";
    version = "1.0.0";
    authors = [ "nwin <nwin@users.noreply.github.com>" ];
    sha256 = "0jwr40lr115zm2bydk1wja12gcxrmgsx0n1z1pipq00sab71maaj";
    inherit dependencies buildDependencies features;
  };
  dbus_0_5_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dbus";
    version = "0.5.2";
    authors = [ "David Henningsson <diwic@ubuntu.com>" ];
    sha256 = "1ga3p2myqxbz34n2bbw4gk1ipf76mjr8r2rvrvnalwggymzfkhj7";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  deflate_0_7_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "deflate";
    version = "0.7.5";
    authors = [ "oyvindln <oyvindln@users.noreply.github.com>" ];
    sha256 = "18bcmdkyshnzpkxx22b29gn55g6bk5ysy98ghjpjhxy3hky96rvy";
    inherit dependencies buildDependencies features;
  };
  deque_0_3_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "deque";
    version = "0.3.1";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Samuel Fredrickson <kinghajj@gmail.com>" "Linus FÃ¤rnstrand <faern@faern.net>" "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "04x8i5aagxmslk350i8qszyw7kmvrqc3d99g4qi1xnfmr61y7m68";
    inherit dependencies buildDependencies features;
  };
  enum_primitive_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "enum_primitive";
    version = "0.1.1";
    authors = [ "Anders Kaseorg <andersk@mit.edu>" ];
    sha256 = "1a225rlsz7sz3nn14dar71kp2f9v08s3rwl6j55xp51mv01f695y";
    inherit dependencies buildDependencies features;
  };
  error_chain_0_7_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "error-chain";
    version = "0.7.2";
    authors = [ "Brian Anderson <banderson@mozilla.com>" "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" "Yamakaky <yamakaky@yamaworld.fr>" ];
    sha256 = "0b1r4ggdgy1djfvz2s4l5kirmfsmxd286y6wx0p9ahv2phb7inyi";
    inherit dependencies buildDependencies features;
  };
  gif_0_9_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "gif";
    version = "0.9.1";
    authors = [ "nwin <nwin@users.noreply.github.com>" ];
    sha256 = "16s7b0rqc6gg1fcbppakm3jy2q462w3qvykcmcmifmg7q7lwsg6r";
    inherit dependencies buildDependencies features;
  };
  glob_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "glob";
    version = "0.2.11";
    authors = [ "The Rust Project Developers" ];
    sha256 = "104389jjxs8r2f5cc9p0axhjmndgln60ih5x4f00ccgg9d3zarlf";
    inherit dependencies buildDependencies features;
  };
  image_0_12_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "image";
    version = "0.12.3";
    authors = [ "ccgn" "bvssvni <bvssvni@gmail.com>" "nwin" "TyOverby <ty@pre-alpha.com>" ];
    sha256 = "12xdzi29vr19gz3h93c1ihyvyv9xar9sp0inrjwwvlbjvn8nn0p9";
    libPath = "./src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  inflate_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "inflate";
    version = "0.1.1";
    authors = [ "nwin <nwin@users.noreply.github.com>" ];
    sha256 = "112kh9hjcjjxdybl032mdhpwnr3qxw8j0ch6hwanwpcf3gz42g1h";
    inherit dependencies buildDependencies features;
  };
  jpeg_decoder_0_1_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "jpeg-decoder";
    version = "0.1.11";
    authors = [ "Ulf Nilsson <kaksmet@gmail.com>" ];
    sha256 = "1xm39c1cff5gkczs164371hk2gpkjpkbw63k4f8mjnpwwpn9xk4n";
    inherit dependencies buildDependencies features;
  };
  kernel32_sys_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "kernel32-sys";
    version = "0.2.2";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lrw1hbinyvr6cp28g60z97w32w8vsk6pahk64pmrv2fmby8srfj";
    libName = "kernel32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  libc_0_2_21_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libc";
    version = "0.2.21";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0glj3lxwc8358cfw9pb5dd4zr9iynzj6w2ly59nshrggsw021j75";
    inherit dependencies buildDependencies features;
  };
  lzw_0_10_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lzw";
    version = "0.10.0";
    authors = [ "nwin <nwin@users.noreply.github.com>" ];
    sha256 = "1cfsy2w26kbz9bjaqp9dh1wyyh47rpmhwvj4jpc1rmffbf438fvb";
    inherit dependencies buildDependencies features;
  };
  metadeps_1_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "metadeps";
    version = "1.1.1";
    authors = [ "Josh Triplett <josh@joshtriplett.org>" ];
    sha256 = "1px8v94jn4ps63gqmvgsfcqxrwjhpa9z4xr0y1lh95wn2063fsar";
    inherit dependencies buildDependencies features;
  };
  num_integer_0_1_33_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-integer";
    version = "0.1.33";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1rhy9lf4lhl7r8278n73mi9y55v9a71639as3v92bj2gk1x4k729";
    inherit dependencies buildDependencies features;
  };
  num_iter_0_1_33_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-iter";
    version = "0.1.33";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1xjzf2p2vaqwknkr4s8ka5hn6cpr5rsshnydbpkn2pvapfzdrqd3";
    inherit dependencies buildDependencies features;
  };
  num_rational_0_1_36_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-rational";
    version = "0.1.36";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0jibhs8xiap2wlv1xjwdvhyj4yrxwfisqbnfm53vjm5ldlijp87p";
    inherit dependencies buildDependencies features;
  };
  num_traits_0_1_37_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-traits";
    version = "0.1.37";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0rwzfmdjq6iz6plva2gi7agvy1w9sjs7aqjh0p115w57xiix2224";
    inherit dependencies buildDependencies features;
  };
  num_cpus_1_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num_cpus";
    version = "1.3.0";
    authors = [ "Sean McArthur <sean.monstar@gmail.com>" ];
    sha256 = "0i0zm6qh932k9b67qf7f1vsczkdim5kg9qv73m7y5hhw1i781rrb";
    inherit dependencies buildDependencies features;
  };
  pkg_config_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "pkg-config";
    version = "0.3.9";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "06k8fxgrsrxj8mjpjcq1n7mn2p1shpxif4zg9y5h09c7vy20s146";
    inherit dependencies buildDependencies features;
  };
  png_0_6_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "png";
    version = "0.6.2";
    authors = [ "nwin <nwin@users.noreply.github.com>" ];
    sha256 = "03i78w5jbvk9y6babfrh7h0akvg81pcyyhniilv24z5v0vh5jvjs";
    inherit dependencies buildDependencies features;
  };
  rand_0_3_15_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.3.15";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1fs30rc1xic40s1n7l3y7pxzfifpy03mgrvhy5ggp5p7zjfv3rr8";
    inherit dependencies buildDependencies features;
  };
  rayon_0_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rayon";
    version = "0.6.0";
    authors = [ "Niko Matsakis <niko@alum.mit.edu>" ];
    sha256 = "0y2693bari5j4h46mjzkyc9lkfbnq2d1p0ldyn6sb02jn63lpw97";
    inherit dependencies buildDependencies features;
  };
  scoped_threadpool_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "scoped_threadpool";
    version = "0.1.7";
    authors = [ "Marvin LÃ¶bel <loebel.marvin@gmail.com>" ];
    sha256 = "0dg58f18i6v071640062n0vymr4h42cnj0xy8a7b80sc0mddykyk";
    inherit dependencies buildDependencies features;
  };
  strsim_0_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "strsim";
    version = "0.6.0";
    authors = [ "Danny Guo <dannyguo91@gmail.com>" ];
    sha256 = "1lz85l6y68hr62lv4baww29yy7g8pg20dlr0lbaswxmmcb0wl7gd";
    inherit dependencies buildDependencies features;
  };
  term_size_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "term_size";
    version = "0.2.3";
    authors = [ "Kevin K. <kbknapp@gmail.com>" "Benjamin Sago <ogham@bsago.me>" ];
    sha256 = "16b7gq2dmz7mws4vgai7whxy4xkg4yvlhm7spz0q6jyipqfq87ci";
    inherit dependencies buildDependencies features;
  };
  toml_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "toml";
    version = "0.2.1";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0p4rkaqhmk4fp6iqpxfgp3p98hxhbs2wmla3fq531n875h922yqs";
    inherit dependencies buildDependencies features;
  };
  unicode_segmentation_1_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-segmentation";
    version = "1.1.0";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "10hk7wy0217jwdbp27p36skwkig5lbhk482yfzij9m87h247rry0";
    inherit dependencies buildDependencies features;
  };
  unicode_width_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-width";
    version = "0.1.4";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "1rp7a04icn9y5c0lm74nrd4py0rdl0af8bhdwq7g478n1xifpifl";
    inherit dependencies buildDependencies features;
  };
  vec_map_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "vec_map";
    version = "0.7.0";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Jorge Aparicio <japaricious@gmail.com>" "Alexis Beingessner <a.beingessner@gmail.com>" "Brian Anderson <>" "tbu- <>" "Manish Goregaokar <>" "Aaron Turon <aturon@mozilla.com>" "Adolfo OchagavÃ­a <>" "Niko Matsakis <>" "Steven Fackler <>" "Chase Southwood <csouth3@illinois.edu>" "Eduard Burtescu <>" "Florian Wilkens <>" "FÃ©lix Raimundo <>" "Tibor Benke <>" "Markus Siemens <markus@m-siemens.de>" "Josh Branchaud <jbranchaud@gmail.com>" "Huon Wilson <dbau.pp@gmail.com>" "Corey Farwell <coref@rwell.org>" "Aaron Liblong <>" "Nick Cameron <nrc@ncameron.org>" "Patrick Walton <pcwalton@mimiga.net>" "Felix S Klock II <>" "Andrew Paseltiner <apaseltiner@gmail.com>" "Sean McArthur <sean.monstar@gmail.com>" "Vadim Petrochenkov <>" ];
    sha256 = "0jawvi83b1nm101nam0w71kdyh7cy3fr0l9qj1hfcjvzvihfk2l1";
    inherit dependencies buildDependencies features;
  };
  wc_grab_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "wc-grab";
    version = "0.3.0";
    authors = [ "Timidger <APragmaticPlace@gmail.com>" ];
    sha256 = "02dkjxffzh38h3hiwfypkjv0g8dsfkp9wk20j04x4qydg4dr8a8h";
    inherit dependencies buildDependencies features;
  };
  winapi_0_2_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.2.8";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0a45b58ywf12vb7gvj6h3j264nydynmzyqz8d8rqxsj6icqv82as";
    inherit dependencies buildDependencies features;
  };
  winapi_build_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-build";
    version = "0.1.1";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lxlpi87rkhxcwp2ykf1ldw3p108hwm24nywf3jfrvmff4rjhqga";
    libName = "build";
    inherit dependencies buildDependencies features;
  };
  adler32_1_0_0 = { features?(adler32_1_0_0_features {}) }: adler32_1_0_0_ {};
  adler32_1_0_0_features = f: updateFeatures f ({
    adler32_1_0_0.default = (f.adler32_1_0_0.default or true);
  }) [];
  ansi_term_0_9_0 = { features?(ansi_term_0_9_0_features {}) }: ansi_term_0_9_0_ {};
  ansi_term_0_9_0_features = f: updateFeatures f ({
    ansi_term_0_9_0.default = (f.ansi_term_0_9_0.default or true);
  }) [];
  atty_0_2_2 = { features?(atty_0_2_2_features {}) }: atty_0_2_2_ {
    dependencies = (if !(kernel == "windows") then mapFeatures features ([ libc_0_2_21 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
  };
  atty_0_2_2_features = f: updateFeatures f ({
    atty_0_2_2.default = (f.atty_0_2_2.default or true);
    kernel32_sys_0_2_2.default = true;
    libc_0_2_21.default = true;
    winapi_0_2_8.default = true;
  }) [ libc_0_2_21_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  bitflags_0_7_0 = { features?(bitflags_0_7_0_features {}) }: bitflags_0_7_0_ {};
  bitflags_0_7_0_features = f: updateFeatures f ({
    bitflags_0_7_0.default = (f.bitflags_0_7_0.default or true);
  }) [];
  bitflags_0_8_0 = { features?(bitflags_0_8_0_features {}) }: bitflags_0_8_0_ {
    features = mkFeatures (features.bitflags_0_8_0 or {});
  };
  bitflags_0_8_0_features = f: updateFeatures f (rec {
    bitflags_0_8_0.default = (f.bitflags_0_8_0.default or true);
    bitflags_0_8_0.i128 =
      (f.bitflags_0_8_0.i128 or false) ||
      (f.bitflags_0_8_0.unstable or false) ||
      (bitflags_0_8_0.unstable or false);
  }) [];
  byteorder_1_0_0 = { features?(byteorder_1_0_0_features {}) }: byteorder_1_0_0_ {
    features = mkFeatures (features.byteorder_1_0_0 or {});
  };
  byteorder_1_0_0_features = f: updateFeatures f (rec {
    byteorder_1_0_0.default = (f.byteorder_1_0_0.default or true);
    byteorder_1_0_0.std =
      (f.byteorder_1_0_0.std or false) ||
      (f.byteorder_1_0_0.default or false) ||
      (byteorder_1_0_0.default or false);
  }) [];
  clap_2_22_0 = { features?(clap_2_22_0_features {}) }: clap_2_22_0_ {
    dependencies = mapFeatures features ([ bitflags_0_8_0 unicode_segmentation_1_1_0 unicode_width_0_1_4 vec_map_0_7_0 ]
      ++ (if features.clap_2_22_0.ansi_term or false then [ ansi_term_0_9_0 ] else [])
      ++ (if features.clap_2_22_0.atty or false then [ atty_0_2_2 ] else [])
      ++ (if features.clap_2_22_0.strsim or false then [ strsim_0_6_0 ] else [])
      ++ (if features.clap_2_22_0.term_size or false then [ term_size_0_2_3 ] else []));
    features = mkFeatures (features.clap_2_22_0 or {});
  };
  clap_2_22_0_features = f: updateFeatures f (rec {
    ansi_term_0_9_0.default = true;
    atty_0_2_2.default = true;
    bitflags_0_8_0.default = true;
    clap_2_22_0.ansi_term =
      (f.clap_2_22_0.ansi_term or false) ||
      (f.clap_2_22_0.color or false) ||
      (clap_2_22_0.color or false);
    clap_2_22_0.atty =
      (f.clap_2_22_0.atty or false) ||
      (f.clap_2_22_0.color or false) ||
      (clap_2_22_0.color or false);
    clap_2_22_0.clippy =
      (f.clap_2_22_0.clippy or false) ||
      (f.clap_2_22_0.lints or false) ||
      (clap_2_22_0.lints or false);
    clap_2_22_0.color =
      (f.clap_2_22_0.color or false) ||
      (f.clap_2_22_0.default or false) ||
      (clap_2_22_0.default or false);
    clap_2_22_0.default = (f.clap_2_22_0.default or true);
    clap_2_22_0.strsim =
      (f.clap_2_22_0.strsim or false) ||
      (f.clap_2_22_0.suggestions or false) ||
      (clap_2_22_0.suggestions or false);
    clap_2_22_0.suggestions =
      (f.clap_2_22_0.suggestions or false) ||
      (f.clap_2_22_0.default or false) ||
      (clap_2_22_0.default or false);
    clap_2_22_0.term_size =
      (f.clap_2_22_0.term_size or false) ||
      (f.clap_2_22_0.wrap_help or false) ||
      (clap_2_22_0.wrap_help or false);
    clap_2_22_0.wrap_help =
      (f.clap_2_22_0.wrap_help or false) ||
      (f.clap_2_22_0.default or false) ||
      (clap_2_22_0.default or false);
    clap_2_22_0.yaml-rust =
      (f.clap_2_22_0.yaml-rust or false) ||
      (f.clap_2_22_0.yaml or false) ||
      (clap_2_22_0.yaml or false);
    strsim_0_6_0.default = true;
    term_size_0_2_3.default = true;
    unicode_segmentation_1_1_0.default = true;
    unicode_width_0_1_4.default = true;
    vec_map_0_7_0.default = true;
  }) [ ansi_term_0_9_0_features atty_0_2_2_features bitflags_0_8_0_features strsim_0_6_0_features term_size_0_2_3_features unicode_segmentation_1_1_0_features unicode_width_0_1_4_features vec_map_0_7_0_features ];
  color_quant_1_0_0 = { features?(color_quant_1_0_0_features {}) }: color_quant_1_0_0_ {};
  color_quant_1_0_0_features = f: updateFeatures f ({
    color_quant_1_0_0.default = (f.color_quant_1_0_0.default or true);
  }) [];
  dbus_0_5_2 = { features?(dbus_0_5_2_features {}) }: dbus_0_5_2_ {
    dependencies = mapFeatures features ([ libc_0_2_21 ]);
    buildDependencies = mapFeatures features ([ metadeps_1_1_1 ]);
    features = mkFeatures (features.dbus_0_5_2 or {});
  };
  dbus_0_5_2_features = f: updateFeatures f ({
    dbus_0_5_2.default = (f.dbus_0_5_2.default or true);
    libc_0_2_21.default = true;
    metadeps_1_1_1.default = true;
  }) [ libc_0_2_21_features metadeps_1_1_1_features ];
  deflate_0_7_5 = { features?(deflate_0_7_5_features {}) }: deflate_0_7_5_ {
    dependencies = mapFeatures features ([ adler32_1_0_0 byteorder_1_0_0 ]);
  };
  deflate_0_7_5_features = f: updateFeatures f ({
    adler32_1_0_0.default = true;
    byteorder_1_0_0.default = true;
    deflate_0_7_5.default = (f.deflate_0_7_5.default or true);
  }) [ adler32_1_0_0_features byteorder_1_0_0_features ];
  deque_0_3_1 = { features?(deque_0_3_1_features {}) }: deque_0_3_1_ {
    dependencies = mapFeatures features ([ rand_0_3_15 ]);
  };
  deque_0_3_1_features = f: updateFeatures f ({
    deque_0_3_1.default = (f.deque_0_3_1.default or true);
    rand_0_3_15.default = true;
  }) [ rand_0_3_15_features ];
  enum_primitive_0_1_1 = { features?(enum_primitive_0_1_1_features {}) }: enum_primitive_0_1_1_ {
    dependencies = mapFeatures features ([ num_traits_0_1_37 ]);
  };
  enum_primitive_0_1_1_features = f: updateFeatures f ({
    enum_primitive_0_1_1.default = (f.enum_primitive_0_1_1.default or true);
    num_traits_0_1_37.default = (f.num_traits_0_1_37.default or false);
  }) [ num_traits_0_1_37_features ];
  error_chain_0_7_2 = { features?(error_chain_0_7_2_features {}) }: error_chain_0_7_2_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.error_chain_0_7_2 or {});
  };
  error_chain_0_7_2_features = f: updateFeatures f (rec {
    error_chain_0_7_2.backtrace =
      (f.error_chain_0_7_2.backtrace or false) ||
      (f.error_chain_0_7_2.default or false) ||
      (error_chain_0_7_2.default or false);
    error_chain_0_7_2.default = (f.error_chain_0_7_2.default or true);
    error_chain_0_7_2.example_generated =
      (f.error_chain_0_7_2.example_generated or false) ||
      (f.error_chain_0_7_2.default or false) ||
      (error_chain_0_7_2.default or false);
  }) [];
  gif_0_9_1 = { features?(gif_0_9_1_features {}) }: gif_0_9_1_ {
    dependencies = mapFeatures features ([ color_quant_1_0_0 lzw_0_10_0 ]);
    features = mkFeatures (features.gif_0_9_1 or {});
  };
  gif_0_9_1_features = f: updateFeatures f (rec {
    color_quant_1_0_0.default = true;
    gif_0_9_1.default = (f.gif_0_9_1.default or true);
    gif_0_9_1.libc =
      (f.gif_0_9_1.libc or false) ||
      (f.gif_0_9_1.c_api or false) ||
      (gif_0_9_1.c_api or false);
    gif_0_9_1.raii_no_panic =
      (f.gif_0_9_1.raii_no_panic or false) ||
      (f.gif_0_9_1.default or false) ||
      (gif_0_9_1.default or false);
    lzw_0_10_0.default = true;
  }) [ color_quant_1_0_0_features lzw_0_10_0_features ];
  glob_0_2_11 = { features?(glob_0_2_11_features {}) }: glob_0_2_11_ {};
  glob_0_2_11_features = f: updateFeatures f ({
    glob_0_2_11.default = (f.glob_0_2_11.default or true);
  }) [];
  image_0_12_3 = { features?(image_0_12_3_features {}) }: image_0_12_3_ {
    dependencies = mapFeatures features ([ byteorder_1_0_0 enum_primitive_0_1_1 glob_0_2_11 num_iter_0_1_33 num_rational_0_1_36 num_traits_0_1_37 ]
      ++ (if features.image_0_12_3.gif or false then [ gif_0_9_1 ] else [])
      ++ (if features.image_0_12_3.jpeg-decoder or false then [ jpeg_decoder_0_1_11 ] else [])
      ++ (if features.image_0_12_3.png or false then [ png_0_6_2 ] else [])
      ++ (if features.image_0_12_3.scoped_threadpool or false then [ scoped_threadpool_0_1_7 ] else []));
    features = mkFeatures (features.image_0_12_3 or {});
  };
  image_0_12_3_features = f: updateFeatures f (rec {
    byteorder_1_0_0.default = true;
    enum_primitive_0_1_1.default = true;
    gif_0_9_1.default = true;
    glob_0_2_11.default = true;
    image_0_12_3.bmp =
      (f.image_0_12_3.bmp or false) ||
      (f.image_0_12_3.default or false) ||
      (image_0_12_3.default or false) ||
      (f.image_0_12_3.ico or false) ||
      (image_0_12_3.ico or false);
    image_0_12_3.default = (f.image_0_12_3.default or true);
    image_0_12_3.gif =
      (f.image_0_12_3.gif or false) ||
      (f.image_0_12_3.gif_codec or false) ||
      (image_0_12_3.gif_codec or false);
    image_0_12_3.gif_codec =
      (f.image_0_12_3.gif_codec or false) ||
      (f.image_0_12_3.default or false) ||
      (image_0_12_3.default or false);
    image_0_12_3.hdr =
      (f.image_0_12_3.hdr or false) ||
      (f.image_0_12_3.default or false) ||
      (image_0_12_3.default or false);
    image_0_12_3.ico =
      (f.image_0_12_3.ico or false) ||
      (f.image_0_12_3.default or false) ||
      (image_0_12_3.default or false);
    image_0_12_3.jpeg =
      (f.image_0_12_3.jpeg or false) ||
      (f.image_0_12_3.default or false) ||
      (image_0_12_3.default or false);
    image_0_12_3.jpeg-decoder =
      (f.image_0_12_3.jpeg-decoder or false) ||
      (f.image_0_12_3.jpeg or false) ||
      (image_0_12_3.jpeg or false);
    image_0_12_3.png =
      (f.image_0_12_3.png or false) ||
      (f.image_0_12_3.png_codec or false) ||
      (image_0_12_3.png_codec or false);
    image_0_12_3.png_codec =
      (f.image_0_12_3.png_codec or false) ||
      (f.image_0_12_3.default or false) ||
      (image_0_12_3.default or false) ||
      (f.image_0_12_3.ico or false) ||
      (image_0_12_3.ico or false);
    image_0_12_3.ppm =
      (f.image_0_12_3.ppm or false) ||
      (f.image_0_12_3.default or false) ||
      (image_0_12_3.default or false);
    image_0_12_3.scoped_threadpool =
      (f.image_0_12_3.scoped_threadpool or false) ||
      (f.image_0_12_3.hdr or false) ||
      (image_0_12_3.hdr or false);
    image_0_12_3.tga =
      (f.image_0_12_3.tga or false) ||
      (f.image_0_12_3.default or false) ||
      (image_0_12_3.default or false);
    image_0_12_3.tiff =
      (f.image_0_12_3.tiff or false) ||
      (f.image_0_12_3.default or false) ||
      (image_0_12_3.default or false);
    image_0_12_3.webp =
      (f.image_0_12_3.webp or false) ||
      (f.image_0_12_3.default or false) ||
      (image_0_12_3.default or false);
    jpeg_decoder_0_1_11.default = true;
    num_iter_0_1_33.default = true;
    num_rational_0_1_36.default = (f.num_rational_0_1_36.default or false);
    num_traits_0_1_37.default = true;
    png_0_6_2.default = true;
    scoped_threadpool_0_1_7.default = true;
  }) [ byteorder_1_0_0_features enum_primitive_0_1_1_features gif_0_9_1_features glob_0_2_11_features jpeg_decoder_0_1_11_features num_iter_0_1_33_features num_rational_0_1_36_features num_traits_0_1_37_features png_0_6_2_features scoped_threadpool_0_1_7_features ];
  inflate_0_1_1 = { features?(inflate_0_1_1_features {}) }: inflate_0_1_1_ {
    features = mkFeatures (features.inflate_0_1_1 or {});
  };
  inflate_0_1_1_features = f: updateFeatures f ({
    inflate_0_1_1.default = (f.inflate_0_1_1.default or true);
  }) [];
  jpeg_decoder_0_1_11 = { features?(jpeg_decoder_0_1_11_features {}) }: jpeg_decoder_0_1_11_ {
    dependencies = mapFeatures features ([ byteorder_1_0_0 ]
      ++ (if features.jpeg_decoder_0_1_11.rayon or false then [ rayon_0_6_0 ] else []));
    features = mkFeatures (features.jpeg_decoder_0_1_11 or {});
  };
  jpeg_decoder_0_1_11_features = f: updateFeatures f (rec {
    byteorder_1_0_0.default = true;
    jpeg_decoder_0_1_11.default = (f.jpeg_decoder_0_1_11.default or true);
    jpeg_decoder_0_1_11.rayon =
      (f.jpeg_decoder_0_1_11.rayon or false) ||
      (f.jpeg_decoder_0_1_11.default or false) ||
      (jpeg_decoder_0_1_11.default or false);
    rayon_0_6_0.default = true;
  }) [ byteorder_1_0_0_features rayon_0_6_0_features ];
  kernel32_sys_0_2_2 = { features?(kernel32_sys_0_2_2_features {}) }: kernel32_sys_0_2_2_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  kernel32_sys_0_2_2_features = f: updateFeatures f ({
    kernel32_sys_0_2_2.default = (f.kernel32_sys_0_2_2.default or true);
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  libc_0_2_21 = { features?(libc_0_2_21_features {}) }: libc_0_2_21_ {
    features = mkFeatures (features.libc_0_2_21 or {});
  };
  libc_0_2_21_features = f: updateFeatures f (rec {
    libc_0_2_21.default = (f.libc_0_2_21.default or true);
    libc_0_2_21.use_std =
      (f.libc_0_2_21.use_std or false) ||
      (f.libc_0_2_21.default or false) ||
      (libc_0_2_21.default or false);
  }) [];
  lzw_0_10_0 = { features?(lzw_0_10_0_features {}) }: lzw_0_10_0_ {
    features = mkFeatures (features.lzw_0_10_0 or {});
  };
  lzw_0_10_0_features = f: updateFeatures f (rec {
    lzw_0_10_0.default = (f.lzw_0_10_0.default or true);
    lzw_0_10_0.raii_no_panic =
      (f.lzw_0_10_0.raii_no_panic or false) ||
      (f.lzw_0_10_0.default or false) ||
      (lzw_0_10_0.default or false);
  }) [];
  metadeps_1_1_1 = { features?(metadeps_1_1_1_features {}) }: metadeps_1_1_1_ {
    dependencies = mapFeatures features ([ error_chain_0_7_2 pkg_config_0_3_9 toml_0_2_1 ]);
  };
  metadeps_1_1_1_features = f: updateFeatures f ({
    error_chain_0_7_2.default = (f.error_chain_0_7_2.default or false);
    metadeps_1_1_1.default = (f.metadeps_1_1_1.default or true);
    pkg_config_0_3_9.default = true;
    toml_0_2_1.default = (f.toml_0_2_1.default or false);
  }) [ error_chain_0_7_2_features pkg_config_0_3_9_features toml_0_2_1_features ];
  num_integer_0_1_33 = { features?(num_integer_0_1_33_features {}) }: num_integer_0_1_33_ {
    dependencies = mapFeatures features ([ num_traits_0_1_37 ]);
  };
  num_integer_0_1_33_features = f: updateFeatures f ({
    num_integer_0_1_33.default = (f.num_integer_0_1_33.default or true);
    num_traits_0_1_37.default = true;
  }) [ num_traits_0_1_37_features ];
  num_iter_0_1_33 = { features?(num_iter_0_1_33_features {}) }: num_iter_0_1_33_ {
    dependencies = mapFeatures features ([ num_integer_0_1_33 num_traits_0_1_37 ]);
  };
  num_iter_0_1_33_features = f: updateFeatures f ({
    num_integer_0_1_33.default = true;
    num_iter_0_1_33.default = (f.num_iter_0_1_33.default or true);
    num_traits_0_1_37.default = true;
  }) [ num_integer_0_1_33_features num_traits_0_1_37_features ];
  num_rational_0_1_36 = { features?(num_rational_0_1_36_features {}) }: num_rational_0_1_36_ {
    dependencies = mapFeatures features ([ num_integer_0_1_33 num_traits_0_1_37 ]);
    features = mkFeatures (features.num_rational_0_1_36 or {});
  };
  num_rational_0_1_36_features = f: updateFeatures f (rec {
    num_integer_0_1_33.default = true;
    num_rational_0_1_36.bigint =
      (f.num_rational_0_1_36.bigint or false) ||
      (f.num_rational_0_1_36.default or false) ||
      (num_rational_0_1_36.default or false);
    num_rational_0_1_36.default = (f.num_rational_0_1_36.default or true);
    num_rational_0_1_36.num-bigint =
      (f.num_rational_0_1_36.num-bigint or false) ||
      (f.num_rational_0_1_36.bigint or false) ||
      (num_rational_0_1_36.bigint or false);
    num_rational_0_1_36.rustc-serialize =
      (f.num_rational_0_1_36.rustc-serialize or false) ||
      (f.num_rational_0_1_36.default or false) ||
      (num_rational_0_1_36.default or false);
    num_traits_0_1_37.default = true;
  }) [ num_integer_0_1_33_features num_traits_0_1_37_features ];
  num_traits_0_1_37 = { features?(num_traits_0_1_37_features {}) }: num_traits_0_1_37_ {};
  num_traits_0_1_37_features = f: updateFeatures f ({
    num_traits_0_1_37.default = (f.num_traits_0_1_37.default or true);
  }) [];
  num_cpus_1_3_0 = { features?(num_cpus_1_3_0_features {}) }: num_cpus_1_3_0_ {
    dependencies = mapFeatures features ([ libc_0_2_21 ]);
  };
  num_cpus_1_3_0_features = f: updateFeatures f ({
    libc_0_2_21.default = true;
    num_cpus_1_3_0.default = (f.num_cpus_1_3_0.default or true);
  }) [ libc_0_2_21_features ];
  pkg_config_0_3_9 = { features?(pkg_config_0_3_9_features {}) }: pkg_config_0_3_9_ {};
  pkg_config_0_3_9_features = f: updateFeatures f ({
    pkg_config_0_3_9.default = (f.pkg_config_0_3_9.default or true);
  }) [];
  png_0_6_2 = { features?(png_0_6_2_features {}) }: png_0_6_2_ {
    dependencies = mapFeatures features ([ bitflags_0_7_0 inflate_0_1_1 num_iter_0_1_33 ]
      ++ (if features.png_0_6_2.deflate or false then [ deflate_0_7_5 ] else []));
    features = mkFeatures (features.png_0_6_2 or {});
  };
  png_0_6_2_features = f: updateFeatures f (rec {
    bitflags_0_7_0.default = true;
    deflate_0_7_5.default = true;
    inflate_0_1_1.default = true;
    num_iter_0_1_33.default = true;
    png_0_6_2.default = (f.png_0_6_2.default or true);
    png_0_6_2.deflate =
      (f.png_0_6_2.deflate or false) ||
      (f.png_0_6_2.png-encoding or false) ||
      (png_0_6_2.png-encoding or false);
    png_0_6_2.png-encoding =
      (f.png_0_6_2.png-encoding or false) ||
      (f.png_0_6_2.default or false) ||
      (png_0_6_2.default or false);
  }) [ bitflags_0_7_0_features deflate_0_7_5_features inflate_0_1_1_features num_iter_0_1_33_features ];
  rand_0_3_15 = { features?(rand_0_3_15_features {}) }: rand_0_3_15_ {
    dependencies = mapFeatures features ([ libc_0_2_21 ]);
  };
  rand_0_3_15_features = f: updateFeatures f ({
    libc_0_2_21.default = true;
    rand_0_3_15.default = (f.rand_0_3_15.default or true);
  }) [ libc_0_2_21_features ];
  rayon_0_6_0 = { features?(rayon_0_6_0_features {}) }: rayon_0_6_0_ {
    dependencies = mapFeatures features ([ deque_0_3_1 libc_0_2_21 num_cpus_1_3_0 rand_0_3_15 ]);
    features = mkFeatures (features.rayon_0_6_0 or {});
  };
  rayon_0_6_0_features = f: updateFeatures f ({
    deque_0_3_1.default = true;
    libc_0_2_21.default = true;
    num_cpus_1_3_0.default = true;
    rand_0_3_15.default = true;
    rayon_0_6_0.default = (f.rayon_0_6_0.default or true);
  }) [ deque_0_3_1_features libc_0_2_21_features num_cpus_1_3_0_features rand_0_3_15_features ];
  scoped_threadpool_0_1_7 = { features?(scoped_threadpool_0_1_7_features {}) }: scoped_threadpool_0_1_7_ {
    features = mkFeatures (features.scoped_threadpool_0_1_7 or {});
  };
  scoped_threadpool_0_1_7_features = f: updateFeatures f ({
    scoped_threadpool_0_1_7.default = (f.scoped_threadpool_0_1_7.default or true);
  }) [];
  strsim_0_6_0 = { features?(strsim_0_6_0_features {}) }: strsim_0_6_0_ {};
  strsim_0_6_0_features = f: updateFeatures f ({
    strsim_0_6_0.default = (f.strsim_0_6_0.default or true);
  }) [];
  term_size_0_2_3 = { features?(term_size_0_2_3_features {}) }: term_size_0_2_3_ {
    dependencies = mapFeatures features ([])
      ++ (if !(kernel == "windows") then mapFeatures features ([ libc_0_2_21 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
    features = mkFeatures (features.term_size_0_2_3 or {});
  };
  term_size_0_2_3_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    libc_0_2_21.default = true;
    term_size_0_2_3.clippy =
      (f.term_size_0_2_3.clippy or false) ||
      (f.term_size_0_2_3.lints or false) ||
      (term_size_0_2_3.lints or false);
    term_size_0_2_3.default = (f.term_size_0_2_3.default or true);
    term_size_0_2_3.lints =
      (f.term_size_0_2_3.lints or false) ||
      (f.term_size_0_2_3.travis or false) ||
      (term_size_0_2_3.travis or false);
    term_size_0_2_3.nightly =
      (f.term_size_0_2_3.nightly or false) ||
      (f.term_size_0_2_3.lints or false) ||
      (term_size_0_2_3.lints or false) ||
      (f.term_size_0_2_3.travis or false) ||
      (term_size_0_2_3.travis or false);
    winapi_0_2_8.default = true;
  }) [ libc_0_2_21_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  toml_0_2_1 = { features?(toml_0_2_1_features {}) }: toml_0_2_1_ {
    dependencies = mapFeatures features ([]);
  };
  toml_0_2_1_features = f: updateFeatures f (rec {
    toml_0_2_1.default = (f.toml_0_2_1.default or true);
    toml_0_2_1.rustc-serialize =
      (f.toml_0_2_1.rustc-serialize or false) ||
      (f.toml_0_2_1.default or false) ||
      (toml_0_2_1.default or false);
  }) [];
  unicode_segmentation_1_1_0 = { features?(unicode_segmentation_1_1_0_features {}) }: unicode_segmentation_1_1_0_ {
    features = mkFeatures (features.unicode_segmentation_1_1_0 or {});
  };
  unicode_segmentation_1_1_0_features = f: updateFeatures f ({
    unicode_segmentation_1_1_0.default = (f.unicode_segmentation_1_1_0.default or true);
  }) [];
  unicode_width_0_1_4 = { features?(unicode_width_0_1_4_features {}) }: unicode_width_0_1_4_ {
    features = mkFeatures (features.unicode_width_0_1_4 or {});
  };
  unicode_width_0_1_4_features = f: updateFeatures f ({
    unicode_width_0_1_4.default = (f.unicode_width_0_1_4.default or true);
  }) [];
  vec_map_0_7_0 = { features?(vec_map_0_7_0_features {}) }: vec_map_0_7_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.vec_map_0_7_0 or {});
  };
  vec_map_0_7_0_features = f: updateFeatures f (rec {
    vec_map_0_7_0.default = (f.vec_map_0_7_0.default or true);
    vec_map_0_7_0.serde =
      (f.vec_map_0_7_0.serde or false) ||
      (f.vec_map_0_7_0.eders or false) ||
      (vec_map_0_7_0.eders or false);
    vec_map_0_7_0.serde_derive =
      (f.vec_map_0_7_0.serde_derive or false) ||
      (f.vec_map_0_7_0.eders or false) ||
      (vec_map_0_7_0.eders or false);
  }) [];
  wc_grab_0_3_0 = { features?(wc_grab_0_3_0_features {}) }: wc_grab_0_3_0_ {
    dependencies = mapFeatures features ([ clap_2_22_0 dbus_0_5_2 image_0_12_3 ]);
  };
  wc_grab_0_3_0_features = f: updateFeatures f ({
    clap_2_22_0.default = true;
    dbus_0_5_2.default = true;
    image_0_12_3.default = true;
    wc_grab_0_3_0.default = (f.wc_grab_0_3_0.default or true);
  }) [ clap_2_22_0_features dbus_0_5_2_features image_0_12_3_features ];
  winapi_0_2_8 = { features?(winapi_0_2_8_features {}) }: winapi_0_2_8_ {};
  winapi_0_2_8_features = f: updateFeatures f ({
    winapi_0_2_8.default = (f.winapi_0_2_8.default or true);
  }) [];
  winapi_build_0_1_1 = { features?(winapi_build_0_1_1_features {}) }: winapi_build_0_1_1_ {};
  winapi_build_0_1_1_features = f: updateFeatures f ({
    winapi_build_0_1_1.default = (f.winapi_build_0_1_1.default or true);
  }) [];
}
