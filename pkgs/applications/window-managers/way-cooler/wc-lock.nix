# Generated by carnix 0.6.5: carnix -o wc-lock.nix Cargo.lock
{ lib, stdenv, buildRustCrate, fetchgit }:
let kernel = stdenv.hostPlatform.parsed.kernel.name;
    updateFeatures = f: up: functions: builtins.deepSeq f (lib.lists.foldl' (features: fun: fun features) (lib.attrsets.recursiveUpdate f up) functions);
    mapFeatures = features: map (fun: fun { features = features; });
    mkFeatures = feat: lib.lists.foldl (features: featureName:
      if feat.${featureName} or false then
        [ featureName ] ++ features
      else
        features
    ) [] (builtins.attrNames feat);
in
rec {
  wc_lock = f: wc_lock_0_2_1 { features = wc_lock_0_2_1_features { wc_lock_0_2_1 = f; }; };
  ansi_term_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ansi_term";
    version = "0.9.0";
    authors = [ "ogham@bsago.me" "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>" ];
    sha256 = "1vcd8m2hglrdi4zmqnkkz5zy3c73ifgii245k7vj6qr5dzpn9hij";
    inherit dependencies buildDependencies features;
  };
  atty_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "atty";
    version = "0.2.2";
    authors = [ "softprops <d.tangren@gmail.com>" ];
    sha256 = "05c6jvrxljp4s1aycgq2z3y56f7f5yvc56v25cqlmpc1qx65z7ba";
    inherit dependencies buildDependencies features;
  };
  bitflags_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "0.7.0";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1hr72xg5slm0z4pxs2hiy4wcyx3jva70h58b7mid8l0a4c8f7gn5";
    inherit dependencies buildDependencies features;
  };
  bitflags_0_8_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "0.8.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0whaj3969ysqxzk620sk1isvq6vh85516f2fplvqjrw3syz44sb2";
    inherit dependencies buildDependencies features;
  };
  byteorder_0_5_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "byteorder";
    version = "0.5.3";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0zsr6b0m0yl5c0yy92nq7srfpczd1dx1xqcx3rlm5fbl8si9clqx";
    inherit dependencies buildDependencies features;
  };
  byteorder_1_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "byteorder";
    version = "1.1.0";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "1i2n0161jm00zvzh4bncgv9zrwa6ydbxdn5j4bx0wwn7rvi9zycp";
    inherit dependencies buildDependencies features;
  };
  cc_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cc";
    version = "1.0.0";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1s5ha0k6cdy1049a5kpzvhnjc9hjvi18zrcr5dmbqpd03ag751g1";
    inherit dependencies buildDependencies features;
  };
  clap_2_24_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "clap";
    version = "2.24.2";
    authors = [ "Kevin K. <kbknapp@gmail.com>" ];
    sha256 = "0028bkzafprs6n7ing8lnf7iss2a2zq17qmgadipgdfgvww43rmv";
    inherit dependencies buildDependencies features;
  };
  coco_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "coco";
    version = "0.1.1";
    authors = [ "Stjepan Glavina <stjepang@gmail.com>" ];
    sha256 = "0hvj4jaj9y6i38c4dkii8nqq98cgx3kyx78cjqkdvk0aqq5sfr94";
    inherit dependencies buildDependencies features;
  };
  color_quant_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "color_quant";
    version = "1.0.0";
    authors = [ "nwin <nwin@users.noreply.github.com>" ];
    sha256 = "0jwr40lr115zm2bydk1wja12gcxrmgsx0n1z1pipq00sab71maaj";
    inherit dependencies buildDependencies features;
  };
  dbus_0_5_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dbus";
    version = "0.5.4";
    authors = [ "David Henningsson <diwic@ubuntu.com>" ];
    sha256 = "0qr62splq38b8vfjvpcpk9ph21d63ya7vd2vifs5wc8jzwc309yn";
    inherit dependencies buildDependencies features;
  };
  dlib_0_3_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dlib";
    version = "0.3.1";
    authors = [ "Victor Berger <victor.berger@m4x.org>" ];
    sha256 = "11mhh6g9vszp2ay3r46x4capnnmvvhx5hcp74bapxjhiixqjfvkr";
    inherit dependencies buildDependencies features;
  };
  dtoa_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dtoa";
    version = "0.4.1";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0mgg4r90yby68qg7y8csbclhsm53ac26vsyq615viq535plllhzw";
    inherit dependencies buildDependencies features;
  };
  either_1_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "either";
    version = "1.2.0";
    authors = [ "bluss" ];
    sha256 = "0l72xaf1kwzgbl3andf3d2ggz7km9059rbmp90iywww8inlnqppp";
    inherit dependencies buildDependencies features;
  };
  enum_primitive_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "enum_primitive";
    version = "0.1.1";
    authors = [ "Anders Kaseorg <andersk@mit.edu>" ];
    sha256 = "1a225rlsz7sz3nn14dar71kp2f9v08s3rwl6j55xp51mv01f695y";
    inherit dependencies buildDependencies features;
  };
  error_chain_0_10_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "error-chain";
    version = "0.10.0";
    authors = [ "Brian Anderson <banderson@mozilla.com>" "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" "Yamakaky <yamakaky@yamaworld.fr>" ];
    sha256 = "1xxbzd8cjlpzsb9fsih7mdnndhzrvykj0w77yg90qc85az1xwy5z";
    inherit dependencies buildDependencies features;
  };
  flate2_0_2_20_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "flate2";
    version = "0.2.20";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1am0d2vmqym1vcg7rvv516vpcrbhdn1jisy0q03r3nbzdzh54ppl";
    inherit dependencies buildDependencies features;
  };
  fs2_0_2_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fs2";
    version = "0.2.5";
    authors = [ "Dan Burkert <dan@danburkert.com>" ];
    sha256 = "0j6l5r95jigbl0lgkm69c82dzq10jipjbm9qnni147hb45gyw790";
    inherit dependencies buildDependencies features;
  };
  futures_0_1_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "futures";
    version = "0.1.16";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0ndk8cl6l600a95q8il2c3y38jz50nhfsczps0nziadqdd45gy2b";
    inherit dependencies buildDependencies features;
  };
  gcc_0_3_50_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "gcc";
    version = "0.3.50";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "032izcbbyiakv9ck5j3s27p3ddx4468n7qpaxgwi5iswmimjaaj0";
    inherit dependencies buildDependencies features;
  };
  gif_0_9_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "gif";
    version = "0.9.2";
    authors = [ "nwin <nwin@users.noreply.github.com>" ];
    sha256 = "0dl76jrn6127w3bdg2b58p5psf8fpnbzdxdkw1i35ac8dn4vxcqa";
    inherit dependencies buildDependencies features;
  };
  glob_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "glob";
    version = "0.2.11";
    authors = [ "The Rust Project Developers" ];
    sha256 = "104389jjxs8r2f5cc9p0axhjmndgln60ih5x4f00ccgg9d3zarlf";
    inherit dependencies buildDependencies features;
  };
  image_0_10_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "image";
    version = "0.10.4";
    authors = [ "ccgn" "bvssvni <bvssvni@gmail.com>" "nwin" "TyOverby <ty@pre-alpha.com>" ];
    sha256 = "1pwrs7k5760b38i1lg872x9q2zc6xvhs7mjhlzvjnr5p85zx2fbw";
    libPath = "./src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  inflate_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "inflate";
    version = "0.1.1";
    authors = [ "nwin <nwin@users.noreply.github.com>" ];
    sha256 = "112kh9hjcjjxdybl032mdhpwnr3qxw8j0ch6hwanwpcf3gz42g1h";
    inherit dependencies buildDependencies features;
  };
  itoa_0_3_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "itoa";
    version = "0.3.1";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0jp1wvfw0qqbyz0whbycp7xr5nx1ds5plh4wsfyj503xmjf9ab4k";
    inherit dependencies buildDependencies features;
  };
  jpeg_decoder_0_1_13_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "jpeg-decoder";
    version = "0.1.13";
    authors = [ "Ulf Nilsson <kaksmet@gmail.com>" ];
    sha256 = "0w16gbywlm9p0p3wx34b85q4d1izrx89afcsxlc6g11cx2js4fa2";
    inherit dependencies buildDependencies features;
  };
  kernel32_sys_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "kernel32-sys";
    version = "0.2.2";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lrw1hbinyvr6cp28g60z97w32w8vsk6pahk64pmrv2fmby8srfj";
    libName = "kernel32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  lazy_static_0_2_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "0.2.8";
    authors = [ "Marvin LÃ¶bel <loebel.marvin@gmail.com>" ];
    sha256 = "1xbpxx7cd5kl60g87g43q80jxyrsildhxfjc42jb1x4jncknpwbl";
    inherit dependencies buildDependencies features;
  };
  libc_0_2_23_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libc";
    version = "0.2.23";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1i29f6k26fmv81c5bjc6hw2j95sd01h9ad66qxdc755b24xfa9jm";
    inherit dependencies buildDependencies features;
  };
  libdbus_sys_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libdbus-sys";
    version = "0.1.1";
    authors = [ "David Henningsson <diwic@ubuntu.com>" ];
    sha256 = "14kpislv2zazmgv5f8by4zkgkjxd0cwab8z6621kskjdwyir1wpy";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  libloading_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libloading";
    version = "0.3.4";
    authors = [ "Simonas Kazlauskas <libloading@kazlauskas.me>" ];
    sha256 = "1f2vy32cr434n638nv8sdf05iwa53q9q5ahlcpw1l9ywh1bcbhf1";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  lzw_0_10_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lzw";
    version = "0.10.0";
    authors = [ "nwin <nwin@users.noreply.github.com>" ];
    sha256 = "1cfsy2w26kbz9bjaqp9dh1wyyh47rpmhwvj4jpc1rmffbf438fvb";
    inherit dependencies buildDependencies features;
  };
  memmap_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memmap";
    version = "0.4.0";
    authors = [ "Dan Burkert <dan@danburkert.com>" ];
    sha256 = "0q2gm5p8n9najc8kccbxxkannmnjh85rin4k8d4y1kg5ymdp6kll";
    inherit dependencies buildDependencies features;
  };
  metadeps_1_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "metadeps";
    version = "1.1.2";
    authors = [ "Josh Triplett <josh@joshtriplett.org>" ];
    sha256 = "00dpxjls9fq6fs5gr9v3hkqxmb1zwnhh8b56q3dnzghppjf3ivk3";
    inherit dependencies buildDependencies features;
  };
  miniz_sys_0_1_10_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "miniz-sys";
    version = "0.1.10";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "11vg6phafxil87nbxgrlhcx5hjr3145wsbwwkfmibvnmzxfdmvln";
    libPath = "lib.rs";
    libName = "miniz_sys";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  num_bigint_0_1_40_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-bigint";
    version = "0.1.40";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0pkxd9mb4chdbipprxjc8ll7kjh79n278s2z663zmd80yg5xi788";
    inherit dependencies buildDependencies features;
  };
  num_integer_0_1_35_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-integer";
    version = "0.1.35";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0xybj8isi9b6wc646d5rc043i8l8j6wy0vrl4pn995qms9fxbbcc";
    inherit dependencies buildDependencies features;
  };
  num_iter_0_1_34_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-iter";
    version = "0.1.34";
    authors = [ "The Rust Project Developers" ];
    sha256 = "02cld7x9dzbqbs6sxxzq1i22z3awlcd6ljkgvhkfr9rsnaxphzl9";
    inherit dependencies buildDependencies features;
  };
  num_rational_0_1_39_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-rational";
    version = "0.1.39";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1qsacdfp97zgpajc2pgbrbga3yag1f0k7yz0gi78vd165gxdwk3m";
    inherit dependencies buildDependencies features;
  };
  num_traits_0_1_37_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-traits";
    version = "0.1.37";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0rwzfmdjq6iz6plva2gi7agvy1w9sjs7aqjh0p115w57xiix2224";
    inherit dependencies buildDependencies features;
  };
  num_cpus_1_6_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num_cpus";
    version = "1.6.2";
    authors = [ "Sean McArthur <sean.monstar@gmail.com>" ];
    sha256 = "0wxfzxsk05xbkph5qcvdqyi334zn0pnpahzi7n7iagxbb68145rm";
    inherit dependencies buildDependencies features;
  };
  phf_0_7_21_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "phf";
    version = "0.7.21";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "11m2rzm2s8s35m0s97gjxxb181xz352kjlhr387xj5c8q3qp5afg";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  phf_codegen_0_7_21_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "phf_codegen";
    version = "0.7.21";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0kgy8s2q4zr0iqcm21mgq4ppc45wy6z7b5wn98xyfsrcad6lwmmj";
    inherit dependencies buildDependencies features;
  };
  phf_generator_0_7_21_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "phf_generator";
    version = "0.7.21";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "1jxjfzc6d6d4l9nv0r2bb66if5brk9lnncmg4dpjjifn6zhhqd9g";
    inherit dependencies buildDependencies features;
  };
  phf_shared_0_7_21_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "phf_shared";
    version = "0.7.21";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0lxpg3wgxfhzfalmf9ha9my1lsvfjy74ah9f6mfw88xlp545jlln";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  pkg_config_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "pkg-config";
    version = "0.3.9";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "06k8fxgrsrxj8mjpjcq1n7mn2p1shpxif4zg9y5h09c7vy20s146";
    inherit dependencies buildDependencies features;
  };
  png_0_5_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "png";
    version = "0.5.2";
    authors = [ "nwin <nwin@users.noreply.github.com>" ];
    sha256 = "1pgann3f1ysgf8y1acw86v4s3ji1xk85ri353biyvh4i1cpn1g3q";
    inherit dependencies buildDependencies features;
  };
  rand_0_3_15_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.3.15";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1fs30rc1xic40s1n7l3y7pxzfifpy03mgrvhy5ggp5p7zjfv3rr8";
    inherit dependencies buildDependencies features;
  };
  rayon_0_8_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rayon";
    version = "0.8.2";
    authors = [ "Niko Matsakis <niko@alum.mit.edu>" "Josh Stone <cuviper@gmail.com>" ];
    sha256 = "0d0mddg1k75hb9138pn8lysy2095jijrinskqbpgfr73s0jx6dq8";
    inherit dependencies buildDependencies features;
  };
  rayon_core_1_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rayon-core";
    version = "1.2.1";
    authors = [ "Niko Matsakis <niko@alum.mit.edu>" "Josh Stone <cuviper@gmail.com>" ];
    sha256 = "12xv2r0dqrgvla24bl5mfvcw0599dlhrj0mx620nq95nyds753kk";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  rustc_serialize_0_3_24_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc-serialize";
    version = "0.3.24";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0rfk6p66mqkd3g36l0ddlv2rvnp1mp3lrq5frq9zz5cbnz5pmmxn";
    inherit dependencies buildDependencies features;
  };
  rustc_version_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc_version";
    version = "0.1.7";
    authors = [ "Marvin LÃ¶bel <loebel.marvin@gmail.com>" ];
    sha256 = "0plm9pbyvcwfibd0kbhzil9xmr1bvqi8fgwlfw0x4vali8s6s99p";
    inherit dependencies buildDependencies features;
  };
  scoped_threadpool_0_1_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "scoped_threadpool";
    version = "0.1.8";
    authors = [ "Marvin LÃ¶bel <loebel.marvin@gmail.com>" ];
    sha256 = "1al42hqbbijpah9bc6hw9c49nhnyrc0sj274ja1q3k9305c3s5a6";
    inherit dependencies buildDependencies features;
  };
  scopeguard_0_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "scopeguard";
    version = "0.3.2";
    authors = [ "bluss" ];
    sha256 = "0xlvfawva4fnp6kwr5xjwf0q2d1w6di81nhfby1sa55xj1ia5zs2";
    inherit dependencies buildDependencies features;
  };
  semver_0_1_20_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "semver";
    version = "0.1.20";
    authors = [ "The Rust Project Developers" ];
    sha256 = "05cdig0071hls2k8lxbqmyqpl0zjmc53i2d43mwzps033b8njh4n";
    inherit dependencies buildDependencies features;
  };
  serde_0_9_15_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde";
    version = "0.9.15";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" ];
    sha256 = "0rlflkc57kvy69hnhj4arfsj7ic4hpihxsb00zg5lkdxfj5qjx9b";
    inherit dependencies buildDependencies features;
  };
  serde_json_0_9_10_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_json";
    version = "0.9.10";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" ];
    sha256 = "0g6bxlfnvf2miicnsizyrxm686rfval6gbss1i2qcna8msfwc005";
    inherit dependencies buildDependencies features;
  };
  siphasher_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "siphasher";
    version = "0.2.2";
    authors = [ "Frank Denis <github@pureftpd.org>" ];
    sha256 = "0iyx7nlzfny9ly1634a6zcq0yvrinhxhypwas4p8ry3zqnn76qqr";
    inherit dependencies buildDependencies features;
  };
  strsim_0_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "strsim";
    version = "0.6.0";
    authors = [ "Danny Guo <dannyguo91@gmail.com>" ];
    sha256 = "1lz85l6y68hr62lv4baww29yy7g8pg20dlr0lbaswxmmcb0wl7gd";
    inherit dependencies buildDependencies features;
  };
  target_build_utils_0_3_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "target_build_utils";
    version = "0.3.1";
    authors = [ "Simonas Kazlauskas <target_build_utils@kazlauskas.me>" ];
    sha256 = "1b450nyxlbgicp2p45mhxiv6yv0z7s4iw01lsaqh3v7b4bm53flj";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  tempfile_2_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tempfile";
    version = "2.1.5";
    authors = [ "Steven Allen <steven@stebalien.com>" ];
    sha256 = "1yz8aaj78z9gsn4b71y0m6fa5bnxhqafcczhxvmwra56k943aqkw";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  term_size_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "term_size";
    version = "0.3.0";
    authors = [ "Kevin K. <kbknapp@gmail.com>" "Benjamin Sago <ogham@bsago.me>" ];
    sha256 = "054d5avad49sy5nfaaaphai4kv4rmdh6q0npchnvdhpxp02lcfhs";
    inherit dependencies buildDependencies features;
  };
  toml_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "toml";
    version = "0.2.1";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0p4rkaqhmk4fp6iqpxfgp3p98hxhbs2wmla3fq531n875h922yqs";
    inherit dependencies buildDependencies features;
  };
  unicode_segmentation_1_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-segmentation";
    version = "1.2.0";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "0yz43x7wrhr3n7a2zsinx3r60yxsdqicg8a5kycyyhdaq1zmiz1y";
    inherit dependencies buildDependencies features;
  };
  unicode_width_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-width";
    version = "0.1.4";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "1rp7a04icn9y5c0lm74nrd4py0rdl0af8bhdwq7g478n1xifpifl";
    inherit dependencies buildDependencies features;
  };
  vec_map_0_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "vec_map";
    version = "0.8.0";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Jorge Aparicio <japaricious@gmail.com>" "Alexis Beingessner <a.beingessner@gmail.com>" "Brian Anderson <>" "tbu- <>" "Manish Goregaokar <>" "Aaron Turon <aturon@mozilla.com>" "Adolfo OchagavÃ­a <>" "Niko Matsakis <>" "Steven Fackler <>" "Chase Southwood <csouth3@illinois.edu>" "Eduard Burtescu <>" "Florian Wilkens <>" "FÃ©lix Raimundo <>" "Tibor Benke <>" "Markus Siemens <markus@m-siemens.de>" "Josh Branchaud <jbranchaud@gmail.com>" "Huon Wilson <dbau.pp@gmail.com>" "Corey Farwell <coref@rwell.org>" "Aaron Liblong <>" "Nick Cameron <nrc@ncameron.org>" "Patrick Walton <pcwalton@mimiga.net>" "Felix S Klock II <>" "Andrew Paseltiner <apaseltiner@gmail.com>" "Sean McArthur <sean.monstar@gmail.com>" "Vadim Petrochenkov <>" ];
    sha256 = "07sgxp3cf1a4cxm9n3r27fcvqmld32bl2576mrcahnvm34j11xay";
    inherit dependencies buildDependencies features;
  };
  way_cooler_client_helpers_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "way-cooler-client-helpers";
    version = "0.1.0";
    authors = [ "Timidger <APragmaticPlace@gmail.com>" ];
    sha256 = "0749lh5crd0rhq4dxij9mb3y5902laazjd01l6ci5782bjfk4s39";
    inherit dependencies buildDependencies features;
  };
  wayland_client_0_9_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "wayland-client";
    version = "0.9.6";
    authors = [ "Victor Berger <victor.berger@m4x.org>" ];
    sha256 = "1908h6ilvq2cxph1lxv1vzrb3dcfx4x6pf6pszxwifsfqva8nm34";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  wayland_kbd_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "wayland-kbd";
    version = "0.9.0";
    authors = [ "Victor Berger <victor.berger@m4x.org>" ];
    sha256 = "1x0f7n79hjwf5fclf62fpzjp05xdzc93xw84zgyrn8f1hill3qhj";
    inherit dependencies buildDependencies features;
  };
  wayland_scanner_0_9_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "wayland-scanner";
    version = "0.9.6";
    authors = [ "Victor Berger <victor.berger@m4x.org>" ];
    sha256 = "1w5cyc48g4x5w3rakb4sji5328rl5yph1abmjbh5h4slkm4n76g1";
    inherit dependencies buildDependencies features;
  };
  wayland_sys_0_9_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "wayland-sys";
    version = "0.9.6";
    authors = [ "Victor Berger <victor.berger@m4x.org>" ];
    sha256 = "0izw50pmj1r10hmr29gi8ps01avs6zjwisywijlq7wr268h6yxcg";
    inherit dependencies buildDependencies features;
  };
  wc_lock_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "wc-lock";
    version = "0.2.1";
    authors = [ "Timidger <APragmaticPlace@gmail.com>" ];
    sha256 = "0ikmir7azihxiyzgb0wnvk81yinmn2l6k93bnb1qg4k704zcyq84";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_0_2_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.2.8";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0a45b58ywf12vb7gvj6h3j264nydynmzyqz8d8rqxsj6icqv82as";
    inherit dependencies buildDependencies features;
  };
  winapi_build_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-build";
    version = "0.1.1";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lxlpi87rkhxcwp2ykf1ldw3p108hwm24nywf3jfrvmff4rjhqga";
    libName = "build";
    inherit dependencies buildDependencies features;
  };
  xml_rs_0_3_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "xml-rs";
    version = "0.3.6";
    authors = [ "Vladimir Matveev <vladimir.matweev@gmail.com>" ];
    sha256 = "1g1cclib7fj900m4669vxlz45lxcq0m36g7cd8chl494c2xsgj15";
    libPath = "src/lib.rs";
    libName = "xml";
    crateBin = [ {  name = "xml-analyze";  path = "src/analyze.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  ansi_term_0_9_0 = { features?(ansi_term_0_9_0_features {}) }: ansi_term_0_9_0_ {};
  ansi_term_0_9_0_features = f: updateFeatures f ({
    ansi_term_0_9_0.default = (f.ansi_term_0_9_0.default or true);
  }) [];
  atty_0_2_2 = { features?(atty_0_2_2_features {}) }: atty_0_2_2_ {
    dependencies = (if !(kernel == "windows") then mapFeatures features ([ libc_0_2_23 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
  };
  atty_0_2_2_features = f: updateFeatures f ({
    atty_0_2_2.default = (f.atty_0_2_2.default or true);
    kernel32_sys_0_2_2.default = true;
    libc_0_2_23.default = true;
    winapi_0_2_8.default = true;
  }) [ libc_0_2_23_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  bitflags_0_7_0 = { features?(bitflags_0_7_0_features {}) }: bitflags_0_7_0_ {};
  bitflags_0_7_0_features = f: updateFeatures f ({
    bitflags_0_7_0.default = (f.bitflags_0_7_0.default or true);
  }) [];
  bitflags_0_8_2 = { features?(bitflags_0_8_2_features {}) }: bitflags_0_8_2_ {
    features = mkFeatures (features.bitflags_0_8_2 or {});
  };
  bitflags_0_8_2_features = f: updateFeatures f (rec {
    bitflags_0_8_2.default = (f.bitflags_0_8_2.default or true);
    bitflags_0_8_2.i128 =
      (f.bitflags_0_8_2.i128 or false) ||
      (f.bitflags_0_8_2.unstable or false) ||
      (bitflags_0_8_2.unstable or false);
  }) [];
  byteorder_0_5_3 = { features?(byteorder_0_5_3_features {}) }: byteorder_0_5_3_ {
    features = mkFeatures (features.byteorder_0_5_3 or {});
  };
  byteorder_0_5_3_features = f: updateFeatures f (rec {
    byteorder_0_5_3.default = (f.byteorder_0_5_3.default or true);
    byteorder_0_5_3.std =
      (f.byteorder_0_5_3.std or false) ||
      (f.byteorder_0_5_3.default or false) ||
      (byteorder_0_5_3.default or false);
  }) [];
  byteorder_1_1_0 = { features?(byteorder_1_1_0_features {}) }: byteorder_1_1_0_ {
    features = mkFeatures (features.byteorder_1_1_0 or {});
  };
  byteorder_1_1_0_features = f: updateFeatures f (rec {
    byteorder_1_1_0.default = (f.byteorder_1_1_0.default or true);
    byteorder_1_1_0.std =
      (f.byteorder_1_1_0.std or false) ||
      (f.byteorder_1_1_0.default or false) ||
      (byteorder_1_1_0.default or false);
  }) [];
  cc_1_0_0 = { features?(cc_1_0_0_features {}) }: cc_1_0_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.cc_1_0_0 or {});
  };
  cc_1_0_0_features = f: updateFeatures f (rec {
    cc_1_0_0.default = (f.cc_1_0_0.default or true);
    cc_1_0_0.rayon =
      (f.cc_1_0_0.rayon or false) ||
      (f.cc_1_0_0.parallel or false) ||
      (cc_1_0_0.parallel or false);
  }) [];
  clap_2_24_2 = { features?(clap_2_24_2_features {}) }: clap_2_24_2_ {
    dependencies = mapFeatures features ([ bitflags_0_8_2 unicode_segmentation_1_2_0 unicode_width_0_1_4 vec_map_0_8_0 ]
      ++ (if features.clap_2_24_2.ansi_term or false then [ ansi_term_0_9_0 ] else [])
      ++ (if features.clap_2_24_2.atty or false then [ atty_0_2_2 ] else [])
      ++ (if features.clap_2_24_2.strsim or false then [ strsim_0_6_0 ] else [])
      ++ (if features.clap_2_24_2.term_size or false then [ term_size_0_3_0 ] else []));
    features = mkFeatures (features.clap_2_24_2 or {});
  };
  clap_2_24_2_features = f: updateFeatures f (rec {
    ansi_term_0_9_0.default = true;
    atty_0_2_2.default = true;
    bitflags_0_8_2.default = true;
    clap_2_24_2.ansi_term =
      (f.clap_2_24_2.ansi_term or false) ||
      (f.clap_2_24_2.color or false) ||
      (clap_2_24_2.color or false);
    clap_2_24_2.atty =
      (f.clap_2_24_2.atty or false) ||
      (f.clap_2_24_2.color or false) ||
      (clap_2_24_2.color or false);
    clap_2_24_2.clippy =
      (f.clap_2_24_2.clippy or false) ||
      (f.clap_2_24_2.lints or false) ||
      (clap_2_24_2.lints or false);
    clap_2_24_2.color =
      (f.clap_2_24_2.color or false) ||
      (f.clap_2_24_2.default or false) ||
      (clap_2_24_2.default or false);
    clap_2_24_2.default = (f.clap_2_24_2.default or true);
    clap_2_24_2.strsim =
      (f.clap_2_24_2.strsim or false) ||
      (f.clap_2_24_2.suggestions or false) ||
      (clap_2_24_2.suggestions or false);
    clap_2_24_2.suggestions =
      (f.clap_2_24_2.suggestions or false) ||
      (f.clap_2_24_2.default or false) ||
      (clap_2_24_2.default or false);
    clap_2_24_2.term_size =
      (f.clap_2_24_2.term_size or false) ||
      (f.clap_2_24_2.wrap_help or false) ||
      (clap_2_24_2.wrap_help or false);
    clap_2_24_2.wrap_help =
      (f.clap_2_24_2.wrap_help or false) ||
      (f.clap_2_24_2.default or false) ||
      (clap_2_24_2.default or false);
    clap_2_24_2.yaml-rust =
      (f.clap_2_24_2.yaml-rust or false) ||
      (f.clap_2_24_2.yaml or false) ||
      (clap_2_24_2.yaml or false);
    strsim_0_6_0.default = true;
    term_size_0_3_0.default = true;
    unicode_segmentation_1_2_0.default = true;
    unicode_width_0_1_4.default = true;
    vec_map_0_8_0.default = true;
  }) [ ansi_term_0_9_0_features atty_0_2_2_features bitflags_0_8_2_features strsim_0_6_0_features term_size_0_3_0_features unicode_segmentation_1_2_0_features unicode_width_0_1_4_features vec_map_0_8_0_features ];
  coco_0_1_1 = { features?(coco_0_1_1_features {}) }: coco_0_1_1_ {
    dependencies = mapFeatures features ([ either_1_2_0 scopeguard_0_3_2 ]);
    features = mkFeatures (features.coco_0_1_1 or {});
  };
  coco_0_1_1_features = f: updateFeatures f ({
    coco_0_1_1.default = (f.coco_0_1_1.default or true);
    either_1_2_0.default = true;
    scopeguard_0_3_2.default = true;
  }) [ either_1_2_0_features scopeguard_0_3_2_features ];
  color_quant_1_0_0 = { features?(color_quant_1_0_0_features {}) }: color_quant_1_0_0_ {};
  color_quant_1_0_0_features = f: updateFeatures f ({
    color_quant_1_0_0.default = (f.color_quant_1_0_0.default or true);
  }) [];
  dbus_0_5_4 = { features?(dbus_0_5_4_features {}) }: dbus_0_5_4_ {
    dependencies = mapFeatures features ([ libc_0_2_23 libdbus_sys_0_1_1 ]);
    features = mkFeatures (features.dbus_0_5_4 or {});
  };
  dbus_0_5_4_features = f: updateFeatures f ({
    dbus_0_5_4.default = (f.dbus_0_5_4.default or true);
    libc_0_2_23.default = true;
    libdbus_sys_0_1_1.default = true;
  }) [ libc_0_2_23_features libdbus_sys_0_1_1_features ];
  dlib_0_3_1 = { features?(dlib_0_3_1_features {}) }: dlib_0_3_1_ {
    dependencies = mapFeatures features ([ libloading_0_3_4 ]);
    features = mkFeatures (features.dlib_0_3_1 or {});
  };
  dlib_0_3_1_features = f: updateFeatures f ({
    dlib_0_3_1.default = (f.dlib_0_3_1.default or true);
    libloading_0_3_4.default = true;
  }) [ libloading_0_3_4_features ];
  dtoa_0_4_1 = { features?(dtoa_0_4_1_features {}) }: dtoa_0_4_1_ {};
  dtoa_0_4_1_features = f: updateFeatures f ({
    dtoa_0_4_1.default = (f.dtoa_0_4_1.default or true);
  }) [];
  either_1_2_0 = { features?(either_1_2_0_features {}) }: either_1_2_0_ {
    features = mkFeatures (features.either_1_2_0 or {});
  };
  either_1_2_0_features = f: updateFeatures f (rec {
    either_1_2_0.default = (f.either_1_2_0.default or true);
    either_1_2_0.use_std =
      (f.either_1_2_0.use_std or false) ||
      (f.either_1_2_0.default or false) ||
      (either_1_2_0.default or false);
  }) [];
  enum_primitive_0_1_1 = { features?(enum_primitive_0_1_1_features {}) }: enum_primitive_0_1_1_ {
    dependencies = mapFeatures features ([ num_traits_0_1_37 ]);
  };
  enum_primitive_0_1_1_features = f: updateFeatures f ({
    enum_primitive_0_1_1.default = (f.enum_primitive_0_1_1.default or true);
    num_traits_0_1_37.default = (f.num_traits_0_1_37.default or false);
  }) [ num_traits_0_1_37_features ];
  error_chain_0_10_0 = { features?(error_chain_0_10_0_features {}) }: error_chain_0_10_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.error_chain_0_10_0 or {});
  };
  error_chain_0_10_0_features = f: updateFeatures f (rec {
    error_chain_0_10_0.backtrace =
      (f.error_chain_0_10_0.backtrace or false) ||
      (f.error_chain_0_10_0.default or false) ||
      (error_chain_0_10_0.default or false);
    error_chain_0_10_0.default = (f.error_chain_0_10_0.default or true);
    error_chain_0_10_0.example_generated =
      (f.error_chain_0_10_0.example_generated or false) ||
      (f.error_chain_0_10_0.default or false) ||
      (error_chain_0_10_0.default or false);
  }) [];
  flate2_0_2_20 = { features?(flate2_0_2_20_features {}) }: flate2_0_2_20_ {
    dependencies = mapFeatures features ([ libc_0_2_23 ]
      ++ (if features.flate2_0_2_20.miniz-sys or false then [ miniz_sys_0_1_10 ] else []));
    features = mkFeatures (features.flate2_0_2_20 or {});
  };
  flate2_0_2_20_features = f: updateFeatures f (rec {
    flate2_0_2_20.default = (f.flate2_0_2_20.default or true);
    flate2_0_2_20.futures =
      (f.flate2_0_2_20.futures or false) ||
      (f.flate2_0_2_20.tokio or false) ||
      (flate2_0_2_20.tokio or false);
    flate2_0_2_20.libz-sys =
      (f.flate2_0_2_20.libz-sys or false) ||
      (f.flate2_0_2_20.zlib or false) ||
      (flate2_0_2_20.zlib or false);
    flate2_0_2_20.miniz-sys =
      (f.flate2_0_2_20.miniz-sys or false) ||
      (f.flate2_0_2_20.default or false) ||
      (flate2_0_2_20.default or false);
    flate2_0_2_20.tokio-io =
      (f.flate2_0_2_20.tokio-io or false) ||
      (f.flate2_0_2_20.tokio or false) ||
      (flate2_0_2_20.tokio or false);
    libc_0_2_23.default = true;
    miniz_sys_0_1_10.default = true;
  }) [ libc_0_2_23_features miniz_sys_0_1_10_features ];
  fs2_0_2_5 = { features?(fs2_0_2_5_features {}) }: fs2_0_2_5_ {
    dependencies = mapFeatures features ([ kernel32_sys_0_2_2 libc_0_2_23 winapi_0_2_8 ]);
  };
  fs2_0_2_5_features = f: updateFeatures f ({
    fs2_0_2_5.default = (f.fs2_0_2_5.default or true);
    kernel32_sys_0_2_2.default = true;
    libc_0_2_23.default = true;
    winapi_0_2_8.default = true;
  }) [ kernel32_sys_0_2_2_features libc_0_2_23_features winapi_0_2_8_features ];
  futures_0_1_16 = { features?(futures_0_1_16_features {}) }: futures_0_1_16_ {
    features = mkFeatures (features.futures_0_1_16 or {});
  };
  futures_0_1_16_features = f: updateFeatures f (rec {
    futures_0_1_16.default = (f.futures_0_1_16.default or true);
    futures_0_1_16.use_std =
      (f.futures_0_1_16.use_std or false) ||
      (f.futures_0_1_16.default or false) ||
      (futures_0_1_16.default or false);
    futures_0_1_16.with-deprecated =
      (f.futures_0_1_16.with-deprecated or false) ||
      (f.futures_0_1_16.default or false) ||
      (futures_0_1_16.default or false);
  }) [];
  gcc_0_3_50 = { features?(gcc_0_3_50_features {}) }: gcc_0_3_50_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.gcc_0_3_50 or {});
  };
  gcc_0_3_50_features = f: updateFeatures f (rec {
    gcc_0_3_50.default = (f.gcc_0_3_50.default or true);
    gcc_0_3_50.rayon =
      (f.gcc_0_3_50.rayon or false) ||
      (f.gcc_0_3_50.parallel or false) ||
      (gcc_0_3_50.parallel or false);
  }) [];
  gif_0_9_2 = { features?(gif_0_9_2_features {}) }: gif_0_9_2_ {
    dependencies = mapFeatures features ([ color_quant_1_0_0 lzw_0_10_0 ]);
    features = mkFeatures (features.gif_0_9_2 or {});
  };
  gif_0_9_2_features = f: updateFeatures f (rec {
    color_quant_1_0_0.default = true;
    gif_0_9_2.default = (f.gif_0_9_2.default or true);
    gif_0_9_2.libc =
      (f.gif_0_9_2.libc or false) ||
      (f.gif_0_9_2.c_api or false) ||
      (gif_0_9_2.c_api or false);
    gif_0_9_2.raii_no_panic =
      (f.gif_0_9_2.raii_no_panic or false) ||
      (f.gif_0_9_2.default or false) ||
      (gif_0_9_2.default or false);
    lzw_0_10_0.default = true;
  }) [ color_quant_1_0_0_features lzw_0_10_0_features ];
  glob_0_2_11 = { features?(glob_0_2_11_features {}) }: glob_0_2_11_ {};
  glob_0_2_11_features = f: updateFeatures f ({
    glob_0_2_11.default = (f.glob_0_2_11.default or true);
  }) [];
  image_0_10_4 = { features?(image_0_10_4_features {}) }: image_0_10_4_ {
    dependencies = mapFeatures features ([ byteorder_0_5_3 enum_primitive_0_1_1 glob_0_2_11 num_iter_0_1_34 num_rational_0_1_39 num_traits_0_1_37 ]
      ++ (if features.image_0_10_4.gif or false then [ gif_0_9_2 ] else [])
      ++ (if features.image_0_10_4.jpeg-decoder or false then [ jpeg_decoder_0_1_13 ] else [])
      ++ (if features.image_0_10_4.png or false then [ png_0_5_2 ] else [])
      ++ (if features.image_0_10_4.scoped_threadpool or false then [ scoped_threadpool_0_1_8 ] else []));
    features = mkFeatures (features.image_0_10_4 or {});
  };
  image_0_10_4_features = f: updateFeatures f (rec {
    byteorder_0_5_3.default = true;
    enum_primitive_0_1_1.default = true;
    gif_0_9_2.default = true;
    glob_0_2_11.default = true;
    image_0_10_4.bmp =
      (f.image_0_10_4.bmp or false) ||
      (f.image_0_10_4.default or false) ||
      (image_0_10_4.default or false) ||
      (f.image_0_10_4.ico or false) ||
      (image_0_10_4.ico or false);
    image_0_10_4.default = (f.image_0_10_4.default or true);
    image_0_10_4.gif =
      (f.image_0_10_4.gif or false) ||
      (f.image_0_10_4.gif_codec or false) ||
      (image_0_10_4.gif_codec or false);
    image_0_10_4.gif_codec =
      (f.image_0_10_4.gif_codec or false) ||
      (f.image_0_10_4.default or false) ||
      (image_0_10_4.default or false);
    image_0_10_4.hdr =
      (f.image_0_10_4.hdr or false) ||
      (f.image_0_10_4.default or false) ||
      (image_0_10_4.default or false);
    image_0_10_4.ico =
      (f.image_0_10_4.ico or false) ||
      (f.image_0_10_4.default or false) ||
      (image_0_10_4.default or false);
    image_0_10_4.jpeg =
      (f.image_0_10_4.jpeg or false) ||
      (f.image_0_10_4.default or false) ||
      (image_0_10_4.default or false);
    image_0_10_4.jpeg-decoder =
      (f.image_0_10_4.jpeg-decoder or false) ||
      (f.image_0_10_4.jpeg or false) ||
      (image_0_10_4.jpeg or false);
    image_0_10_4.png =
      (f.image_0_10_4.png or false) ||
      (f.image_0_10_4.png_codec or false) ||
      (image_0_10_4.png_codec or false);
    image_0_10_4.png_codec =
      (f.image_0_10_4.png_codec or false) ||
      (f.image_0_10_4.default or false) ||
      (image_0_10_4.default or false) ||
      (f.image_0_10_4.ico or false) ||
      (image_0_10_4.ico or false);
    image_0_10_4.ppm =
      (f.image_0_10_4.ppm or false) ||
      (f.image_0_10_4.default or false) ||
      (image_0_10_4.default or false);
    image_0_10_4.scoped_threadpool =
      (f.image_0_10_4.scoped_threadpool or false) ||
      (f.image_0_10_4.hdr or false) ||
      (image_0_10_4.hdr or false);
    image_0_10_4.tga =
      (f.image_0_10_4.tga or false) ||
      (f.image_0_10_4.default or false) ||
      (image_0_10_4.default or false);
    image_0_10_4.tiff =
      (f.image_0_10_4.tiff or false) ||
      (f.image_0_10_4.default or false) ||
      (image_0_10_4.default or false);
    image_0_10_4.webp =
      (f.image_0_10_4.webp or false) ||
      (f.image_0_10_4.default or false) ||
      (image_0_10_4.default or false);
    jpeg_decoder_0_1_13.default = true;
    num_iter_0_1_34.default = true;
    num_rational_0_1_39.default = true;
    num_traits_0_1_37.default = true;
    png_0_5_2.default = true;
    scoped_threadpool_0_1_8.default = true;
  }) [ byteorder_0_5_3_features enum_primitive_0_1_1_features gif_0_9_2_features glob_0_2_11_features jpeg_decoder_0_1_13_features num_iter_0_1_34_features num_rational_0_1_39_features num_traits_0_1_37_features png_0_5_2_features scoped_threadpool_0_1_8_features ];
  inflate_0_1_1 = { features?(inflate_0_1_1_features {}) }: inflate_0_1_1_ {
    features = mkFeatures (features.inflate_0_1_1 or {});
  };
  inflate_0_1_1_features = f: updateFeatures f ({
    inflate_0_1_1.default = (f.inflate_0_1_1.default or true);
  }) [];
  itoa_0_3_1 = { features?(itoa_0_3_1_features {}) }: itoa_0_3_1_ {};
  itoa_0_3_1_features = f: updateFeatures f ({
    itoa_0_3_1.default = (f.itoa_0_3_1.default or true);
  }) [];
  jpeg_decoder_0_1_13 = { features?(jpeg_decoder_0_1_13_features {}) }: jpeg_decoder_0_1_13_ {
    dependencies = mapFeatures features ([ byteorder_1_1_0 ]
      ++ (if features.jpeg_decoder_0_1_13.rayon or false then [ rayon_0_8_2 ] else []));
    features = mkFeatures (features.jpeg_decoder_0_1_13 or {});
  };
  jpeg_decoder_0_1_13_features = f: updateFeatures f (rec {
    byteorder_1_1_0.default = true;
    jpeg_decoder_0_1_13.default = (f.jpeg_decoder_0_1_13.default or true);
    jpeg_decoder_0_1_13.rayon =
      (f.jpeg_decoder_0_1_13.rayon or false) ||
      (f.jpeg_decoder_0_1_13.default or false) ||
      (jpeg_decoder_0_1_13.default or false);
    rayon_0_8_2.default = true;
  }) [ byteorder_1_1_0_features rayon_0_8_2_features ];
  kernel32_sys_0_2_2 = { features?(kernel32_sys_0_2_2_features {}) }: kernel32_sys_0_2_2_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  kernel32_sys_0_2_2_features = f: updateFeatures f ({
    kernel32_sys_0_2_2.default = (f.kernel32_sys_0_2_2.default or true);
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  lazy_static_0_2_8 = { features?(lazy_static_0_2_8_features {}) }: lazy_static_0_2_8_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazy_static_0_2_8 or {});
  };
  lazy_static_0_2_8_features = f: updateFeatures f (rec {
    lazy_static_0_2_8.default = (f.lazy_static_0_2_8.default or true);
    lazy_static_0_2_8.nightly =
      (f.lazy_static_0_2_8.nightly or false) ||
      (f.lazy_static_0_2_8.spin_no_std or false) ||
      (lazy_static_0_2_8.spin_no_std or false);
    lazy_static_0_2_8.spin =
      (f.lazy_static_0_2_8.spin or false) ||
      (f.lazy_static_0_2_8.spin_no_std or false) ||
      (lazy_static_0_2_8.spin_no_std or false);
  }) [];
  libc_0_2_23 = { features?(libc_0_2_23_features {}) }: libc_0_2_23_ {
    features = mkFeatures (features.libc_0_2_23 or {});
  };
  libc_0_2_23_features = f: updateFeatures f (rec {
    libc_0_2_23.default = (f.libc_0_2_23.default or true);
    libc_0_2_23.use_std =
      (f.libc_0_2_23.use_std or false) ||
      (f.libc_0_2_23.default or false) ||
      (libc_0_2_23.default or false);
  }) [];
  libdbus_sys_0_1_1 = { features?(libdbus_sys_0_1_1_features {}) }: libdbus_sys_0_1_1_ {
    buildDependencies = mapFeatures features ([ metadeps_1_1_2 ]);};
  libdbus_sys_0_1_1_features = f: updateFeatures f ({
    libdbus_sys_0_1_1.default = (f.libdbus_sys_0_1_1.default or true);
    metadeps_1_1_2.default = true;
  }) [ metadeps_1_1_2_features ];
  libloading_0_3_4 = { features?(libloading_0_3_4_features {}) }: libloading_0_3_4_ {
    dependencies = mapFeatures features ([ lazy_static_0_2_8 ])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
    buildDependencies = mapFeatures features ([ target_build_utils_0_3_1 ]);
  };
  libloading_0_3_4_features = f: updateFeatures f ({
    kernel32_sys_0_2_2.default = true;
    lazy_static_0_2_8.default = true;
    libloading_0_3_4.default = (f.libloading_0_3_4.default or true);
    target_build_utils_0_3_1.default = true;
    winapi_0_2_8.default = true;
  }) [ lazy_static_0_2_8_features target_build_utils_0_3_1_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  lzw_0_10_0 = { features?(lzw_0_10_0_features {}) }: lzw_0_10_0_ {
    features = mkFeatures (features.lzw_0_10_0 or {});
  };
  lzw_0_10_0_features = f: updateFeatures f (rec {
    lzw_0_10_0.default = (f.lzw_0_10_0.default or true);
    lzw_0_10_0.raii_no_panic =
      (f.lzw_0_10_0.raii_no_panic or false) ||
      (f.lzw_0_10_0.default or false) ||
      (lzw_0_10_0.default or false);
  }) [];
  memmap_0_4_0 = { features?(memmap_0_4_0_features {}) }: memmap_0_4_0_ {
    dependencies = mapFeatures features ([ fs2_0_2_5 kernel32_sys_0_2_2 libc_0_2_23 winapi_0_2_8 ]);
  };
  memmap_0_4_0_features = f: updateFeatures f ({
    fs2_0_2_5.default = true;
    kernel32_sys_0_2_2.default = true;
    libc_0_2_23.default = true;
    memmap_0_4_0.default = (f.memmap_0_4_0.default or true);
    winapi_0_2_8.default = true;
  }) [ fs2_0_2_5_features kernel32_sys_0_2_2_features libc_0_2_23_features winapi_0_2_8_features ];
  metadeps_1_1_2 = { features?(metadeps_1_1_2_features {}) }: metadeps_1_1_2_ {
    dependencies = mapFeatures features ([ error_chain_0_10_0 pkg_config_0_3_9 toml_0_2_1 ]);
  };
  metadeps_1_1_2_features = f: updateFeatures f ({
    error_chain_0_10_0.default = (f.error_chain_0_10_0.default or false);
    metadeps_1_1_2.default = (f.metadeps_1_1_2.default or true);
    pkg_config_0_3_9.default = true;
    toml_0_2_1.default = (f.toml_0_2_1.default or false);
  }) [ error_chain_0_10_0_features pkg_config_0_3_9_features toml_0_2_1_features ];
  miniz_sys_0_1_10 = { features?(miniz_sys_0_1_10_features {}) }: miniz_sys_0_1_10_ {
    dependencies = mapFeatures features ([ libc_0_2_23 ]);
    buildDependencies = mapFeatures features ([ cc_1_0_0 ]);
  };
  miniz_sys_0_1_10_features = f: updateFeatures f ({
    cc_1_0_0.default = true;
    libc_0_2_23.default = true;
    miniz_sys_0_1_10.default = (f.miniz_sys_0_1_10.default or true);
  }) [ libc_0_2_23_features cc_1_0_0_features ];
  num_bigint_0_1_40 = { features?(num_bigint_0_1_40_features {}) }: num_bigint_0_1_40_ {
    dependencies = mapFeatures features ([ num_integer_0_1_35 num_traits_0_1_37 ]
      ++ (if features.num_bigint_0_1_40.rand or false then [ rand_0_3_15 ] else [])
      ++ (if features.num_bigint_0_1_40.rustc-serialize or false then [ rustc_serialize_0_3_24 ] else []));
    features = mkFeatures (features.num_bigint_0_1_40 or {});
  };
  num_bigint_0_1_40_features = f: updateFeatures f (rec {
    num_bigint_0_1_40.default = (f.num_bigint_0_1_40.default or true);
    num_bigint_0_1_40.rand =
      (f.num_bigint_0_1_40.rand or false) ||
      (f.num_bigint_0_1_40.default or false) ||
      (num_bigint_0_1_40.default or false);
    num_bigint_0_1_40.rustc-serialize =
      (f.num_bigint_0_1_40.rustc-serialize or false) ||
      (f.num_bigint_0_1_40.default or false) ||
      (num_bigint_0_1_40.default or false);
    num_integer_0_1_35.default = true;
    num_traits_0_1_37.default = true;
    rand_0_3_15.default = true;
    rustc_serialize_0_3_24.default = true;
  }) [ num_integer_0_1_35_features num_traits_0_1_37_features rand_0_3_15_features rustc_serialize_0_3_24_features ];
  num_integer_0_1_35 = { features?(num_integer_0_1_35_features {}) }: num_integer_0_1_35_ {
    dependencies = mapFeatures features ([ num_traits_0_1_37 ]);
  };
  num_integer_0_1_35_features = f: updateFeatures f ({
    num_integer_0_1_35.default = (f.num_integer_0_1_35.default or true);
    num_traits_0_1_37.default = true;
  }) [ num_traits_0_1_37_features ];
  num_iter_0_1_34 = { features?(num_iter_0_1_34_features {}) }: num_iter_0_1_34_ {
    dependencies = mapFeatures features ([ num_integer_0_1_35 num_traits_0_1_37 ]);
  };
  num_iter_0_1_34_features = f: updateFeatures f ({
    num_integer_0_1_35.default = true;
    num_iter_0_1_34.default = (f.num_iter_0_1_34.default or true);
    num_traits_0_1_37.default = true;
  }) [ num_integer_0_1_35_features num_traits_0_1_37_features ];
  num_rational_0_1_39 = { features?(num_rational_0_1_39_features {}) }: num_rational_0_1_39_ {
    dependencies = mapFeatures features ([ num_integer_0_1_35 num_traits_0_1_37 ]
      ++ (if features.num_rational_0_1_39.num-bigint or false then [ num_bigint_0_1_40 ] else [])
      ++ (if features.num_rational_0_1_39.rustc-serialize or false then [ rustc_serialize_0_3_24 ] else []));
    features = mkFeatures (features.num_rational_0_1_39 or {});
  };
  num_rational_0_1_39_features = f: updateFeatures f (rec {
    num_bigint_0_1_40.default = true;
    num_integer_0_1_35.default = true;
    num_rational_0_1_39.bigint =
      (f.num_rational_0_1_39.bigint or false) ||
      (f.num_rational_0_1_39.default or false) ||
      (num_rational_0_1_39.default or false);
    num_rational_0_1_39.default = (f.num_rational_0_1_39.default or true);
    num_rational_0_1_39.num-bigint =
      (f.num_rational_0_1_39.num-bigint or false) ||
      (f.num_rational_0_1_39.bigint or false) ||
      (num_rational_0_1_39.bigint or false);
    num_rational_0_1_39.rustc-serialize =
      (f.num_rational_0_1_39.rustc-serialize or false) ||
      (f.num_rational_0_1_39.default or false) ||
      (num_rational_0_1_39.default or false);
    num_traits_0_1_37.default = true;
    rustc_serialize_0_3_24.default = true;
  }) [ num_bigint_0_1_40_features num_integer_0_1_35_features num_traits_0_1_37_features rustc_serialize_0_3_24_features ];
  num_traits_0_1_37 = { features?(num_traits_0_1_37_features {}) }: num_traits_0_1_37_ {};
  num_traits_0_1_37_features = f: updateFeatures f ({
    num_traits_0_1_37.default = (f.num_traits_0_1_37.default or true);
  }) [];
  num_cpus_1_6_2 = { features?(num_cpus_1_6_2_features {}) }: num_cpus_1_6_2_ {
    dependencies = mapFeatures features ([ libc_0_2_23 ]);
  };
  num_cpus_1_6_2_features = f: updateFeatures f ({
    libc_0_2_23.default = true;
    num_cpus_1_6_2.default = (f.num_cpus_1_6_2.default or true);
  }) [ libc_0_2_23_features ];
  phf_0_7_21 = { features?(phf_0_7_21_features {}) }: phf_0_7_21_ {
    dependencies = mapFeatures features ([ phf_shared_0_7_21 ]);
    features = mkFeatures (features.phf_0_7_21 or {});
  };
  phf_0_7_21_features = f: updateFeatures f (rec {
    phf_0_7_21.default = (f.phf_0_7_21.default or true);
    phf_shared_0_7_21.core =
      (f.phf_shared_0_7_21.core or false) ||
      (phf_0_7_21.core or false) ||
      (f.phf_0_7_21.core or false);
    phf_shared_0_7_21.default = true;
    phf_shared_0_7_21.unicase =
      (f.phf_shared_0_7_21.unicase or false) ||
      (phf_0_7_21.unicase or false) ||
      (f.phf_0_7_21.unicase or false);
  }) [ phf_shared_0_7_21_features ];
  phf_codegen_0_7_21 = { features?(phf_codegen_0_7_21_features {}) }: phf_codegen_0_7_21_ {
    dependencies = mapFeatures features ([ phf_generator_0_7_21 phf_shared_0_7_21 ]);
  };
  phf_codegen_0_7_21_features = f: updateFeatures f ({
    phf_codegen_0_7_21.default = (f.phf_codegen_0_7_21.default or true);
    phf_generator_0_7_21.default = true;
    phf_shared_0_7_21.default = true;
  }) [ phf_generator_0_7_21_features phf_shared_0_7_21_features ];
  phf_generator_0_7_21 = { features?(phf_generator_0_7_21_features {}) }: phf_generator_0_7_21_ {
    dependencies = mapFeatures features ([ phf_shared_0_7_21 rand_0_3_15 ]);
  };
  phf_generator_0_7_21_features = f: updateFeatures f ({
    phf_generator_0_7_21.default = (f.phf_generator_0_7_21.default or true);
    phf_shared_0_7_21.default = true;
    rand_0_3_15.default = true;
  }) [ phf_shared_0_7_21_features rand_0_3_15_features ];
  phf_shared_0_7_21 = { features?(phf_shared_0_7_21_features {}) }: phf_shared_0_7_21_ {
    dependencies = mapFeatures features ([ siphasher_0_2_2 ]);
    features = mkFeatures (features.phf_shared_0_7_21 or {});
  };
  phf_shared_0_7_21_features = f: updateFeatures f ({
    phf_shared_0_7_21.default = (f.phf_shared_0_7_21.default or true);
    siphasher_0_2_2.default = true;
  }) [ siphasher_0_2_2_features ];
  pkg_config_0_3_9 = { features?(pkg_config_0_3_9_features {}) }: pkg_config_0_3_9_ {};
  pkg_config_0_3_9_features = f: updateFeatures f ({
    pkg_config_0_3_9.default = (f.pkg_config_0_3_9.default or true);
  }) [];
  png_0_5_2 = { features?(png_0_5_2_features {}) }: png_0_5_2_ {
    dependencies = mapFeatures features ([ bitflags_0_7_0 inflate_0_1_1 num_iter_0_1_34 ]
      ++ (if features.png_0_5_2.flate2 or false then [ flate2_0_2_20 ] else []));
    features = mkFeatures (features.png_0_5_2 or {});
  };
  png_0_5_2_features = f: updateFeatures f (rec {
    bitflags_0_7_0.default = true;
    flate2_0_2_20.default = true;
    inflate_0_1_1.default = true;
    num_iter_0_1_34.default = true;
    png_0_5_2.default = (f.png_0_5_2.default or true);
    png_0_5_2.flate2 =
      (f.png_0_5_2.flate2 or false) ||
      (f.png_0_5_2.png-encoding or false) ||
      (png_0_5_2.png-encoding or false);
    png_0_5_2.png-encoding =
      (f.png_0_5_2.png-encoding or false) ||
      (f.png_0_5_2.default or false) ||
      (png_0_5_2.default or false);
  }) [ bitflags_0_7_0_features flate2_0_2_20_features inflate_0_1_1_features num_iter_0_1_34_features ];
  rand_0_3_15 = { features?(rand_0_3_15_features {}) }: rand_0_3_15_ {
    dependencies = mapFeatures features ([ libc_0_2_23 ]);
  };
  rand_0_3_15_features = f: updateFeatures f ({
    libc_0_2_23.default = true;
    rand_0_3_15.default = (f.rand_0_3_15.default or true);
  }) [ libc_0_2_23_features ];
  rayon_0_8_2 = { features?(rayon_0_8_2_features {}) }: rayon_0_8_2_ {
    dependencies = mapFeatures features ([ rayon_core_1_2_1 ]);
  };
  rayon_0_8_2_features = f: updateFeatures f ({
    rayon_0_8_2.default = (f.rayon_0_8_2.default or true);
    rayon_core_1_2_1.default = true;
  }) [ rayon_core_1_2_1_features ];
  rayon_core_1_2_1 = { features?(rayon_core_1_2_1_features {}) }: rayon_core_1_2_1_ {
    dependencies = mapFeatures features ([ coco_0_1_1 futures_0_1_16 lazy_static_0_2_8 libc_0_2_23 num_cpus_1_6_2 rand_0_3_15 ]);
  };
  rayon_core_1_2_1_features = f: updateFeatures f ({
    coco_0_1_1.default = true;
    futures_0_1_16.default = true;
    lazy_static_0_2_8.default = true;
    libc_0_2_23.default = true;
    num_cpus_1_6_2.default = true;
    rand_0_3_15.default = true;
    rayon_core_1_2_1.default = (f.rayon_core_1_2_1.default or true);
  }) [ coco_0_1_1_features futures_0_1_16_features lazy_static_0_2_8_features libc_0_2_23_features num_cpus_1_6_2_features rand_0_3_15_features ];
  rustc_serialize_0_3_24 = { features?(rustc_serialize_0_3_24_features {}) }: rustc_serialize_0_3_24_ {};
  rustc_serialize_0_3_24_features = f: updateFeatures f ({
    rustc_serialize_0_3_24.default = (f.rustc_serialize_0_3_24.default or true);
  }) [];
  rustc_version_0_1_7 = { features?(rustc_version_0_1_7_features {}) }: rustc_version_0_1_7_ {
    dependencies = mapFeatures features ([ semver_0_1_20 ]);
  };
  rustc_version_0_1_7_features = f: updateFeatures f ({
    rustc_version_0_1_7.default = (f.rustc_version_0_1_7.default or true);
    semver_0_1_20.default = true;
  }) [ semver_0_1_20_features ];
  scoped_threadpool_0_1_8 = { features?(scoped_threadpool_0_1_8_features {}) }: scoped_threadpool_0_1_8_ {
    features = mkFeatures (features.scoped_threadpool_0_1_8 or {});
  };
  scoped_threadpool_0_1_8_features = f: updateFeatures f ({
    scoped_threadpool_0_1_8.default = (f.scoped_threadpool_0_1_8.default or true);
  }) [];
  scopeguard_0_3_2 = { features?(scopeguard_0_3_2_features {}) }: scopeguard_0_3_2_ {
    features = mkFeatures (features.scopeguard_0_3_2 or {});
  };
  scopeguard_0_3_2_features = f: updateFeatures f (rec {
    scopeguard_0_3_2.default = (f.scopeguard_0_3_2.default or true);
    scopeguard_0_3_2.use_std =
      (f.scopeguard_0_3_2.use_std or false) ||
      (f.scopeguard_0_3_2.default or false) ||
      (scopeguard_0_3_2.default or false);
  }) [];
  semver_0_1_20 = { features?(semver_0_1_20_features {}) }: semver_0_1_20_ {};
  semver_0_1_20_features = f: updateFeatures f ({
    semver_0_1_20.default = (f.semver_0_1_20.default or true);
  }) [];
  serde_0_9_15 = { features?(serde_0_9_15_features {}) }: serde_0_9_15_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.serde_0_9_15 or {});
  };
  serde_0_9_15_features = f: updateFeatures f (rec {
    serde_0_9_15.alloc =
      (f.serde_0_9_15.alloc or false) ||
      (f.serde_0_9_15.collections or false) ||
      (serde_0_9_15.collections or false);
    serde_0_9_15.default = (f.serde_0_9_15.default or true);
    serde_0_9_15.serde_derive =
      (f.serde_0_9_15.serde_derive or false) ||
      (f.serde_0_9_15.derive or false) ||
      (serde_0_9_15.derive or false) ||
      (f.serde_0_9_15.playground or false) ||
      (serde_0_9_15.playground or false);
    serde_0_9_15.std =
      (f.serde_0_9_15.std or false) ||
      (f.serde_0_9_15.default or false) ||
      (serde_0_9_15.default or false) ||
      (f.serde_0_9_15.unstable-testing or false) ||
      (serde_0_9_15.unstable-testing or false);
    serde_0_9_15.unstable =
      (f.serde_0_9_15.unstable or false) ||
      (f.serde_0_9_15.alloc or false) ||
      (serde_0_9_15.alloc or false) ||
      (f.serde_0_9_15.unstable-testing or false) ||
      (serde_0_9_15.unstable-testing or false);
  }) [];
  serde_json_0_9_10 = { features?(serde_json_0_9_10_features {}) }: serde_json_0_9_10_ {
    dependencies = mapFeatures features ([ dtoa_0_4_1 itoa_0_3_1 num_traits_0_1_37 serde_0_9_15 ]);
    features = mkFeatures (features.serde_json_0_9_10 or {});
  };
  serde_json_0_9_10_features = f: updateFeatures f (rec {
    dtoa_0_4_1.default = true;
    itoa_0_3_1.default = true;
    num_traits_0_1_37.default = true;
    serde_0_9_15.default = true;
    serde_json_0_9_10.default = (f.serde_json_0_9_10.default or true);
    serde_json_0_9_10.linked-hash-map =
      (f.serde_json_0_9_10.linked-hash-map or false) ||
      (f.serde_json_0_9_10.preserve_order or false) ||
      (serde_json_0_9_10.preserve_order or false);
  }) [ dtoa_0_4_1_features itoa_0_3_1_features num_traits_0_1_37_features serde_0_9_15_features ];
  siphasher_0_2_2 = { features?(siphasher_0_2_2_features {}) }: siphasher_0_2_2_ {
    dependencies = mapFeatures features ([]);
  };
  siphasher_0_2_2_features = f: updateFeatures f ({
    siphasher_0_2_2.default = (f.siphasher_0_2_2.default or true);
  }) [];
  strsim_0_6_0 = { features?(strsim_0_6_0_features {}) }: strsim_0_6_0_ {};
  strsim_0_6_0_features = f: updateFeatures f ({
    strsim_0_6_0.default = (f.strsim_0_6_0.default or true);
  }) [];
  target_build_utils_0_3_1 = { features?(target_build_utils_0_3_1_features {}) }: target_build_utils_0_3_1_ {
    dependencies = mapFeatures features ([ phf_0_7_21 ]
      ++ (if features.target_build_utils_0_3_1.serde_json or false then [ serde_json_0_9_10 ] else []));
    buildDependencies = mapFeatures features ([ phf_codegen_0_7_21 ]);
    features = mkFeatures (features.target_build_utils_0_3_1 or {});
  };
  target_build_utils_0_3_1_features = f: updateFeatures f (rec {
    phf_0_7_21.default = true;
    phf_codegen_0_7_21.default = true;
    serde_json_0_9_10.default = true;
    target_build_utils_0_3_1.default = (f.target_build_utils_0_3_1.default or true);
    target_build_utils_0_3_1.serde_json =
      (f.target_build_utils_0_3_1.serde_json or false) ||
      (f.target_build_utils_0_3_1.default or false) ||
      (target_build_utils_0_3_1.default or false);
  }) [ phf_0_7_21_features serde_json_0_9_10_features phf_codegen_0_7_21_features ];
  tempfile_2_1_5 = { features?(tempfile_2_1_5_features {}) }: tempfile_2_1_5_ {
    dependencies = mapFeatures features ([ rand_0_3_15 ])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_23 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
    buildDependencies = mapFeatures features ([ rustc_version_0_1_7 ]);
  };
  tempfile_2_1_5_features = f: updateFeatures f ({
    kernel32_sys_0_2_2.default = true;
    libc_0_2_23.default = true;
    rand_0_3_15.default = true;
    rustc_version_0_1_7.default = true;
    tempfile_2_1_5.default = (f.tempfile_2_1_5.default or true);
    winapi_0_2_8.default = true;
  }) [ rand_0_3_15_features rustc_version_0_1_7_features libc_0_2_23_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  term_size_0_3_0 = { features?(term_size_0_3_0_features {}) }: term_size_0_3_0_ {
    dependencies = mapFeatures features ([])
      ++ (if !(kernel == "windows") then mapFeatures features ([ libc_0_2_23 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
    features = mkFeatures (features.term_size_0_3_0 or {});
  };
  term_size_0_3_0_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    libc_0_2_23.default = true;
    term_size_0_3_0.clippy =
      (f.term_size_0_3_0.clippy or false) ||
      (f.term_size_0_3_0.lints or false) ||
      (term_size_0_3_0.lints or false);
    term_size_0_3_0.default = (f.term_size_0_3_0.default or true);
    term_size_0_3_0.lints =
      (f.term_size_0_3_0.lints or false) ||
      (f.term_size_0_3_0.travis or false) ||
      (term_size_0_3_0.travis or false);
    term_size_0_3_0.nightly =
      (f.term_size_0_3_0.nightly or false) ||
      (f.term_size_0_3_0.lints or false) ||
      (term_size_0_3_0.lints or false) ||
      (f.term_size_0_3_0.travis or false) ||
      (term_size_0_3_0.travis or false);
    winapi_0_2_8.default = true;
  }) [ libc_0_2_23_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  toml_0_2_1 = { features?(toml_0_2_1_features {}) }: toml_0_2_1_ {
    dependencies = mapFeatures features ([]);
  };
  toml_0_2_1_features = f: updateFeatures f (rec {
    toml_0_2_1.default = (f.toml_0_2_1.default or true);
    toml_0_2_1.rustc-serialize =
      (f.toml_0_2_1.rustc-serialize or false) ||
      (f.toml_0_2_1.default or false) ||
      (toml_0_2_1.default or false);
  }) [];
  unicode_segmentation_1_2_0 = { features?(unicode_segmentation_1_2_0_features {}) }: unicode_segmentation_1_2_0_ {
    features = mkFeatures (features.unicode_segmentation_1_2_0 or {});
  };
  unicode_segmentation_1_2_0_features = f: updateFeatures f ({
    unicode_segmentation_1_2_0.default = (f.unicode_segmentation_1_2_0.default or true);
  }) [];
  unicode_width_0_1_4 = { features?(unicode_width_0_1_4_features {}) }: unicode_width_0_1_4_ {
    features = mkFeatures (features.unicode_width_0_1_4 or {});
  };
  unicode_width_0_1_4_features = f: updateFeatures f ({
    unicode_width_0_1_4.default = (f.unicode_width_0_1_4.default or true);
  }) [];
  vec_map_0_8_0 = { features?(vec_map_0_8_0_features {}) }: vec_map_0_8_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.vec_map_0_8_0 or {});
  };
  vec_map_0_8_0_features = f: updateFeatures f (rec {
    vec_map_0_8_0.default = (f.vec_map_0_8_0.default or true);
    vec_map_0_8_0.serde =
      (f.vec_map_0_8_0.serde or false) ||
      (f.vec_map_0_8_0.eders or false) ||
      (vec_map_0_8_0.eders or false);
    vec_map_0_8_0.serde_derive =
      (f.vec_map_0_8_0.serde_derive or false) ||
      (f.vec_map_0_8_0.eders or false) ||
      (vec_map_0_8_0.eders or false);
  }) [];
  way_cooler_client_helpers_0_1_0 = { features?(way_cooler_client_helpers_0_1_0_features {}) }: way_cooler_client_helpers_0_1_0_ {
    dependencies = mapFeatures features ([ wayland_client_0_9_6 wayland_sys_0_9_6 ]);
  };
  way_cooler_client_helpers_0_1_0_features = f: updateFeatures f ({
    way_cooler_client_helpers_0_1_0.default = (f.way_cooler_client_helpers_0_1_0.default or true);
    wayland_client_0_9_6.cursor = true;
    wayland_client_0_9_6.default = true;
    wayland_client_0_9_6.dlopen = true;
    wayland_sys_0_9_6.client = true;
    wayland_sys_0_9_6.default = true;
    wayland_sys_0_9_6.dlopen = true;
  }) [ wayland_client_0_9_6_features wayland_sys_0_9_6_features ];
  wayland_client_0_9_6 = { features?(wayland_client_0_9_6_features {}) }: wayland_client_0_9_6_ {
    dependencies = mapFeatures features ([ bitflags_0_7_0 libc_0_2_23 wayland_sys_0_9_6 ]);
    buildDependencies = mapFeatures features ([ wayland_scanner_0_9_6 ]);
    features = mkFeatures (features.wayland_client_0_9_6 or {});
  };
  wayland_client_0_9_6_features = f: updateFeatures f (rec {
    bitflags_0_7_0.default = true;
    libc_0_2_23.default = true;
    wayland_client_0_9_6.cursor =
      (f.wayland_client_0_9_6.cursor or false) ||
      (f.wayland_client_0_9_6.default or false) ||
      (wayland_client_0_9_6.default or false);
    wayland_client_0_9_6.default = (f.wayland_client_0_9_6.default or true);
    wayland_client_0_9_6.egl =
      (f.wayland_client_0_9_6.egl or false) ||
      (f.wayland_client_0_9_6.default or false) ||
      (wayland_client_0_9_6.default or false);
    wayland_scanner_0_9_6.default = true;
    wayland_sys_0_9_6.client = true;
    wayland_sys_0_9_6.cursor =
      (f.wayland_sys_0_9_6.cursor or false) ||
      (wayland_client_0_9_6.cursor or false) ||
      (f.wayland_client_0_9_6.cursor or false);
    wayland_sys_0_9_6.default = true;
    wayland_sys_0_9_6.dlopen =
      (f.wayland_sys_0_9_6.dlopen or false) ||
      (wayland_client_0_9_6.dlopen or false) ||
      (f.wayland_client_0_9_6.dlopen or false);
    wayland_sys_0_9_6.egl =
      (f.wayland_sys_0_9_6.egl or false) ||
      (wayland_client_0_9_6.egl or false) ||
      (f.wayland_client_0_9_6.egl or false);
  }) [ bitflags_0_7_0_features libc_0_2_23_features wayland_sys_0_9_6_features wayland_scanner_0_9_6_features ];
  wayland_kbd_0_9_0 = { features?(wayland_kbd_0_9_0_features {}) }: wayland_kbd_0_9_0_ {
    dependencies = mapFeatures features ([ bitflags_0_7_0 dlib_0_3_1 lazy_static_0_2_8 memmap_0_4_0 wayland_client_0_9_6 ]);
  };
  wayland_kbd_0_9_0_features = f: updateFeatures f ({
    bitflags_0_7_0.default = true;
    dlib_0_3_1.default = true;
    lazy_static_0_2_8.default = true;
    memmap_0_4_0.default = true;
    wayland_client_0_9_6.default = true;
    wayland_kbd_0_9_0.default = (f.wayland_kbd_0_9_0.default or true);
  }) [ bitflags_0_7_0_features dlib_0_3_1_features lazy_static_0_2_8_features memmap_0_4_0_features wayland_client_0_9_6_features ];
  wayland_scanner_0_9_6 = { features?(wayland_scanner_0_9_6_features {}) }: wayland_scanner_0_9_6_ {
    dependencies = mapFeatures features ([ xml_rs_0_3_6 ]);
  };
  wayland_scanner_0_9_6_features = f: updateFeatures f ({
    wayland_scanner_0_9_6.default = (f.wayland_scanner_0_9_6.default or true);
    xml_rs_0_3_6.default = true;
  }) [ xml_rs_0_3_6_features ];
  wayland_sys_0_9_6 = { features?(wayland_sys_0_9_6_features {}) }: wayland_sys_0_9_6_ {
    dependencies = mapFeatures features ([ dlib_0_3_1 ]
      ++ (if features.wayland_sys_0_9_6.lazy_static or false then [ lazy_static_0_2_8 ] else []));
    features = mkFeatures (features.wayland_sys_0_9_6 or {});
  };
  wayland_sys_0_9_6_features = f: updateFeatures f (rec {
    dlib_0_3_1.default = true;
    dlib_0_3_1.dlopen =
      (f.dlib_0_3_1.dlopen or false) ||
      (wayland_sys_0_9_6.dlopen or false) ||
      (f.wayland_sys_0_9_6.dlopen or false);
    lazy_static_0_2_8.default = true;
    wayland_sys_0_9_6.default = (f.wayland_sys_0_9_6.default or true);
    wayland_sys_0_9_6.lazy_static =
      (f.wayland_sys_0_9_6.lazy_static or false) ||
      (f.wayland_sys_0_9_6.dlopen or false) ||
      (wayland_sys_0_9_6.dlopen or false);
    wayland_sys_0_9_6.libc =
      (f.wayland_sys_0_9_6.libc or false) ||
      (f.wayland_sys_0_9_6.server or false) ||
      (wayland_sys_0_9_6.server or false);
  }) [ dlib_0_3_1_features lazy_static_0_2_8_features ];
  wc_lock_0_2_1 = { features?(wc_lock_0_2_1_features {}) }: wc_lock_0_2_1_ {
    dependencies = mapFeatures features ([ byteorder_0_5_3 clap_2_24_2 dbus_0_5_4 image_0_10_4 libc_0_2_23 rand_0_3_15 tempfile_2_1_5 way_cooler_client_helpers_0_1_0 wayland_client_0_9_6 wayland_kbd_0_9_0 wayland_sys_0_9_6 ]);
    buildDependencies = mapFeatures features ([ gcc_0_3_50 wayland_scanner_0_9_6 ]);
  };
  wc_lock_0_2_1_features = f: updateFeatures f ({
    byteorder_0_5_3.default = true;
    clap_2_24_2.default = true;
    dbus_0_5_4.default = true;
    gcc_0_3_50.default = true;
    image_0_10_4.default = true;
    libc_0_2_23.default = true;
    rand_0_3_15.default = true;
    tempfile_2_1_5.default = true;
    way_cooler_client_helpers_0_1_0.default = true;
    wayland_client_0_9_6.cursor = true;
    wayland_client_0_9_6.default = true;
    wayland_client_0_9_6.dlopen = true;
    wayland_kbd_0_9_0.default = true;
    wayland_scanner_0_9_6.default = true;
    wayland_sys_0_9_6.client = true;
    wayland_sys_0_9_6.default = true;
    wayland_sys_0_9_6.dlopen = true;
    wc_lock_0_2_1.default = (f.wc_lock_0_2_1.default or true);
  }) [ byteorder_0_5_3_features clap_2_24_2_features dbus_0_5_4_features image_0_10_4_features libc_0_2_23_features rand_0_3_15_features tempfile_2_1_5_features way_cooler_client_helpers_0_1_0_features wayland_client_0_9_6_features wayland_kbd_0_9_0_features wayland_sys_0_9_6_features gcc_0_3_50_features wayland_scanner_0_9_6_features ];
  winapi_0_2_8 = { features?(winapi_0_2_8_features {}) }: winapi_0_2_8_ {};
  winapi_0_2_8_features = f: updateFeatures f ({
    winapi_0_2_8.default = (f.winapi_0_2_8.default or true);
  }) [];
  winapi_build_0_1_1 = { features?(winapi_build_0_1_1_features {}) }: winapi_build_0_1_1_ {};
  winapi_build_0_1_1_features = f: updateFeatures f ({
    winapi_build_0_1_1.default = (f.winapi_build_0_1_1.default or true);
  }) [];
  xml_rs_0_3_6 = { features?(xml_rs_0_3_6_features {}) }: xml_rs_0_3_6_ {
    dependencies = mapFeatures features ([ bitflags_0_7_0 ]);
  };
  xml_rs_0_3_6_features = f: updateFeatures f ({
    bitflags_0_7_0.default = true;
    xml_rs_0_3_6.default = (f.xml_rs_0_3_6.default or true);
  }) [ bitflags_0_7_0_features ];
}
