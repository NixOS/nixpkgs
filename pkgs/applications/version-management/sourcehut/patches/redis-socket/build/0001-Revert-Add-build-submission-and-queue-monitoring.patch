From 069b03f85847ed4a9223183b62ee53f420838911 Mon Sep 17 00:00:00 2001
From: Julien Moutinho <julm+srht@sourcephile.fr>
Date: Thu, 16 Dec 2021 04:54:24 +0100
Subject: [PATCH builds.sr.ht] Revert "Add build submission and queue
 monitoring"

This reverts commit 690f1aa16c77e418dc40109cd5e8fdf4a7ed947a.

This has broken Unix socket support for Redis
See https://lists.sr.ht/~sircmpwn/sr.ht-dev/%3C20211208082636.65665-1-me%40ignaskiela.eu%3E#%3C20211216033723.wefibfulfjhqnhem@sourcephile.fr%3E
---
 buildsrht/app.py    | 3 ---
 buildsrht/runner.py | 9 +--------
 2 files changed, 1 insertion(+), 11 deletions(-)

diff --git a/buildsrht/app.py b/buildsrht/app.py
index e5321a2..7c9977c 100644
--- a/buildsrht/app.py
+++ b/buildsrht/app.py
@@ -36,9 +36,6 @@ class BuildApp(SrhtFlask):
         self.register_blueprint(secrets)
         self.register_blueprint(gql_blueprint)
 
-        from buildsrht.runner import builds_queue_metrics_collector
-        self.metrics_registry.register(builds_queue_metrics_collector)
-
         @self.context_processor
         def inject():
             return {
diff --git a/buildsrht/runner.py b/buildsrht/runner.py
index 7773452..0389c8e 100644
--- a/buildsrht/runner.py
+++ b/buildsrht/runner.py
@@ -5,13 +5,10 @@ from srht.config import cfg
 from srht.database import db
 from srht.email import send_email
 from srht.oauth import UserType
-from srht.metrics import RedisQueueCollector
-from prometheus_client import Counter
 
 allow_free = cfg("builds.sr.ht", "allow-free", default="no") == "yes"
 
-builds_broker = cfg("builds.sr.ht", "redis")
-runner = Celery('builds', broker=builds_broker, config_source={
+runner = Celery('builds', broker=cfg("builds.sr.ht", "redis"), config_source={
     "CELERY_TASK_SERIALIZER": "json",
     "CELERY_ACCEPT_CONTENT": ["json"],
     "CELERY_RESULT_SERIALIZER": "json",
@@ -19,9 +16,6 @@ runner = Celery('builds', broker=builds_broker, config_source={
     "CELERY_TASK_PROTOCOL": 1
 })
 
-builds_queue_metrics_collector = RedisQueueCollector(builds_broker, "buildsrht_builds", "Number of builds currently in queue")
-builds_submitted = Counter("buildsrht_builds_submited", "Number of builds submitted")
-
 def queue_build(job, manifest):
     from buildsrht.types import JobStatus
     job.status = JobStatus.queued
@@ -34,7 +28,6 @@ def queue_build(job, manifest):
                 cfg("sr.ht", "owner-email"),
                 "Cryptocurrency mining attempt on builds.sr.ht")
     else:
-        builds_submitted.inc()
         run_build.delay(job.id, manifest.to_dict())
 
 def requires_payment(user):
-- 
2.34.0

