# Generated by carnix 0.7.2: carnix nix
{ lib, buildPlatform, buildRustCrate, fetchgit }:
let kernel = buildPlatform.parsed.kernel.name;
    abi = buildPlatform.parsed.abi.name;
    include = includedFiles: src: builtins.filterSource (path: type:
      lib.lists.any (f:
        let p = toString (src + ("/" + f)); in
        (path == p) || (type == "directory" && lib.strings.hasPrefix path p)
      ) includedFiles
    ) src;
    updateFeatures = f: up: functions: builtins.deepSeq f (lib.lists.foldl' (features: fun: fun features) (lib.attrsets.recursiveUpdate f up) functions);
    mapFeatures = features: map (fun: fun { features = features; });
    mkFeatures = feat: lib.lists.foldl (features: featureName:
      if feat.${featureName} or false then
        [ featureName ] ++ features
      else
        features
    ) [] (builtins.attrNames feat);
in
rec {
  libpijul = f: libpijul_0_10_1 { features = libpijul_0_10_1_features { libpijul_0_10_1 = f; }; };
  line = f: line_0_1_2 { features = line_0_1_2_features { line_0_1_2 = f; }; };
  pijul = f: pijul_0_10_0 { features = pijul_0_10_0_features { pijul_0_10_0 = f; }; };
  __all = [ (libpijul {}) (line {}) (pijul {}) ];
  adler32_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "adler32";
    version = "1.0.2";
    authors = [ "Remi Rampin <remirampin@gmail.com>" ];
    sha256 = "1974q3nysai026zhz24df506cxwi09jdzqksll4h7ibpb5n9g1d4";
    inherit dependencies buildDependencies features;
  };
  advapi32_sys_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "advapi32-sys";
    version = "0.2.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1l6789hkz2whd9gklwz1m379kcvyizaj8nnzj3rn4a5h79yg59v7";
    libName = "advapi32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  aho_corasick_0_6_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "aho-corasick";
    version = "0.6.4";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "189v919mp6rzzgjp1khpn4zlq8ls81gh43x1lmc8kbkagdlpq888";
    libName = "aho_corasick";
    crateBin = [ {  name = "aho-corasick-dot"; } ];
    inherit dependencies buildDependencies features;
  };
  ansi_term_0_11_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ansi_term";
    version = "0.11.0";
    authors = [ "ogham@bsago.me" "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>" "Josh Triplett <josh@joshtriplett.org>" ];
    sha256 = "08fk0p2xvkqpmz3zlrwnf6l8sj2vngw464rvzspzp31sbgxbwm4v";
    inherit dependencies buildDependencies features;
  };
  arrayvec_0_4_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "arrayvec";
    version = "0.4.7";
    authors = [ "bluss" ];
    sha256 = "0fzgv7z1x1qnyd7j32vdcadk4k9wfx897y06mr3bw1yi52iqf4z4";
    inherit dependencies buildDependencies features;
  };
  atty_0_2_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "atty";
    version = "0.2.8";
    authors = [ "softprops <d.tangren@gmail.com>" ];
    sha256 = "03w1q3h4w7vhcdxdwa9cirjkzdjz3ja636fj3g64659z6yax6p6d";
    inherit dependencies buildDependencies features;
  };
  backtrace_0_3_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace";
    version = "0.3.6";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "The Rust Project Developers" ];
    sha256 = "00p77iqrv2p47m4y5lq1clb8fi1xfmnz2520frqx88497ff4zhrx";
    inherit dependencies buildDependencies features;
  };
  backtrace_sys_0_1_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace-sys";
    version = "0.1.16";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1cn2c8q3dn06crmnk0p62czkngam4l8nf57wy33nz1y5g25pszwy";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  base64_0_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "base64";
    version = "0.8.0";
    authors = [ "Alice Maz <alice@alicemaz.com>" "Marshall Pierce <marshall@mpierce.org>" ];
    sha256 = "13vksngkp1nmjmnw80nlly71afqi8sqva4di7vd1gxnxr3i5awk5";
    inherit dependencies buildDependencies features;
  };
  base64_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "base64";
    version = "0.9.0";
    authors = [ "Alice Maz <alice@alicemaz.com>" "Marshall Pierce <marshall@mpierce.org>" ];
    sha256 = "1hsl1fgjpgl0ssg471m827svlfij8yhax0l6ldaqkrip78049fz3";
    inherit dependencies buildDependencies features;
  };
  bincode_0_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bincode";
    version = "0.8.0";
    authors = [ "Ty Overby <ty@pre-alpha.com>" "Francesco Mazzoli <f@mazzo.li>" "David Tolnay <dtolnay@gmail.com>" "Daniel Griffen" ];
    sha256 = "0nvn393f2xnc57va8kdpvy7ydginlsb81zdr5pyrpvrzfxbyhcwy";
    inherit dependencies buildDependencies features;
  };
  bit_vec_0_4_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bit-vec";
    version = "0.4.4";
    authors = [ "Alexis Beingessner <a.beingessner@gmail.com>" ];
    sha256 = "06czykmn001z6c3a4nsrpc3lrj63ga0kzp7kgva9r9wylhkkqpq9";
    inherit dependencies buildDependencies features;
  };
  bitflags_0_9_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "0.9.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "18h073l5jd88rx4qdr95fjddr9rk79pb1aqnshzdnw16cfmb9rws";
    inherit dependencies buildDependencies features;
  };
  bitflags_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "1.0.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0p4b3nr0s5nda2qmm7xdhnvh4lkqk3xd8l9ffmwbvqw137vx7mj1";
    inherit dependencies buildDependencies features;
  };
  bs58_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bs58";
    version = "0.2.0";
    authors = [ "Wim Looman <wim@nemo157.com>" ];
    sha256 = "0jjfcpm4sa18ai966j1bgipdsjxw2vz8dqbm9rkjfvpb04fg4c1q";
    inherit dependencies buildDependencies features;
  };
  build_const_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "build_const";
    version = "0.2.1";
    authors = [ "Garrett Berg <vitiral@gmail.com>" ];
    sha256 = "15249xzi3qlm72p4glxgavwyq70fx2sp4df6ii0sdlrixrrp77pl";
    inherit dependencies buildDependencies features;
  };
  byteorder_1_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "byteorder";
    version = "1.2.2";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "03cj21di3hck3w8a09z2b9a4jv0aay7a4bjdd1f86h3a4icl68m1";
    inherit dependencies buildDependencies features;
  };
  bytes_0_4_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bytes";
    version = "0.4.6";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0q7adalpqd09qhxgszw72rd55whgpchpc4r523qhlmaw4gipjsa2";
    inherit dependencies buildDependencies features;
  };
  cc_1_0_10_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cc";
    version = "1.0.10";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0fqchrxcrd2j2b9x7cqs49ck7b3ilsap8s9xhs75gzgl6c1ylpdn";
    inherit dependencies buildDependencies features;
  };
  cfg_if_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cfg-if";
    version = "0.1.2";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0x06hvrrqy96m97593823vvxcgvjaxckghwyy2jcyc8qc7c6cyhi";
    inherit dependencies buildDependencies features;
  };
  chrono_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "chrono";
    version = "0.4.2";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" "Brandon W Maister <quodlibetor@gmail.com>" ];
    sha256 = "1zp63v1g56kfjnazmqg8s4gb66l0ra8ggn3gzqbf9sr8d5lnfzak";
    inherit dependencies buildDependencies features;
  };
  clap_2_31_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "clap";
    version = "2.31.2";
    authors = [ "Kevin K. <kbknapp@gmail.com>" ];
    sha256 = "0r24ziw85a8y1sf2l21y4mvv5qan3rjafcshpyfsjfadqfxsij72";
    inherit dependencies buildDependencies features;
  };
  core_foundation_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "core-foundation";
    version = "0.2.3";
    authors = [ "The Servo Project Developers" ];
    sha256 = "1g0vpya5h2wa0nlz4a74jar6y8z09f0p76zbzfqrm3dbfsrld1pm";
    inherit dependencies buildDependencies features;
  };
  core_foundation_sys_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "core-foundation-sys";
    version = "0.2.3";
    authors = [ "The Servo Project Developers" ];
    sha256 = "19s0d03294m9s5j8cvy345db3gkhs2y02j5268ap0c6ky5apl53s";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  crc_1_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crc";
    version = "1.7.0";
    authors = [ "Rui Hu <code@mrhooray.com>" ];
    sha256 = "1m4lfnjf5qvgy7is97kyi5jjpk6kw0hp088fi59cl7ms1gc9knv0";
    inherit dependencies buildDependencies features;
  };
  crossbeam_0_2_12_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam";
    version = "0.2.12";
    authors = [ "Aaron Turon <aturon@mozilla.com>" ];
    sha256 = "0jkm95is7bwv4parwfq4aim6cigiwd4w9hz09cpild4hp5ry625i";
    inherit dependencies buildDependencies features;
  };
  crossbeam_deque_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-deque";
    version = "0.3.0";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "0skpja7ri6q34li5plq8yk7xinc853014ra59ra9l5sdspcbdypa";
    inherit dependencies buildDependencies features;
  };
  crossbeam_epoch_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-epoch";
    version = "0.4.1";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "134565vkm0h14bk8c3bw0f7n8zzhwl6zi8127zvpa8iglchafn0a";
    inherit dependencies buildDependencies features;
  };
  crossbeam_utils_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-utils";
    version = "0.2.2";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "0jiwzxv0lysjq68yk4bzkygrf69zhdidyw55nxlmimxlm6xv0j4m";
    inherit dependencies buildDependencies features;
  };
  crossbeam_utils_0_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-utils";
    version = "0.3.2";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "1byx31nkxl48la58571h40ssk94faky26jwz15w40v2gba3v4fql";
    inherit dependencies buildDependencies features;
  };
  cryptovec_0_4_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cryptovec";
    version = "0.4.4";
    authors = [ "Pierre-Étienne Meunier <pe@pijul.org>" ];
    sha256 = "1835kmqbhilgx8ca96ig0n7n33d2zpp8gl9p1kkbf7q7p5878agh";
    inherit dependencies buildDependencies features;
  };
  dtoa_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dtoa";
    version = "0.4.2";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1bxsh6fags7nr36vlz07ik2a1rzyipc8x1y30kjk832hf2pzadmw";
    inherit dependencies buildDependencies features;
  };
  encoding_rs_0_7_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encoding_rs";
    version = "0.7.2";
    authors = [ "Henri Sivonen <hsivonen@hsivonen.fi>" ];
    sha256 = "1c23bi3q4qmi2ci8g7p5j4b4i5abyggvyg6hkl7w4p4r527c9g3q";
    inherit dependencies buildDependencies features;
  };
  env_logger_0_4_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "env_logger";
    version = "0.4.3";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0nrx04p4xa86d5kc7aq4fwvipbqji9cmgy449h47nc9f1chafhgg";
    inherit dependencies buildDependencies features;
  };
  env_logger_0_5_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "env_logger";
    version = "0.5.8";
    authors = [ "The Rust Project Developers" ];
    sha256 = "086vakwbm975sk6sxiwapsv9rp0bxp34pvh7mwvv0pkpigmsbjgr";
    inherit dependencies buildDependencies features;
  };
  errno_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "errno";
    version = "0.2.3";
    authors = [ "Chris Wong <lambda.fairy@gmail.com>" ];
    sha256 = "0drqhplvvs6b0gqqlamc0395rbzm2m2g62ccgcsvsrmrn9awivxg";
    inherit dependencies buildDependencies features;
  };
  error_chain_0_11_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "error-chain";
    version = "0.11.0";
    authors = [ "Brian Anderson <banderson@mozilla.com>" "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" "Yamakaky <yamakaky@yamaworld.fr>" ];
    sha256 = "19nz17q6dzp0mx2jhh9qbj45gkvvgcl7zq9z2ai5a8ihbisfj6d7";
    inherit dependencies buildDependencies features;
  };
  filetime_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "filetime";
    version = "0.2.0";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1nga8amw2ppqc3dyg141xhbdmg3b8m2b8z06102nh0pzy3gk076b";
    inherit dependencies buildDependencies features;
  };
  flate2_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "flate2";
    version = "1.0.1";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0hi1r0sz8ca750hq9ym6d3n99g6rmmm8m8hadz2v49pfh6jd6svc";
    inherit dependencies buildDependencies features;
  };
  fnv_1_0_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fnv";
    version = "1.0.6";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "128mlh23y3gg6ag5h8iiqlcbl59smisdzraqy88ldrf75kbw27ip";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  foreign_types_0_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "foreign-types";
    version = "0.3.2";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "105n8sp2djb1s5lzrw04p7ss3dchr5qa3canmynx396nh3vwm2p8";
    inherit dependencies buildDependencies features;
  };
  foreign_types_shared_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "foreign-types-shared";
    version = "0.1.1";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0b6cnvqbflws8dxywk4589vgbz80049lz4x1g9dfy4s1ppd3g4z5";
    inherit dependencies buildDependencies features;
  };
  fs2_0_4_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fs2";
    version = "0.4.3";
    authors = [ "Dan Burkert <dan@danburkert.com>" ];
    sha256 = "1crj36rhhpk3qby9yj7r77w7sld0mzab2yicmphbdkfymbmp3ldp";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon";
    version = "0.3.3";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "0jrf4shb1699r4la8z358vri8318w4mdi6qzfqy30p2ymjlca4gk";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_sys_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon-sys";
    version = "0.3.3";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "08jp1zxrm9jbrr6l26bjal4dbm8bxfy57ickdgibsqxr1n9j3hf5";
    inherit dependencies buildDependencies features;
  };
  futures_0_1_21_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "futures";
    version = "0.1.21";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0v4xrgkqx189b3b4lad2z5l9ay261p9412bzcdh1z6agxwhldr40";
    inherit dependencies buildDependencies features;
  };
  futures_cpupool_0_1_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "futures-cpupool";
    version = "0.1.8";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0ficd31n5ljiixy6x0vjglhq4fp0v1p4qzxm3v6ymsrb3z080l5c";
    inherit dependencies buildDependencies features;
  };
  getch_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "getch";
    version = "0.2.0";
    authors = [ "Pierre-Étienne Meunier <pe@pijul.org>" ];
    sha256 = "044cri8kq4mfs3jgfss7kqwj3rfy92y05jzw9l25rj045z8pvm1z";
    inherit dependencies buildDependencies features;
  };
  globset_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "globset";
    version = "0.2.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "02dycdz001g33rs2jygiq7yqqswmy1in5rczfl44clq1p118fis0";
    inherit dependencies buildDependencies features;
  };
  hex_0_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "hex";
    version = "0.3.2";
    authors = [ "KokaKiwi <kokakiwi@kokakiwi.net>" ];
    sha256 = "0hs0xfb4x67y4ss9mmbjmibkwakbn3xf23i21m409bw2zqk9b6kz";
    inherit dependencies buildDependencies features;
  };
  httparse_1_2_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "httparse";
    version = "1.2.4";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "169grgxpsq0jaa2fk913z692a6qi8c2n1kypsay124b37720d8ll";
    inherit dependencies buildDependencies features;
  };
  humantime_1_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "humantime";
    version = "1.1.1";
    authors = [ "Paul Colomiets <paul@colomiets.name>" ];
    sha256 = "1lzdfsfzdikcp1qb6wcdvnsdv16pmzr7p7cv171vnbnyz2lrwbgn";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  hyper_0_11_25_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "hyper";
    version = "0.11.25";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "01sz75yi93x3hnyrr1n782kv5s1bzcr0114ylyw484j9xpsghw7d";
    inherit dependencies buildDependencies features;
  };
  hyper_tls_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "hyper-tls";
    version = "0.1.3";
    authors = [ "Sean McArthur <sean.monstar@gmail.com>" ];
    sha256 = "1dr5arj79pdyz9f2jggqmna1qpc578f9pdgsf2ana5amjpsp0j89";
    inherit dependencies buildDependencies features;
  };
  idna_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "idna";
    version = "0.1.4";
    authors = [ "The rust-url developers" ];
    sha256 = "15j44qgjx1skwg9i7f4cm36ni4n99b1ayx23yxx7axxcw8vjf336";
    inherit dependencies buildDependencies features;
  };
  ignore_0_3_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ignore";
    version = "0.3.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0sbk286rmcndm438cdb1ppz05cmq7cf22fqb0c29bqdy5z91qqar";
    inherit dependencies buildDependencies features;
  };
  iovec_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "iovec";
    version = "0.1.2";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0vjymmb7wj4v4kza5jjn48fcdb85j3k37y7msjl3ifz0p9yiyp2r";
    inherit dependencies buildDependencies features;
  };
  isatty_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "isatty";
    version = "0.1.7";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1ybvy54a01p7ik2mklbb4lqggvld3xgai953jik5b0qjdzvpz2qm";
    inherit dependencies buildDependencies features;
  };
  itoa_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "itoa";
    version = "0.3.4";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1nfkzz6vrgj0d9l3yzjkkkqzdgs68y294fjdbl7jq118qi8xc9d9";
    inherit dependencies buildDependencies features;
  };
  itoa_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "itoa";
    version = "0.4.1";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1jyrsmrm5q4r2ipmq5hvvkqg0mgnlbk44lm7gr0v9ymvbrh2gbij";
    inherit dependencies buildDependencies features;
  };
  kernel32_sys_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "kernel32-sys";
    version = "0.2.2";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lrw1hbinyvr6cp28g60z97w32w8vsk6pahk64pmrv2fmby8srfj";
    libName = "kernel32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  language_tags_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "language-tags";
    version = "0.2.2";
    authors = [ "Pyfisch <pyfisch@gmail.com>" ];
    sha256 = "1zkrdzsqzzc7509kd7nngdwrp461glm2g09kqpzaqksp82frjdvy";
    inherit dependencies buildDependencies features;
  };
  lazy_static_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "0.2.11";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "1x6871cvpy5b96yv4c7jvpq316fp5d4609s9py7qk6cd6x9k34vm";
    inherit dependencies buildDependencies features;
  };
  lazy_static_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "1.0.0";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "0wfvqyr2nvx2mbsrscg5y7gfa9skhb8p72ayanl8vl49pw24v4fh";
    inherit dependencies buildDependencies features;
  };
  lazycell_0_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazycell";
    version = "0.6.0";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Nikita Pekin <contact@nikitapek.in>" ];
    sha256 = "1ax148clinbvp6alxcih8s5i2bg3mc5mi69n3hvzvzbwlm6k532r";
    inherit dependencies buildDependencies features;
  };
  libc_0_2_40_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libc";
    version = "0.2.40";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1xfc39237ldzgr8x8wcflgdr8zssi3wif7g2zxc02d94gzkjsw83";
    inherit dependencies buildDependencies features;
  };
  libflate_0_1_14_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libflate";
    version = "0.1.14";
    authors = [ "Takeru Ohta <phjgt308@gmail.com>" ];
    sha256 = "03zq769bfffg3iyp2vkkjsmkskabrxiyh5khzppyyngm8w9xpdsc";
    inherit dependencies buildDependencies features;
  };
  libpijul_0_10_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libpijul";
    version = "0.10.1";
    authors = [ "Pierre-Étienne Meunier" "Florent Becker" ];
    sha256 = "167di69ikqvl7a57xfz8lqxqfq5z92rm718rkp67wqm2qxx6akjk";
    inherit dependencies buildDependencies features;
  };
  line_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "line";
    version = "0.1.2";
    authors = [ "pe@pijul.org <pe@pijul.org>" ];
    sha256 = "0fzl7lm5iffz7ab22vmbsnrfim1xb4kh3anrgf4yhzadyqvc23i2";
    inherit dependencies buildDependencies features;
  };
  log_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "log";
    version = "0.3.9";
    authors = [ "The Rust Project Developers" ];
    sha256 = "19i9pwp7lhaqgzangcpw00kc3zsgcqcx84crv07xgz3v7d3kvfa2";
    inherit dependencies buildDependencies features;
  };
  log_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "log";
    version = "0.4.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "01vm8yy3wngvyj6qp1x3xpcb4xq7v67yn9l7fsma8kz28mliz90d";
    inherit dependencies buildDependencies features;
  };
  matches_0_1_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "matches";
    version = "0.1.6";
    authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
    sha256 = "1zlrqlbvzxdil8z8ial2ihvxjwvlvg3g8dr0lcdpsjclkclasjan";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  memchr_2_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memchr";
    version = "2.0.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" "bluss" ];
    sha256 = "0ls2y47rjwapjdax6bp974gdp06ggm1v8d1h69wyydmh1nhgm5gr";
    inherit dependencies buildDependencies features;
  };
  memmap_0_6_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memmap";
    version = "0.6.2";
    authors = [ "Dan Burkert <dan@danburkert.com>" ];
    sha256 = "0xs6wbx30fyyr51yscrhgwkmfphjgq8zan0lc2ficwxwsa7jj1cs";
    inherit dependencies buildDependencies features;
  };
  memoffset_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memoffset";
    version = "0.2.1";
    authors = [ "Gilad Naaman <gilad.naaman@gmail.com>" ];
    sha256 = "00vym01jk9slibq2nsiilgffp7n6k52a4q3n4dqp0xf5kzxvffcf";
    inherit dependencies buildDependencies features;
  };
  mime_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mime";
    version = "0.3.5";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "032y8q6h7yzmji1cznw04grbi0inbl1m6rcwgsqfwiw8gflcgy0l";
    inherit dependencies buildDependencies features;
  };
  mime_guess_2_0_0_alpha_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mime_guess";
    version = "2.0.0-alpha.4";
    authors = [ "Austin Bonander <austin.bonander@gmail.com>" ];
    sha256 = "1kz8j1hb4azgyzcs6bnrrygv0ykjp170llri0is031q01vi7fgnh";
    inherit dependencies buildDependencies features;
  };
  miniz_sys_0_1_10_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "miniz-sys";
    version = "0.1.10";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "11vg6phafxil87nbxgrlhcx5hjr3145wsbwwkfmibvnmzxfdmvln";
    libPath = "lib.rs";
    libName = "miniz_sys";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  mio_0_6_14_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mio";
    version = "0.6.14";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0zws9p0d734qps4wdv47d32mmpb85caf9l2arwhxc7pslqk4icap";
    inherit dependencies buildDependencies features;
  };
  mio_uds_0_6_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mio-uds";
    version = "0.6.4";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0migvjj2psaln6169rmyci5v6kvx5b7ylj5a6i2dkw98dylf2s1m";
    inherit dependencies buildDependencies features;
  };
  miow_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "miow";
    version = "0.2.1";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "14f8zkc6ix7mkyis1vsqnim8m29b6l55abkba3p2yz7j1ibcvrl0";
    inherit dependencies buildDependencies features;
  };
  native_tls_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "native-tls";
    version = "0.1.5";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "11f75qmbny5pnn6zp0vlvadrvc9ph9qsxiyn4n6q02xyd93pxxlf";
    inherit dependencies buildDependencies features;
  };
  net2_0_2_32_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "net2";
    version = "0.2.32";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "15q3il71qaqrwz8q1nz0jyw5q4fl0vrkajgaj909zradxsxv1mcq";
    inherit dependencies buildDependencies features;
  };
  nodrop_0_1_12_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "nodrop";
    version = "0.1.12";
    authors = [ "bluss" ];
    sha256 = "1b9rxvdg8061gxjc239l9slndf0ds3m6fy2sf3gs8f9kknqgl49d";
    inherit dependencies buildDependencies features;
  };
  num_0_1_42_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num";
    version = "0.1.42";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1632gczzrmmxdsj3jignwcr793jq8vxw3qkdzpdvbip3vaf1ljgq";
    inherit dependencies buildDependencies features;
  };
  num_bigint_0_1_43_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-bigint";
    version = "0.1.43";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1vv65dypraqcqz5kvnj6x3c6ckcrvi4sl84myklasfdrxdpgczvg";
    inherit dependencies buildDependencies features;
  };
  num_complex_0_1_43_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-complex";
    version = "0.1.43";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1rs1rhwcxsdamllz1p88ibi8g8s4hhx8rqvvp819x71zphgpqsa2";
    inherit dependencies buildDependencies features;
  };
  num_integer_0_1_36_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-integer";
    version = "0.1.36";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1fjprz9h8b04zrsnfmkkfhiw4w852bbh16hy8w9ahlcdhg77i66y";
    inherit dependencies buildDependencies features;
  };
  num_iter_0_1_35_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-iter";
    version = "0.1.35";
    authors = [ "The Rust Project Developers" ];
    sha256 = "12w49r9als1ihg6rc3qkj673vwi0bmh47pzy6x4samlb07w074mi";
    inherit dependencies buildDependencies features;
  };
  num_rational_0_1_42_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-rational";
    version = "0.1.42";
    authors = [ "The Rust Project Developers" ];
    sha256 = "09gfmmak5p77rvi2mcsqsalzi81nc93nc8ipchnjv5b8lwn8mm89";
    inherit dependencies buildDependencies features;
  };
  num_traits_0_1_43_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-traits";
    version = "0.1.43";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1zdzx78vrcg3f39w94pqjs1mwxl1phyv7843hwgwkzggwcxhhf6s";
    inherit dependencies buildDependencies features;
  };
  num_traits_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-traits";
    version = "0.2.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1gcqhcd27gi72al5salxlp3m374qr3xnc3zh249f7dsrxc9rmgh0";
    inherit dependencies buildDependencies features;
  };
  num_cpus_1_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num_cpus";
    version = "1.8.0";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "1y6qnd9r8ga6y8mvlabdrr73nc8cshjjlzbvnanzyj9b8zzkfwk2";
    inherit dependencies buildDependencies features;
  };
  openssl_0_9_24_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "openssl";
    version = "0.9.24";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0wzm3c11g3ndaqyzq36mcdcm1q4a8pmsyi33ibybhjz28g2z0f79";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  openssl_0_10_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "openssl";
    version = "0.10.6";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "1qfp3fv3a2cv7jnvhz66g146mwn8dc3pd4gljry1749jmf0vgqfp";
    inherit dependencies buildDependencies features;
  };
  openssl_sys_0_9_28_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "openssl-sys";
    version = "0.9.28";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0067nk1p9jwipx226gfldyxw6h4wlvvqwgh7iak7d1x8dbw4vyq6";
    inherit dependencies buildDependencies features;
  };
  pager_0_14_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "pager";
    version = "0.14.0";
    authors = [ "Cyril Plisko <cyril.plisko@mountall.com>" ];
    sha256 = "0r65n0l0rvbhk4p7g3ixwcklrcadl1r9z5ck0ka4jhca4ymm385c";
    inherit dependencies buildDependencies features;
  };
  percent_encoding_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "percent-encoding";
    version = "1.0.1";
    authors = [ "The rust-url developers" ];
    sha256 = "04ahrp7aw4ip7fmadb0bknybmkfav0kk0gw4ps3ydq5w6hr0ib5i";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  phf_0_7_21_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "phf";
    version = "0.7.21";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "11m2rzm2s8s35m0s97gjxxb181xz352kjlhr387xj5c8q3qp5afg";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  phf_codegen_0_7_21_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "phf_codegen";
    version = "0.7.21";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0kgy8s2q4zr0iqcm21mgq4ppc45wy6z7b5wn98xyfsrcad6lwmmj";
    inherit dependencies buildDependencies features;
  };
  phf_generator_0_7_21_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "phf_generator";
    version = "0.7.21";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "1jxjfzc6d6d4l9nv0r2bb66if5brk9lnncmg4dpjjifn6zhhqd9g";
    inherit dependencies buildDependencies features;
  };
  phf_shared_0_7_21_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "phf_shared";
    version = "0.7.21";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0lxpg3wgxfhzfalmf9ha9my1lsvfjy74ah9f6mfw88xlp545jlln";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  pijul_0_10_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "pijul";
    version = "0.10.0";
    authors = [ "Pierre-Étienne Meunier" "Florent Becker" ];
    sha256 = "0xd9rwa31wphsv1biay6sfgvhc0z7hcfl7nrjmqwmh38fy3flwmm";
    inherit dependencies buildDependencies features;
  };
  pkg_config_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "pkg-config";
    version = "0.3.9";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "06k8fxgrsrxj8mjpjcq1n7mn2p1shpxif4zg9y5h09c7vy20s146";
    inherit dependencies buildDependencies features;
  };
  proc_macro2_0_3_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "proc-macro2";
    version = "0.3.6";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1viqlvsknzvgc2j0bcz53n94zxv7c816py7hv2r27y0bv1dq4iqp";
    inherit dependencies buildDependencies features;
  };
  progrs_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "progrs";
    version = "0.1.1";
    authors = [ "Thomas Jespersen <laumann@protonmail.com>" ];
    sha256 = "0fxgkzc8l0hhbi5lr3zzdl2513prryjcb51jy2ba5169ky0wfqyb";
    inherit dependencies buildDependencies features;
  };
  quick_error_1_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quick-error";
    version = "1.2.1";
    authors = [ "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" ];
    sha256 = "0vq41csw68ynaq2fy5dvldh4lx7pnbw6pr332kv5rvrz4pz0jnq6";
    inherit dependencies buildDependencies features;
  };
  quote_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quote";
    version = "0.5.1";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0jppgddqp6vp67ns4hpyf644n5678fligp711isp0xkvfv19la3r";
    inherit dependencies buildDependencies features;
  };
  rand_0_3_22_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.3.22";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0wrj12acx7l4hr7ag3nz8b50yhp8ancyq988bzmnnsxln67rsys0";
    inherit dependencies buildDependencies features;
  };
  rand_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.4.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0h8pkg23wb67i8904sm76iyr1jlmhklb85vbpz9c9191a24xzkfm";
    inherit dependencies buildDependencies features;
  };
  redox_syscall_0_1_37_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_syscall";
    version = "0.1.37";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "0qa0jl9cr3qp80an8vshp2mcn8rzvwiavs1398hq1vsjw7pc3h2v";
    libName = "syscall";
    inherit dependencies buildDependencies features;
  };
  redox_termios_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_termios";
    version = "0.1.1";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "04s6yyzjca552hdaqlvqhp3vw0zqbc304md5czyd3axh56iry8wh";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  regex_0_2_10_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex";
    version = "0.2.10";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0cwdmcllssm984b5nnpr55rgla1yzw31kmp2imxdpgk6hvlhf1ca";
    inherit dependencies buildDependencies features;
  };
  regex_syntax_0_5_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex-syntax";
    version = "0.5.5";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1m5v66r6xxglgkdl1ci23qq0bl0k2wqplm6li4pmg1k7szvgxcbp";
    inherit dependencies buildDependencies features;
  };
  relay_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "relay";
    version = "0.1.1";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "16csfaslbmj25iaxs88p8wcfh2zfpkh9isg9adid0nxjxvknh07r";
    inherit dependencies buildDependencies features;
  };
  remove_dir_all_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "remove_dir_all";
    version = "0.5.1";
    authors = [ "Aaronepower <theaaronepower@gmail.com>" ];
    sha256 = "1chx3yvfbj46xjz4bzsvps208l46hfbcy0sm98gpiya454n4rrl7";
    inherit dependencies buildDependencies features;
  };
  reqwest_0_8_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "reqwest";
    version = "0.8.5";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "1wrrv3kwh0pm5yzajf986z21pyf48vxskvn7pflzhrm9y11kalnf";
    inherit dependencies buildDependencies features;
  };
  rpassword_2_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rpassword";
    version = "2.0.0";
    authors = [ "Conrad Kleinespel <conradk@conradk.com>" ];
    sha256 = "1p64m14y1j890qb4pq2jhx6yc0yhkbw0dvmhlsbhxx5cqsxivcgi";
    inherit dependencies buildDependencies features;
  };
  rustc_demangle_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc-demangle";
    version = "0.1.7";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0wrln6jvwmqrhyvqlw5vq9a2s4r04ja8mrybxjj9aaaar1fyvns6";
    inherit dependencies buildDependencies features;
  };
  rustc_serialize_0_3_24_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc-serialize";
    version = "0.3.24";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0rfk6p66mqkd3g36l0ddlv2rvnp1mp3lrq5frq9zz5cbnz5pmmxn";
    inherit dependencies buildDependencies features;
  };
  safemem_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "safemem";
    version = "0.2.0";
    authors = [ "Austin Bonander <austin.bonander@gmail.com>" ];
    sha256 = "058m251q202n479ip1h6s91yw3plg66vsk5mpaflssn6rs5hijdm";
    inherit dependencies buildDependencies features;
  };
  same_file_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "same-file";
    version = "1.0.2";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "1xjj93345qz4dqk1qwlah98dkqrbfvrg7i3hcm3dkjygjqdid2h7";
    inherit dependencies buildDependencies features;
  };
  sanakirja_0_8_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "sanakirja";
    version = "0.8.16";
    authors = [ "Pierre-Étienne Meunier" "Florent Becker" ];
    sha256 = "0kjwhdy038qsqhj8dx15slbgh9fdb0f4bf1asrsq9lzr7i7gkpb9";
    inherit dependencies buildDependencies features;
  };
  schannel_0_1_12_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "schannel";
    version = "0.1.12";
    authors = [ "Steven Fackler <sfackler@gmail.com>" "Steffen Butzer <steffen.butzer@outlook.com>" ];
    sha256 = "1lqdzx8d4rql8ah9w760syvrbbyp26s9cgidvrh34h0hjglja42d";
    inherit dependencies buildDependencies features;
  };
  scoped_tls_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "scoped-tls";
    version = "0.1.1";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1csp1bp0cc1hvdk0ml293zqjpblh7254cd88q22yx63xmszj1dh4";
    inherit dependencies buildDependencies features;
  };
  scopeguard_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "scopeguard";
    version = "0.3.3";
    authors = [ "bluss" ];
    sha256 = "0i1l013csrqzfz6c68pr5pi01hg5v5yahq8fsdmaxy6p8ygsjf3r";
    inherit dependencies buildDependencies features;
  };
  security_framework_0_1_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "security-framework";
    version = "0.1.16";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "1kxczsaj8gz4922jl5af2gkxh71rasb6khaf3dp7ldlnw9qf2sbm";
    inherit dependencies buildDependencies features;
  };
  security_framework_sys_0_1_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "security-framework-sys";
    version = "0.1.16";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0ai2pivdr5fyc7czbkpcrwap0imyy0r8ndarrl3n5kiv0jha1js3";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  serde_1_0_41_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde";
    version = "1.0.41";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1dscs358mfi3g4g515r1rafwalzm50nqbnf2av5xdsa208lrdni0";
    inherit dependencies buildDependencies features;
  };
  serde_derive_1_0_41_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_derive";
    version = "1.0.41";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0fvlxgiphh0ih8dgm0r1ms4jpb38rgxbf9rqx0qhczx6adzzhv1s";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  serde_derive_internals_0_23_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_derive_internals";
    version = "0.23.1";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0bjgcn2irh6sd34q3j3xkbn5ghfgiv3cfdlffb31lh0bikwpk1b4";
    inherit dependencies buildDependencies features;
  };
  serde_json_1_0_15_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_json";
    version = "1.0.15";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "161fr6r0krf7z7azlywzp8jg8bjzjgxrj6l5sbh9cpdcmvwh4y18";
    inherit dependencies buildDependencies features;
  };
  serde_urlencoded_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_urlencoded";
    version = "0.5.1";
    authors = [ "Anthony Ramine <n.oxyde@gmail.com>" ];
    sha256 = "0zh2wlnapmcwqhxnnq1mdlmg8vily7j54wvj01s7cvapzg5jphdl";
    inherit dependencies buildDependencies features;
  };
  shell_escape_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "shell-escape";
    version = "0.1.4";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "02ik28la039b8anx0sx8mbdp2yx66m64mjrjyy6x0dgpbmfxmc24";
    inherit dependencies buildDependencies features;
  };
  siphasher_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "siphasher";
    version = "0.2.2";
    authors = [ "Frank Denis <github@pureftpd.org>" ];
    sha256 = "0iyx7nlzfny9ly1634a6zcq0yvrinhxhypwas4p8ry3zqnn76qqr";
    inherit dependencies buildDependencies features;
  };
  slab_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "slab";
    version = "0.3.0";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0y6lhjggksh57hyfd3l6p9wgv5nhvw9c6djrysq7jnalz8fih21k";
    inherit dependencies buildDependencies features;
  };
  slab_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "slab";
    version = "0.4.0";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "1qy2vkgwqgj5z4ygdkh040n9yh1vz80v5flxb1xrvw3i4wxs7yx0";
    inherit dependencies buildDependencies features;
  };
  smallvec_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "smallvec";
    version = "0.2.1";
    authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
    sha256 = "0rnsll9af52bpjngz0067dpm1ndqmh76i64a58fc118l4lvnjxw2";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  strsim_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "strsim";
    version = "0.7.0";
    authors = [ "Danny Guo <dannyguo91@gmail.com>" ];
    sha256 = "0fy0k5f2705z73mb3x9459bpcvrx4ky8jpr4zikcbiwan4bnm0iv";
    inherit dependencies buildDependencies features;
  };
  syn_0_13_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syn";
    version = "0.13.1";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1pimp7fpvillhz06xz0k6450h9nis3ab6h1j2hzrzykrpxs2qnyg";
    inherit dependencies buildDependencies features;
  };
  take_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "take";
    version = "0.1.0";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "17rfh39di5n8w9aghpic2r94cndi3dr04l60nkjylmxfxr3iwlhd";
    inherit dependencies buildDependencies features;
  };
  tar_0_4_15_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tar";
    version = "0.4.15";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1pbd5d5qqgrvdd8jl2w8pirq6f0fv7r5dfq4krgygwyxgvhsd4m0";
    inherit dependencies buildDependencies features;
  };
  tempdir_0_3_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tempdir";
    version = "0.3.7";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0y53sxybyljrr7lh0x0ysrsa7p7cljmwv9v80acy3rc6n97g67vy";
    inherit dependencies buildDependencies features;
  };
  term_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "term";
    version = "0.5.1";
    authors = [ "The Rust Project Developers" "Steven Allen" ];
    sha256 = "02i9n98vv5na4v663mi739d33yvhyzvhm2sk42fx42j3raadp991";
    inherit dependencies buildDependencies features;
  };
  termcolor_0_3_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termcolor";
    version = "0.3.6";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0w609sa1apl1kii67ln2g82r4rrycw45zgjq7mxxjrx1fa21v05z";
    inherit dependencies buildDependencies features;
  };
  termion_1_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termion";
    version = "1.5.1";
    authors = [ "ticki <Ticki@users.noreply.github.com>" "gycos <alexandre.bury@gmail.com>" "IGI-111 <igi-111@protonmail.com>" ];
    sha256 = "02gq4vd8iws1f3gjrgrgpajsk2bk43nds5acbbb4s8dvrdvr8nf1";
    inherit dependencies buildDependencies features;
  };
  termios_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termios";
    version = "0.2.2";
    authors = [ "David Cuddeback <david.cuddeback@gmail.com>" ];
    sha256 = "0hjy4idvcapx9i6qbhf5536aqnf6rqk2aaj424sfwy7qhv6xmcx3";
    inherit dependencies buildDependencies features;
  };
  textwrap_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "textwrap";
    version = "0.9.0";
    authors = [ "Martin Geisler <martin@geisler.net>" ];
    sha256 = "18jg79ndjlwndz01mlbh82kkr2arqm658yn5kwp65l5n1hz8w4yb";
    inherit dependencies buildDependencies features;
  };
  thread_local_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "thread_local";
    version = "0.3.5";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "0mkp0sp91aqsk7brgygai4igv751r1754rsxn37mig3ag5rx8np6";
    inherit dependencies buildDependencies features;
  };
  thrussh_0_19_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "thrussh";
    version = "0.19.5";
    authors = [ "Pierre-Étienne Meunier <pe@pijul.org>" ];
    sha256 = "0majv1qjs3d82d8w8l20mqm0qmqmgjppq7iv9r0dlg2vvxcmfxjb";
    inherit dependencies buildDependencies features;
  };
  thrussh_keys_0_9_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "thrussh-keys";
    version = "0.9.5";
    authors = [ "Pierre-Étienne Meunier <pe@pijul.org>" ];
    sha256 = "0ifl4yhqyzz7fwlkn1iqicwads99l6vbfw6j6m4fadls2y4znna3";
    inherit dependencies buildDependencies features;
  };
  thrussh_libsodium_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "thrussh-libsodium";
    version = "0.1.3";
    authors = [ "pe@pijul.org <pe@pijul.org>" ];
    sha256 = "07rskar3rbqnjmyh9zpmfl9q7xhclpgs6703i30hvh4qnd6f91yh";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  time_0_1_39_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "time";
    version = "0.1.39";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1ryy3bwhvyzj6fym123il38mk9ranm4vradj2a47l5ij8jd7w5if";
    inherit dependencies buildDependencies features;
  };
  tokio_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio";
    version = "0.1.5";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0dd11vmmq7q65l1nwq85707n87r7b8gh29lq232j8hrimpkwnav9";
    inherit dependencies buildDependencies features;
  };
  tokio_core_0_1_17_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-core";
    version = "0.1.17";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "1j6c5q3aakvb1hjx4r95xwl5ms8rp19k4qsr6v6ngwbvr6f9z6rs";
    inherit dependencies buildDependencies features;
  };
  tokio_executor_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-executor";
    version = "0.1.2";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "1y4mwqjw438x6jskigz1knvfbpbinxfv6h43s60w6wdb80xmyg48";
    inherit dependencies buildDependencies features;
  };
  tokio_io_0_1_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-io";
    version = "0.1.6";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0awvw1cfylws2lqdls615hcnrz7x7krr7gm57bgj55xai14rmk9k";
    inherit dependencies buildDependencies features;
  };
  tokio_proto_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-proto";
    version = "0.1.1";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "030q9h8pn1ngm80klff5irglxxki60hf5maw0mppmmr46k773z66";
    inherit dependencies buildDependencies features;
  };
  tokio_reactor_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-reactor";
    version = "0.1.1";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0crs57d2k4a69abqhjzs3crs3hfw7qia3phpc3saxpnwh1j51093";
    inherit dependencies buildDependencies features;
  };
  tokio_service_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-service";
    version = "0.1.0";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0c85wm5qz9fabg0k6k763j89m43n6max72d3a8sxcs940id6qmih";
    inherit dependencies buildDependencies features;
  };
  tokio_tcp_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-tcp";
    version = "0.1.0";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "19cyajkqvvbn3qqnak0qzivdq6amfjymbc30k7bbqhx4y1pcgqvh";
    inherit dependencies buildDependencies features;
  };
  tokio_threadpool_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-threadpool";
    version = "0.1.2";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "12690m4cyh6v986xdd705mx2ba4r6mvlmfjfhiqcysyrmv2bk9h2";
    inherit dependencies buildDependencies features;
  };
  tokio_timer_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-timer";
    version = "0.2.1";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "1igk1jmpgwhhy2giccsshs8smwby6kfyz2fw9y4yav8yp5vzd0r9";
    inherit dependencies buildDependencies features;
  };
  tokio_tls_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-tls";
    version = "0.1.4";
    authors = [ "Carl Lerche <me@carllerche.com>" "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "07rwv3q6jbg65ln1ahzb4g648l8lcn4hvc0ax3r12bnsi1py7agp";
    inherit dependencies buildDependencies features;
  };
  tokio_udp_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-udp";
    version = "0.1.0";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0c1wjiqri0xlfrqq2hmgppvl9j8pjy8469s67f08dc8lybmrb1q1";
    inherit dependencies buildDependencies features;
  };
  tokio_uds_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-uds";
    version = "0.1.7";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "08z1534hxdrc78d21k8qszcv7iw16hppbak1yg5m20rsdd75dbbs";
    inherit dependencies buildDependencies features;
  };
  toml_0_4_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "toml";
    version = "0.4.6";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0rfl7lyb5f67spk69s604nw87f97g7fvv36hj9v88qlr2bwyrn8v";
    inherit dependencies buildDependencies features;
  };
  ucd_util_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ucd-util";
    version = "0.1.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "02a8h3siipx52b832xc8m8rwasj6nx9jpiwfldw8hp6k205hgkn0";
    inherit dependencies buildDependencies features;
  };
  unicase_1_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicase";
    version = "1.4.2";
    authors = [ "Sean McArthur <sean.monstar@gmail.com>" ];
    sha256 = "0rbnhw2mnhcwrij3vczp0sl8zdfmvf2dlh8hly81kj7132kfj0mf";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  unicase_2_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicase";
    version = "2.1.0";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "1zzn16hh8fdx5pnbbnl32q8m2mh4vpd1jm9pdcv969ik83dw4byp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  unicode_bidi_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-bidi";
    version = "0.3.4";
    authors = [ "The Servo Project Developers" ];
    sha256 = "0lcd6jasrf8p9p0q20qyf10c6xhvw40m2c4rr105hbk6zy26nj1q";
    libName = "unicode_bidi";
    inherit dependencies buildDependencies features;
  };
  unicode_normalization_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-normalization";
    version = "0.1.5";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "0hg29g86fca7b65mwk4sm5s838js6bqrl0gabadbazvbsgjam0j5";
    inherit dependencies buildDependencies features;
  };
  unicode_width_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-width";
    version = "0.1.4";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "1rp7a04icn9y5c0lm74nrd4py0rdl0af8bhdwq7g478n1xifpifl";
    inherit dependencies buildDependencies features;
  };
  unicode_xid_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-xid";
    version = "0.1.0";
    authors = [ "erick.tryzelaar <erick.tryzelaar@gmail.com>" "kwantam <kwantam@gmail.com>" ];
    sha256 = "05wdmwlfzxhq3nhsxn6wx4q8dhxzzfb9szsz6wiw092m1rjj01zj";
    inherit dependencies buildDependencies features;
  };
  unreachable_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unreachable";
    version = "1.0.0";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "1am8czbk5wwr25gbp2zr007744fxjshhdqjz9liz7wl4pnv3whcf";
    inherit dependencies buildDependencies features;
  };
  url_1_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "url";
    version = "1.7.0";
    authors = [ "The rust-url developers" ];
    sha256 = "0333ynhkp47hna88aamz1zpk4lxyzx4ab9n7yhc75g14w27cv8jj";
    inherit dependencies buildDependencies features;
  };
  username_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "username";
    version = "0.2.0";
    authors = [ "Pierre-Étienne Meunier <pierre-etienne.meunier@aalto.fi>" ];
    sha256 = "0z7gwbbgvn9yzvxvvj87hk3ai3lcv2vvhxxgl5gym08gfv5wmafp";
    inherit dependencies buildDependencies features;
  };
  utf8_ranges_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "utf8-ranges";
    version = "1.0.0";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0rzmqprwjv9yp1n0qqgahgm24872x6c0xddfym5pfndy7a36vkn0";
    inherit dependencies buildDependencies features;
  };
  utf8parse_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "utf8parse";
    version = "0.1.0";
    authors = [ "Joe Wilm <joe@jwilm.com>" ];
    sha256 = "1ja00l7p77r219gzlplxcgdyf64hgfj0flzah3bj1myaw77i9h63";
    inherit dependencies buildDependencies features;
  };
  uuid_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "uuid";
    version = "0.5.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "17d4csjmy7fa3ckrm40d3c3v411rw5d4400w756mcrzyw2pm1i2r";
    inherit dependencies buildDependencies features;
  };
  vcpkg_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "vcpkg";
    version = "0.2.3";
    authors = [ "Jim McGrath <jimmc2@gmail.com>" ];
    sha256 = "0achi8sfy0wm4q04gj7nwpq9xfx8ynk6vv4r12a3ijg26hispq0c";
    inherit dependencies buildDependencies features;
  };
  vec_map_0_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "vec_map";
    version = "0.8.0";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Jorge Aparicio <japaricious@gmail.com>" "Alexis Beingessner <a.beingessner@gmail.com>" "Brian Anderson <>" "tbu- <>" "Manish Goregaokar <>" "Aaron Turon <aturon@mozilla.com>" "Adolfo Ochagavía <>" "Niko Matsakis <>" "Steven Fackler <>" "Chase Southwood <csouth3@illinois.edu>" "Eduard Burtescu <>" "Florian Wilkens <>" "Félix Raimundo <>" "Tibor Benke <>" "Markus Siemens <markus@m-siemens.de>" "Josh Branchaud <jbranchaud@gmail.com>" "Huon Wilson <dbau.pp@gmail.com>" "Corey Farwell <coref@rwell.org>" "Aaron Liblong <>" "Nick Cameron <nrc@ncameron.org>" "Patrick Walton <pcwalton@mimiga.net>" "Felix S Klock II <>" "Andrew Paseltiner <apaseltiner@gmail.com>" "Sean McArthur <sean.monstar@gmail.com>" "Vadim Petrochenkov <>" ];
    sha256 = "07sgxp3cf1a4cxm9n3r27fcvqmld32bl2576mrcahnvm34j11xay";
    inherit dependencies buildDependencies features;
  };
  version_check_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "version_check";
    version = "0.1.3";
    authors = [ "Sergio Benitez <sb@sergio.bz>" ];
    sha256 = "0z635wdclv9bvafj11fpgndn7y79ibpsnc364pm61i1m4wwg8msg";
    inherit dependencies buildDependencies features;
  };
  void_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "void";
    version = "1.0.2";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "0h1dm0dx8dhf56a83k68mijyxigqhizpskwxfdrs1drwv2cdclv3";
    inherit dependencies buildDependencies features;
  };
  walkdir_2_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "walkdir";
    version = "2.1.4";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "1bx9q2xnhgbjygn99zi8j5avhv8jmkbi5lxgg20h9kmgswqkbmny";
    inherit dependencies buildDependencies features;
  };
  winapi_0_2_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.2.8";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0a45b58ywf12vb7gvj6h3j264nydynmzyqz8d8rqxsj6icqv82as";
    inherit dependencies buildDependencies features;
  };
  winapi_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.3.4";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1qbrf5dcnd8j36cawby5d9r5vx07r0l4ryf672pfncnp8895k9lx";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_build_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-build";
    version = "0.1.1";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lxlpi87rkhxcwp2ykf1ldw3p108hwm24nywf3jfrvmff4rjhqga";
    libName = "build";
    inherit dependencies buildDependencies features;
  };
  winapi_i686_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-i686-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "05ihkij18r4gamjpxj4gra24514can762imjzlmak5wlzidplzrp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_x86_64_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-x86_64-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0n1ylmlsb8yg1v583i4xy0qmqg42275flvbc51hdqjjfjcl9vlbj";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  wincolor_0_1_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "wincolor";
    version = "0.1.6";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0f8m3l86pw6qi31jidqj78pgd15xj914850lyvsxkbln4f1drv47";
    inherit dependencies buildDependencies features;
  };
  ws2_32_sys_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ws2_32-sys";
    version = "0.2.1";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1zpy9d9wk11sj17fczfngcj28w4xxjs3b4n036yzpy38dxp4f7kc";
    libName = "ws2_32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  xattr_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "xattr";
    version = "0.2.1";
    authors = [ "Steven Allen <steven@stebalien.com>" ];
    sha256 = "0sggdm28dd7pq9wnyk4gdj335bkj23wvj6jmcwrh2zagldhmxikb";
    inherit dependencies buildDependencies features;
  };
  yasna_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "yasna";
    version = "0.1.3";
    authors = [ "Masaki Hara <ackie.h.gmai@gmail.com>" ];
    sha256 = "0zixv2vkq146nb8x1i0zrfsrvc19m5pb7rv8j9qq01cglrpw7rhf";
    inherit dependencies buildDependencies features;
  };
  adler32_1_0_2 = { features?(adler32_1_0_2_features {}) }: adler32_1_0_2_ {};
  adler32_1_0_2_features = f: updateFeatures f (rec {
    adler32_1_0_2.default = (f.adler32_1_0_2.default or true);
  }) [];
  advapi32_sys_0_2_0 = { features?(advapi32_sys_0_2_0_features {}) }: advapi32_sys_0_2_0_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  advapi32_sys_0_2_0_features = f: updateFeatures f (rec {
    advapi32_sys_0_2_0.default = (f.advapi32_sys_0_2_0.default or true);
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  aho_corasick_0_6_4 = { features?(aho_corasick_0_6_4_features {}) }: aho_corasick_0_6_4_ {
    dependencies = mapFeatures features ([ memchr_2_0_1 ]);
  };
  aho_corasick_0_6_4_features = f: updateFeatures f (rec {
    aho_corasick_0_6_4.default = (f.aho_corasick_0_6_4.default or true);
    memchr_2_0_1.default = true;
  }) [ memchr_2_0_1_features ];
  ansi_term_0_11_0 = { features?(ansi_term_0_11_0_features {}) }: ansi_term_0_11_0_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  ansi_term_0_11_0_features = f: updateFeatures f (rec {
    ansi_term_0_11_0.default = (f.ansi_term_0_11_0.default or true);
    winapi_0_3_4.consoleapi = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.errhandlingapi = true;
    winapi_0_3_4.processenv = true;
  }) [ winapi_0_3_4_features ];
  arrayvec_0_4_7 = { features?(arrayvec_0_4_7_features {}) }: arrayvec_0_4_7_ {
    dependencies = mapFeatures features ([ nodrop_0_1_12 ]);
    features = mkFeatures (features.arrayvec_0_4_7 or {});
  };
  arrayvec_0_4_7_features = f: updateFeatures f (rec {
    arrayvec_0_4_7.default = (f.arrayvec_0_4_7.default or true);
    arrayvec_0_4_7.serde =
      (f.arrayvec_0_4_7.serde or false) ||
      (f.arrayvec_0_4_7.serde-1 or false) ||
      (arrayvec_0_4_7.serde-1 or false);
    arrayvec_0_4_7.std =
      (f.arrayvec_0_4_7.std or false) ||
      (f.arrayvec_0_4_7.default or false) ||
      (arrayvec_0_4_7.default or false);
    nodrop_0_1_12.default = (f.nodrop_0_1_12.default or false);
  }) [ nodrop_0_1_12_features ];
  atty_0_2_8 = { features?(atty_0_2_8_features {}) }: atty_0_2_8_ {
    dependencies = (if kernel == "redox" then mapFeatures features ([ termion_1_5_1 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_40 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  atty_0_2_8_features = f: updateFeatures f (rec {
    atty_0_2_8.default = (f.atty_0_2_8.default or true);
    libc_0_2_40.default = (f.libc_0_2_40.default or false);
    termion_1_5_1.default = true;
    winapi_0_3_4.consoleapi = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwinbase = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.processenv = true;
    winapi_0_3_4.winbase = true;
  }) [ termion_1_5_1_features libc_0_2_40_features winapi_0_3_4_features ];
  backtrace_0_3_6 = { features?(backtrace_0_3_6_features {}) }: backtrace_0_3_6_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 rustc_demangle_0_1_7 ])
      ++ (if (kernel == "linux" || kernel == "darwin") && !(kernel == "fuchsia") && !(kernel == "emscripten") && !(kernel == "darwin") && !(kernel == "ios") then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_6.backtrace-sys or false then [ backtrace_sys_0_1_16 ] else [])) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_40 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_6.winapi or false then [ winapi_0_3_4 ] else [])) else []);
    features = mkFeatures (features.backtrace_0_3_6 or {});
  };
  backtrace_0_3_6_features = f: updateFeatures f (rec {
    backtrace_0_3_6.addr2line =
      (f.backtrace_0_3_6.addr2line or false) ||
      (f.backtrace_0_3_6.gimli-symbolize or false) ||
      (backtrace_0_3_6.gimli-symbolize or false);
    backtrace_0_3_6.backtrace-sys =
      (f.backtrace_0_3_6.backtrace-sys or false) ||
      (f.backtrace_0_3_6.libbacktrace or false) ||
      (backtrace_0_3_6.libbacktrace or false);
    backtrace_0_3_6.coresymbolication =
      (f.backtrace_0_3_6.coresymbolication or false) ||
      (f.backtrace_0_3_6.default or false) ||
      (backtrace_0_3_6.default or false);
    backtrace_0_3_6.dbghelp =
      (f.backtrace_0_3_6.dbghelp or false) ||
      (f.backtrace_0_3_6.default or false) ||
      (backtrace_0_3_6.default or false);
    backtrace_0_3_6.default = (f.backtrace_0_3_6.default or true);
    backtrace_0_3_6.dladdr =
      (f.backtrace_0_3_6.dladdr or false) ||
      (f.backtrace_0_3_6.default or false) ||
      (backtrace_0_3_6.default or false);
    backtrace_0_3_6.findshlibs =
      (f.backtrace_0_3_6.findshlibs or false) ||
      (f.backtrace_0_3_6.gimli-symbolize or false) ||
      (backtrace_0_3_6.gimli-symbolize or false);
    backtrace_0_3_6.gimli =
      (f.backtrace_0_3_6.gimli or false) ||
      (f.backtrace_0_3_6.gimli-symbolize or false) ||
      (backtrace_0_3_6.gimli-symbolize or false);
    backtrace_0_3_6.libbacktrace =
      (f.backtrace_0_3_6.libbacktrace or false) ||
      (f.backtrace_0_3_6.default or false) ||
      (backtrace_0_3_6.default or false);
    backtrace_0_3_6.libunwind =
      (f.backtrace_0_3_6.libunwind or false) ||
      (f.backtrace_0_3_6.default or false) ||
      (backtrace_0_3_6.default or false);
    backtrace_0_3_6.memmap =
      (f.backtrace_0_3_6.memmap or false) ||
      (f.backtrace_0_3_6.gimli-symbolize or false) ||
      (backtrace_0_3_6.gimli-symbolize or false);
    backtrace_0_3_6.object =
      (f.backtrace_0_3_6.object or false) ||
      (f.backtrace_0_3_6.gimli-symbolize or false) ||
      (backtrace_0_3_6.gimli-symbolize or false);
    backtrace_0_3_6.rustc-serialize =
      (f.backtrace_0_3_6.rustc-serialize or false) ||
      (f.backtrace_0_3_6.serialize-rustc or false) ||
      (backtrace_0_3_6.serialize-rustc or false);
    backtrace_0_3_6.serde =
      (f.backtrace_0_3_6.serde or false) ||
      (f.backtrace_0_3_6.serialize-serde or false) ||
      (backtrace_0_3_6.serialize-serde or false);
    backtrace_0_3_6.serde_derive =
      (f.backtrace_0_3_6.serde_derive or false) ||
      (f.backtrace_0_3_6.serialize-serde or false) ||
      (backtrace_0_3_6.serialize-serde or false);
    backtrace_0_3_6.winapi =
      (f.backtrace_0_3_6.winapi or false) ||
      (f.backtrace_0_3_6.dbghelp or false) ||
      (backtrace_0_3_6.dbghelp or false);
    backtrace_sys_0_1_16.default = true;
    cfg_if_0_1_2.default = true;
    libc_0_2_40.default = true;
    rustc_demangle_0_1_7.default = true;
    winapi_0_3_4.dbghelp = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.processthreadsapi = true;
    winapi_0_3_4.std = true;
    winapi_0_3_4.winnt = true;
  }) [ cfg_if_0_1_2_features rustc_demangle_0_1_7_features backtrace_sys_0_1_16_features libc_0_2_40_features winapi_0_3_4_features ];
  backtrace_sys_0_1_16 = { features?(backtrace_sys_0_1_16_features {}) }: backtrace_sys_0_1_16_ {
    dependencies = mapFeatures features ([ libc_0_2_40 ]);
    buildDependencies = mapFeatures features ([ cc_1_0_10 ]);
  };
  backtrace_sys_0_1_16_features = f: updateFeatures f (rec {
    backtrace_sys_0_1_16.default = (f.backtrace_sys_0_1_16.default or true);
    cc_1_0_10.default = true;
    libc_0_2_40.default = true;
  }) [ libc_0_2_40_features cc_1_0_10_features ];
  base64_0_8_0 = { features?(base64_0_8_0_features {}) }: base64_0_8_0_ {
    dependencies = mapFeatures features ([ byteorder_1_2_2 safemem_0_2_0 ]);
  };
  base64_0_8_0_features = f: updateFeatures f (rec {
    base64_0_8_0.default = (f.base64_0_8_0.default or true);
    byteorder_1_2_2.default = true;
    safemem_0_2_0.default = true;
  }) [ byteorder_1_2_2_features safemem_0_2_0_features ];
  base64_0_9_0 = { features?(base64_0_9_0_features {}) }: base64_0_9_0_ {
    dependencies = mapFeatures features ([ byteorder_1_2_2 safemem_0_2_0 ]);
  };
  base64_0_9_0_features = f: updateFeatures f (rec {
    base64_0_9_0.default = (f.base64_0_9_0.default or true);
    byteorder_1_2_2.default = true;
    safemem_0_2_0.default = true;
  }) [ byteorder_1_2_2_features safemem_0_2_0_features ];
  bincode_0_8_0 = { features?(bincode_0_8_0_features {}) }: bincode_0_8_0_ {
    dependencies = mapFeatures features ([ byteorder_1_2_2 num_traits_0_1_43 serde_1_0_41 ]);
  };
  bincode_0_8_0_features = f: updateFeatures f (rec {
    bincode_0_8_0.default = (f.bincode_0_8_0.default or true);
    byteorder_1_2_2.default = true;
    num_traits_0_1_43.default = true;
    serde_1_0_41.default = true;
  }) [ byteorder_1_2_2_features num_traits_0_1_43_features serde_1_0_41_features ];
  bit_vec_0_4_4 = { features?(bit_vec_0_4_4_features {}) }: bit_vec_0_4_4_ {
    features = mkFeatures (features.bit_vec_0_4_4 or {});
  };
  bit_vec_0_4_4_features = f: updateFeatures f (rec {
    bit_vec_0_4_4.default = (f.bit_vec_0_4_4.default or true);
  }) [];
  bitflags_0_9_1 = { features?(bitflags_0_9_1_features {}) }: bitflags_0_9_1_ {
    features = mkFeatures (features.bitflags_0_9_1 or {});
  };
  bitflags_0_9_1_features = f: updateFeatures f (rec {
    bitflags_0_9_1.default = (f.bitflags_0_9_1.default or true);
    bitflags_0_9_1.example_generated =
      (f.bitflags_0_9_1.example_generated or false) ||
      (f.bitflags_0_9_1.default or false) ||
      (bitflags_0_9_1.default or false);
  }) [];
  bitflags_1_0_1 = { features?(bitflags_1_0_1_features {}) }: bitflags_1_0_1_ {
    features = mkFeatures (features.bitflags_1_0_1 or {});
  };
  bitflags_1_0_1_features = f: updateFeatures f (rec {
    bitflags_1_0_1.default = (f.bitflags_1_0_1.default or true);
    bitflags_1_0_1.example_generated =
      (f.bitflags_1_0_1.example_generated or false) ||
      (f.bitflags_1_0_1.default or false) ||
      (bitflags_1_0_1.default or false);
  }) [];
  bs58_0_2_0 = { features?(bs58_0_2_0_features {}) }: bs58_0_2_0_ {};
  bs58_0_2_0_features = f: updateFeatures f (rec {
    bs58_0_2_0.default = (f.bs58_0_2_0.default or true);
  }) [];
  build_const_0_2_1 = { features?(build_const_0_2_1_features {}) }: build_const_0_2_1_ {
    features = mkFeatures (features.build_const_0_2_1 or {});
  };
  build_const_0_2_1_features = f: updateFeatures f (rec {
    build_const_0_2_1.default = (f.build_const_0_2_1.default or true);
    build_const_0_2_1.std =
      (f.build_const_0_2_1.std or false) ||
      (f.build_const_0_2_1.default or false) ||
      (build_const_0_2_1.default or false);
  }) [];
  byteorder_1_2_2 = { features?(byteorder_1_2_2_features {}) }: byteorder_1_2_2_ {
    features = mkFeatures (features.byteorder_1_2_2 or {});
  };
  byteorder_1_2_2_features = f: updateFeatures f (rec {
    byteorder_1_2_2.default = (f.byteorder_1_2_2.default or true);
    byteorder_1_2_2.std =
      (f.byteorder_1_2_2.std or false) ||
      (f.byteorder_1_2_2.default or false) ||
      (byteorder_1_2_2.default or false);
  }) [];
  bytes_0_4_6 = { features?(bytes_0_4_6_features {}) }: bytes_0_4_6_ {
    dependencies = mapFeatures features ([ byteorder_1_2_2 iovec_0_1_2 ]);
  };
  bytes_0_4_6_features = f: updateFeatures f (rec {
    byteorder_1_2_2.default = true;
    bytes_0_4_6.default = (f.bytes_0_4_6.default or true);
    iovec_0_1_2.default = true;
  }) [ byteorder_1_2_2_features iovec_0_1_2_features ];
  cc_1_0_10 = { features?(cc_1_0_10_features {}) }: cc_1_0_10_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.cc_1_0_10 or {});
  };
  cc_1_0_10_features = f: updateFeatures f (rec {
    cc_1_0_10.default = (f.cc_1_0_10.default or true);
    cc_1_0_10.rayon =
      (f.cc_1_0_10.rayon or false) ||
      (f.cc_1_0_10.parallel or false) ||
      (cc_1_0_10.parallel or false);
  }) [];
  cfg_if_0_1_2 = { features?(cfg_if_0_1_2_features {}) }: cfg_if_0_1_2_ {};
  cfg_if_0_1_2_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = (f.cfg_if_0_1_2.default or true);
  }) [];
  chrono_0_4_2 = { features?(chrono_0_4_2_features {}) }: chrono_0_4_2_ {
    dependencies = mapFeatures features ([ num_integer_0_1_36 num_traits_0_2_2 ]
      ++ (if features.chrono_0_4_2.serde or false then [ serde_1_0_41 ] else [])
      ++ (if features.chrono_0_4_2.time or false then [ time_0_1_39 ] else []));
    features = mkFeatures (features.chrono_0_4_2 or {});
  };
  chrono_0_4_2_features = f: updateFeatures f (rec {
    chrono_0_4_2.clock =
      (f.chrono_0_4_2.clock or false) ||
      (f.chrono_0_4_2.default or false) ||
      (chrono_0_4_2.default or false);
    chrono_0_4_2.default = (f.chrono_0_4_2.default or true);
    chrono_0_4_2.time =
      (f.chrono_0_4_2.time or false) ||
      (f.chrono_0_4_2.clock or false) ||
      (chrono_0_4_2.clock or false);
    num_integer_0_1_36.default = (f.num_integer_0_1_36.default or false);
    num_traits_0_2_2.default = (f.num_traits_0_2_2.default or false);
    serde_1_0_41.default = true;
    time_0_1_39.default = true;
  }) [ num_integer_0_1_36_features num_traits_0_2_2_features serde_1_0_41_features time_0_1_39_features ];
  clap_2_31_2 = { features?(clap_2_31_2_features {}) }: clap_2_31_2_ {
    dependencies = mapFeatures features ([ bitflags_1_0_1 textwrap_0_9_0 unicode_width_0_1_4 ]
      ++ (if features.clap_2_31_2.atty or false then [ atty_0_2_8 ] else [])
      ++ (if features.clap_2_31_2.strsim or false then [ strsim_0_7_0 ] else [])
      ++ (if features.clap_2_31_2.vec_map or false then [ vec_map_0_8_0 ] else []))
      ++ (if !(kernel == "windows") then mapFeatures features ([ ]
      ++ (if features.clap_2_31_2.ansi_term or false then [ ansi_term_0_11_0 ] else [])) else []);
    features = mkFeatures (features.clap_2_31_2 or {});
  };
  clap_2_31_2_features = f: updateFeatures f (rec {
    ansi_term_0_11_0.default = true;
    atty_0_2_8.default = true;
    bitflags_1_0_1.default = true;
    clap_2_31_2.ansi_term =
      (f.clap_2_31_2.ansi_term or false) ||
      (f.clap_2_31_2.color or false) ||
      (clap_2_31_2.color or false);
    clap_2_31_2.atty =
      (f.clap_2_31_2.atty or false) ||
      (f.clap_2_31_2.color or false) ||
      (clap_2_31_2.color or false);
    clap_2_31_2.clippy =
      (f.clap_2_31_2.clippy or false) ||
      (f.clap_2_31_2.lints or false) ||
      (clap_2_31_2.lints or false);
    clap_2_31_2.color =
      (f.clap_2_31_2.color or false) ||
      (f.clap_2_31_2.default or false) ||
      (clap_2_31_2.default or false);
    clap_2_31_2.default = (f.clap_2_31_2.default or true);
    clap_2_31_2.strsim =
      (f.clap_2_31_2.strsim or false) ||
      (f.clap_2_31_2.suggestions or false) ||
      (clap_2_31_2.suggestions or false);
    clap_2_31_2.suggestions =
      (f.clap_2_31_2.suggestions or false) ||
      (f.clap_2_31_2.default or false) ||
      (clap_2_31_2.default or false);
    clap_2_31_2.term_size =
      (f.clap_2_31_2.term_size or false) ||
      (f.clap_2_31_2.wrap_help or false) ||
      (clap_2_31_2.wrap_help or false);
    clap_2_31_2.vec_map =
      (f.clap_2_31_2.vec_map or false) ||
      (f.clap_2_31_2.default or false) ||
      (clap_2_31_2.default or false);
    clap_2_31_2.yaml =
      (f.clap_2_31_2.yaml or false) ||
      (f.clap_2_31_2.doc or false) ||
      (clap_2_31_2.doc or false);
    clap_2_31_2.yaml-rust =
      (f.clap_2_31_2.yaml-rust or false) ||
      (f.clap_2_31_2.yaml or false) ||
      (clap_2_31_2.yaml or false);
    strsim_0_7_0.default = true;
    textwrap_0_9_0.default = true;
    textwrap_0_9_0.term_size =
      (f.textwrap_0_9_0.term_size or false) ||
      (clap_2_31_2.wrap_help or false) ||
      (f.clap_2_31_2.wrap_help or false);
    unicode_width_0_1_4.default = true;
    vec_map_0_8_0.default = true;
  }) [ atty_0_2_8_features bitflags_1_0_1_features strsim_0_7_0_features textwrap_0_9_0_features unicode_width_0_1_4_features vec_map_0_8_0_features ansi_term_0_11_0_features ];
  core_foundation_0_2_3 = { features?(core_foundation_0_2_3_features {}) }: core_foundation_0_2_3_ {
    dependencies = mapFeatures features ([ core_foundation_sys_0_2_3 libc_0_2_40 ]);
  };
  core_foundation_0_2_3_features = f: updateFeatures f (rec {
    core_foundation_0_2_3.default = (f.core_foundation_0_2_3.default or true);
    core_foundation_sys_0_2_3.default = true;
    libc_0_2_40.default = true;
  }) [ core_foundation_sys_0_2_3_features libc_0_2_40_features ];
  core_foundation_sys_0_2_3 = { features?(core_foundation_sys_0_2_3_features {}) }: core_foundation_sys_0_2_3_ {
    dependencies = mapFeatures features ([ libc_0_2_40 ]);
  };
  core_foundation_sys_0_2_3_features = f: updateFeatures f (rec {
    core_foundation_sys_0_2_3.default = (f.core_foundation_sys_0_2_3.default or true);
    libc_0_2_40.default = true;
  }) [ libc_0_2_40_features ];
  crc_1_7_0 = { features?(crc_1_7_0_features {}) }: crc_1_7_0_ {
    buildDependencies = mapFeatures features ([ build_const_0_2_1 ]);
    features = mkFeatures (features.crc_1_7_0 or {});
  };
  crc_1_7_0_features = f: updateFeatures f (rec {
    build_const_0_2_1.default = true;
    crc_1_7_0.default = (f.crc_1_7_0.default or true);
    crc_1_7_0.std =
      (f.crc_1_7_0.std or false) ||
      (f.crc_1_7_0.default or false) ||
      (crc_1_7_0.default or false);
  }) [ build_const_0_2_1_features ];
  crossbeam_0_2_12 = { features?(crossbeam_0_2_12_features {}) }: crossbeam_0_2_12_ {
    features = mkFeatures (features.crossbeam_0_2_12 or {});
  };
  crossbeam_0_2_12_features = f: updateFeatures f (rec {
    crossbeam_0_2_12.default = (f.crossbeam_0_2_12.default or true);
  }) [];
  crossbeam_deque_0_3_0 = { features?(crossbeam_deque_0_3_0_features {}) }: crossbeam_deque_0_3_0_ {
    dependencies = mapFeatures features ([ crossbeam_epoch_0_4_1 crossbeam_utils_0_2_2 ]);
  };
  crossbeam_deque_0_3_0_features = f: updateFeatures f (rec {
    crossbeam_deque_0_3_0.default = (f.crossbeam_deque_0_3_0.default or true);
    crossbeam_epoch_0_4_1.default = true;
    crossbeam_utils_0_2_2.default = true;
  }) [ crossbeam_epoch_0_4_1_features crossbeam_utils_0_2_2_features ];
  crossbeam_epoch_0_4_1 = { features?(crossbeam_epoch_0_4_1_features {}) }: crossbeam_epoch_0_4_1_ {
    dependencies = mapFeatures features ([ arrayvec_0_4_7 cfg_if_0_1_2 crossbeam_utils_0_3_2 memoffset_0_2_1 scopeguard_0_3_3 ]
      ++ (if features.crossbeam_epoch_0_4_1.lazy_static or false then [ lazy_static_1_0_0 ] else []));
    features = mkFeatures (features.crossbeam_epoch_0_4_1 or {});
  };
  crossbeam_epoch_0_4_1_features = f: updateFeatures f (rec {
    arrayvec_0_4_7.default = (f.arrayvec_0_4_7.default or false);
    arrayvec_0_4_7.use_union =
      (f.arrayvec_0_4_7.use_union or false) ||
      (crossbeam_epoch_0_4_1.nightly or false) ||
      (f.crossbeam_epoch_0_4_1.nightly or false);
    cfg_if_0_1_2.default = true;
    crossbeam_epoch_0_4_1.default = (f.crossbeam_epoch_0_4_1.default or true);
    crossbeam_epoch_0_4_1.lazy_static =
      (f.crossbeam_epoch_0_4_1.lazy_static or false) ||
      (f.crossbeam_epoch_0_4_1.use_std or false) ||
      (crossbeam_epoch_0_4_1.use_std or false);
    crossbeam_epoch_0_4_1.use_std =
      (f.crossbeam_epoch_0_4_1.use_std or false) ||
      (f.crossbeam_epoch_0_4_1.default or false) ||
      (crossbeam_epoch_0_4_1.default or false);
    crossbeam_utils_0_3_2.default = (f.crossbeam_utils_0_3_2.default or false);
    crossbeam_utils_0_3_2.use_std =
      (f.crossbeam_utils_0_3_2.use_std or false) ||
      (crossbeam_epoch_0_4_1.use_std or false) ||
      (f.crossbeam_epoch_0_4_1.use_std or false);
    lazy_static_1_0_0.default = true;
    memoffset_0_2_1.default = true;
    scopeguard_0_3_3.default = (f.scopeguard_0_3_3.default or false);
  }) [ arrayvec_0_4_7_features cfg_if_0_1_2_features crossbeam_utils_0_3_2_features lazy_static_1_0_0_features memoffset_0_2_1_features scopeguard_0_3_3_features ];
  crossbeam_utils_0_2_2 = { features?(crossbeam_utils_0_2_2_features {}) }: crossbeam_utils_0_2_2_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 ]);
    features = mkFeatures (features.crossbeam_utils_0_2_2 or {});
  };
  crossbeam_utils_0_2_2_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = true;
    crossbeam_utils_0_2_2.default = (f.crossbeam_utils_0_2_2.default or true);
    crossbeam_utils_0_2_2.use_std =
      (f.crossbeam_utils_0_2_2.use_std or false) ||
      (f.crossbeam_utils_0_2_2.default or false) ||
      (crossbeam_utils_0_2_2.default or false);
  }) [ cfg_if_0_1_2_features ];
  crossbeam_utils_0_3_2 = { features?(crossbeam_utils_0_3_2_features {}) }: crossbeam_utils_0_3_2_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 ]);
    features = mkFeatures (features.crossbeam_utils_0_3_2 or {});
  };
  crossbeam_utils_0_3_2_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = true;
    crossbeam_utils_0_3_2.default = (f.crossbeam_utils_0_3_2.default or true);
    crossbeam_utils_0_3_2.use_std =
      (f.crossbeam_utils_0_3_2.use_std or false) ||
      (f.crossbeam_utils_0_3_2.default or false) ||
      (crossbeam_utils_0_3_2.default or false);
  }) [ cfg_if_0_1_2_features ];
  cryptovec_0_4_4 = { features?(cryptovec_0_4_4_features {}) }: cryptovec_0_4_4_ {
    dependencies = mapFeatures features ([ kernel32_sys_0_2_2 libc_0_2_40 winapi_0_2_8 ]);
  };
  cryptovec_0_4_4_features = f: updateFeatures f (rec {
    cryptovec_0_4_4.default = (f.cryptovec_0_4_4.default or true);
    kernel32_sys_0_2_2.default = true;
    libc_0_2_40.default = true;
    winapi_0_2_8.default = true;
  }) [ kernel32_sys_0_2_2_features libc_0_2_40_features winapi_0_2_8_features ];
  dtoa_0_4_2 = { features?(dtoa_0_4_2_features {}) }: dtoa_0_4_2_ {};
  dtoa_0_4_2_features = f: updateFeatures f (rec {
    dtoa_0_4_2.default = (f.dtoa_0_4_2.default or true);
  }) [];
  encoding_rs_0_7_2 = { features?(encoding_rs_0_7_2_features {}) }: encoding_rs_0_7_2_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 ]);
    features = mkFeatures (features.encoding_rs_0_7_2 or {});
  };
  encoding_rs_0_7_2_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = true;
    encoding_rs_0_7_2.default = (f.encoding_rs_0_7_2.default or true);
    encoding_rs_0_7_2.simd =
      (f.encoding_rs_0_7_2.simd or false) ||
      (f.encoding_rs_0_7_2.simd-accel or false) ||
      (encoding_rs_0_7_2.simd-accel or false);
  }) [ cfg_if_0_1_2_features ];
  env_logger_0_4_3 = { features?(env_logger_0_4_3_features {}) }: env_logger_0_4_3_ {
    dependencies = mapFeatures features ([ log_0_3_9 ]
      ++ (if features.env_logger_0_4_3.regex or false then [ regex_0_2_10 ] else []));
    features = mkFeatures (features.env_logger_0_4_3 or {});
  };
  env_logger_0_4_3_features = f: updateFeatures f (rec {
    env_logger_0_4_3.default = (f.env_logger_0_4_3.default or true);
    env_logger_0_4_3.regex =
      (f.env_logger_0_4_3.regex or false) ||
      (f.env_logger_0_4_3.default or false) ||
      (env_logger_0_4_3.default or false);
    log_0_3_9.default = true;
    regex_0_2_10.default = true;
  }) [ log_0_3_9_features regex_0_2_10_features ];
  env_logger_0_5_8 = { features?(env_logger_0_5_8_features {}) }: env_logger_0_5_8_ {
    dependencies = mapFeatures features ([ atty_0_2_8 humantime_1_1_1 log_0_4_1 termcolor_0_3_6 ]
      ++ (if features.env_logger_0_5_8.regex or false then [ regex_0_2_10 ] else []));
    features = mkFeatures (features.env_logger_0_5_8 or {});
  };
  env_logger_0_5_8_features = f: updateFeatures f (rec {
    atty_0_2_8.default = true;
    env_logger_0_5_8.default = (f.env_logger_0_5_8.default or true);
    env_logger_0_5_8.regex =
      (f.env_logger_0_5_8.regex or false) ||
      (f.env_logger_0_5_8.default or false) ||
      (env_logger_0_5_8.default or false);
    humantime_1_1_1.default = true;
    log_0_4_1.default = true;
    log_0_4_1.std = true;
    regex_0_2_10.default = true;
    termcolor_0_3_6.default = true;
  }) [ atty_0_2_8_features humantime_1_1_1_features log_0_4_1_features regex_0_2_10_features termcolor_0_3_6_features ];
  errno_0_2_3 = { features?(errno_0_2_3_features {}) }: errno_0_2_3_ {
    dependencies = (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_40 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
  };
  errno_0_2_3_features = f: updateFeatures f (rec {
    errno_0_2_3.default = (f.errno_0_2_3.default or true);
    kernel32_sys_0_2_2.default = true;
    libc_0_2_40.default = true;
    winapi_0_2_8.default = true;
  }) [ libc_0_2_40_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  error_chain_0_11_0 = { features?(error_chain_0_11_0_features {}) }: error_chain_0_11_0_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.error_chain_0_11_0.backtrace or false then [ backtrace_0_3_6 ] else []));
    features = mkFeatures (features.error_chain_0_11_0 or {});
  };
  error_chain_0_11_0_features = f: updateFeatures f (rec {
    backtrace_0_3_6.default = true;
    error_chain_0_11_0.backtrace =
      (f.error_chain_0_11_0.backtrace or false) ||
      (f.error_chain_0_11_0.default or false) ||
      (error_chain_0_11_0.default or false);
    error_chain_0_11_0.default = (f.error_chain_0_11_0.default or true);
    error_chain_0_11_0.example_generated =
      (f.error_chain_0_11_0.example_generated or false) ||
      (f.error_chain_0_11_0.default or false) ||
      (error_chain_0_11_0.default or false);
  }) [ backtrace_0_3_6_features ];
  filetime_0_2_0 = { features?(filetime_0_2_0_features {}) }: filetime_0_2_0_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 ])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_37 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_40 ]) else []);
  };
  filetime_0_2_0_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = true;
    filetime_0_2_0.default = (f.filetime_0_2_0.default or true);
    libc_0_2_40.default = true;
    redox_syscall_0_1_37.default = true;
  }) [ cfg_if_0_1_2_features redox_syscall_0_1_37_features libc_0_2_40_features ];
  flate2_1_0_1 = { features?(flate2_1_0_1_features {}) }: flate2_1_0_1_ {
    dependencies = mapFeatures features ([ libc_0_2_40 ]
      ++ (if features.flate2_1_0_1.miniz-sys or false then [ miniz_sys_0_1_10 ] else []));
    features = mkFeatures (features.flate2_1_0_1 or {});
  };
  flate2_1_0_1_features = f: updateFeatures f (rec {
    flate2_1_0_1.default = (f.flate2_1_0_1.default or true);
    flate2_1_0_1.futures =
      (f.flate2_1_0_1.futures or false) ||
      (f.flate2_1_0_1.tokio or false) ||
      (flate2_1_0_1.tokio or false);
    flate2_1_0_1.libz-sys =
      (f.flate2_1_0_1.libz-sys or false) ||
      (f.flate2_1_0_1.zlib or false) ||
      (flate2_1_0_1.zlib or false);
    flate2_1_0_1.miniz-sys =
      (f.flate2_1_0_1.miniz-sys or false) ||
      (f.flate2_1_0_1.default or false) ||
      (flate2_1_0_1.default or false);
    flate2_1_0_1.miniz_oxide_c_api =
      (f.flate2_1_0_1.miniz_oxide_c_api or false) ||
      (f.flate2_1_0_1.rust_backend or false) ||
      (flate2_1_0_1.rust_backend or false);
    flate2_1_0_1.tokio-io =
      (f.flate2_1_0_1.tokio-io or false) ||
      (f.flate2_1_0_1.tokio or false) ||
      (flate2_1_0_1.tokio or false);
    libc_0_2_40.default = true;
    miniz_sys_0_1_10.default = true;
  }) [ libc_0_2_40_features miniz_sys_0_1_10_features ];
  fnv_1_0_6 = { features?(fnv_1_0_6_features {}) }: fnv_1_0_6_ {};
  fnv_1_0_6_features = f: updateFeatures f (rec {
    fnv_1_0_6.default = (f.fnv_1_0_6.default or true);
  }) [];
  foreign_types_0_3_2 = { features?(foreign_types_0_3_2_features {}) }: foreign_types_0_3_2_ {
    dependencies = mapFeatures features ([ foreign_types_shared_0_1_1 ]);
  };
  foreign_types_0_3_2_features = f: updateFeatures f (rec {
    foreign_types_0_3_2.default = (f.foreign_types_0_3_2.default or true);
    foreign_types_shared_0_1_1.default = true;
  }) [ foreign_types_shared_0_1_1_features ];
  foreign_types_shared_0_1_1 = { features?(foreign_types_shared_0_1_1_features {}) }: foreign_types_shared_0_1_1_ {};
  foreign_types_shared_0_1_1_features = f: updateFeatures f (rec {
    foreign_types_shared_0_1_1.default = (f.foreign_types_shared_0_1_1.default or true);
  }) [];
  fs2_0_4_3 = { features?(fs2_0_4_3_features {}) }: fs2_0_4_3_ {
    dependencies = (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_40 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  fs2_0_4_3_features = f: updateFeatures f (rec {
    fs2_0_4_3.default = (f.fs2_0_4_3.default or true);
    libc_0_2_40.default = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.fileapi = true;
    winapi_0_3_4.handleapi = true;
    winapi_0_3_4.processthreadsapi = true;
    winapi_0_3_4.std = true;
    winapi_0_3_4.winbase = true;
    winapi_0_3_4.winerror = true;
  }) [ libc_0_2_40_features winapi_0_3_4_features ];
  fuchsia_zircon_0_3_3 = { features?(fuchsia_zircon_0_3_3_features {}) }: fuchsia_zircon_0_3_3_ {
    dependencies = mapFeatures features ([ bitflags_1_0_1 fuchsia_zircon_sys_0_3_3 ]);
  };
  fuchsia_zircon_0_3_3_features = f: updateFeatures f (rec {
    bitflags_1_0_1.default = true;
    fuchsia_zircon_0_3_3.default = (f.fuchsia_zircon_0_3_3.default or true);
    fuchsia_zircon_sys_0_3_3.default = true;
  }) [ bitflags_1_0_1_features fuchsia_zircon_sys_0_3_3_features ];
  fuchsia_zircon_sys_0_3_3 = { features?(fuchsia_zircon_sys_0_3_3_features {}) }: fuchsia_zircon_sys_0_3_3_ {};
  fuchsia_zircon_sys_0_3_3_features = f: updateFeatures f (rec {
    fuchsia_zircon_sys_0_3_3.default = (f.fuchsia_zircon_sys_0_3_3.default or true);
  }) [];
  futures_0_1_21 = { features?(futures_0_1_21_features {}) }: futures_0_1_21_ {
    features = mkFeatures (features.futures_0_1_21 or {});
  };
  futures_0_1_21_features = f: updateFeatures f (rec {
    futures_0_1_21.default = (f.futures_0_1_21.default or true);
    futures_0_1_21.use_std =
      (f.futures_0_1_21.use_std or false) ||
      (f.futures_0_1_21.default or false) ||
      (futures_0_1_21.default or false);
    futures_0_1_21.with-deprecated =
      (f.futures_0_1_21.with-deprecated or false) ||
      (f.futures_0_1_21.default or false) ||
      (futures_0_1_21.default or false);
  }) [];
  futures_cpupool_0_1_8 = { features?(futures_cpupool_0_1_8_features {}) }: futures_cpupool_0_1_8_ {
    dependencies = mapFeatures features ([ futures_0_1_21 num_cpus_1_8_0 ]);
    features = mkFeatures (features.futures_cpupool_0_1_8 or {});
  };
  futures_cpupool_0_1_8_features = f: updateFeatures f (rec {
    futures_0_1_21.default = (f.futures_0_1_21.default or false);
    futures_0_1_21.use_std = true;
    futures_0_1_21.with-deprecated =
      (f.futures_0_1_21.with-deprecated or false) ||
      (futures_cpupool_0_1_8.with-deprecated or false) ||
      (f.futures_cpupool_0_1_8.with-deprecated or false);
    futures_cpupool_0_1_8.default = (f.futures_cpupool_0_1_8.default or true);
    futures_cpupool_0_1_8.with-deprecated =
      (f.futures_cpupool_0_1_8.with-deprecated or false) ||
      (f.futures_cpupool_0_1_8.default or false) ||
      (futures_cpupool_0_1_8.default or false);
    num_cpus_1_8_0.default = true;
  }) [ futures_0_1_21_features num_cpus_1_8_0_features ];
  getch_0_2_0 = { features?(getch_0_2_0_features {}) }: getch_0_2_0_ {
    dependencies = (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ termios_0_2_2 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ libc_0_2_40 ]) else []);
  };
  getch_0_2_0_features = f: updateFeatures f (rec {
    getch_0_2_0.default = (f.getch_0_2_0.default or true);
    libc_0_2_40.default = true;
    termios_0_2_2.default = true;
  }) [ termios_0_2_2_features libc_0_2_40_features ];
  globset_0_2_1 = { features?(globset_0_2_1_features {}) }: globset_0_2_1_ {
    dependencies = mapFeatures features ([ aho_corasick_0_6_4 fnv_1_0_6 log_0_3_9 memchr_2_0_1 regex_0_2_10 ]);
    features = mkFeatures (features.globset_0_2_1 or {});
  };
  globset_0_2_1_features = f: updateFeatures f (rec {
    aho_corasick_0_6_4.default = true;
    fnv_1_0_6.default = true;
    globset_0_2_1.default = (f.globset_0_2_1.default or true);
    log_0_3_9.default = true;
    memchr_2_0_1.default = true;
    regex_0_2_10.default = true;
    regex_0_2_10.simd-accel =
      (f.regex_0_2_10.simd-accel or false) ||
      (globset_0_2_1.simd-accel or false) ||
      (f.globset_0_2_1.simd-accel or false);
  }) [ aho_corasick_0_6_4_features fnv_1_0_6_features log_0_3_9_features memchr_2_0_1_features regex_0_2_10_features ];
  hex_0_3_2 = { features?(hex_0_3_2_features {}) }: hex_0_3_2_ {
    features = mkFeatures (features.hex_0_3_2 or {});
  };
  hex_0_3_2_features = f: updateFeatures f (rec {
    hex_0_3_2.default = (f.hex_0_3_2.default or true);
  }) [];
  httparse_1_2_4 = { features?(httparse_1_2_4_features {}) }: httparse_1_2_4_ {
    features = mkFeatures (features.httparse_1_2_4 or {});
  };
  httparse_1_2_4_features = f: updateFeatures f (rec {
    httparse_1_2_4.default = (f.httparse_1_2_4.default or true);
    httparse_1_2_4.std =
      (f.httparse_1_2_4.std or false) ||
      (f.httparse_1_2_4.default or false) ||
      (httparse_1_2_4.default or false);
  }) [];
  humantime_1_1_1 = { features?(humantime_1_1_1_features {}) }: humantime_1_1_1_ {
    dependencies = mapFeatures features ([ quick_error_1_2_1 ]);
  };
  humantime_1_1_1_features = f: updateFeatures f (rec {
    humantime_1_1_1.default = (f.humantime_1_1_1.default or true);
    quick_error_1_2_1.default = true;
  }) [ quick_error_1_2_1_features ];
  hyper_0_11_25 = { features?(hyper_0_11_25_features {}) }: hyper_0_11_25_ {
    dependencies = mapFeatures features ([ base64_0_9_0 bytes_0_4_6 futures_0_1_21 futures_cpupool_0_1_8 httparse_1_2_4 iovec_0_1_2 language_tags_0_2_2 log_0_4_1 mime_0_3_5 percent_encoding_1_0_1 relay_0_1_1 time_0_1_39 tokio_core_0_1_17 tokio_io_0_1_6 tokio_service_0_1_0 unicase_2_1_0 ]
      ++ (if features.hyper_0_11_25.tokio-proto or false then [ tokio_proto_0_1_1 ] else []));
    features = mkFeatures (features.hyper_0_11_25 or {});
  };
  hyper_0_11_25_features = f: updateFeatures f (rec {
    base64_0_9_0.default = true;
    bytes_0_4_6.default = true;
    futures_0_1_21.default = true;
    futures_cpupool_0_1_8.default = true;
    httparse_1_2_4.default = true;
    hyper_0_11_25.default = (f.hyper_0_11_25.default or true);
    hyper_0_11_25.http =
      (f.hyper_0_11_25.http or false) ||
      (f.hyper_0_11_25.compat or false) ||
      (hyper_0_11_25.compat or false);
    hyper_0_11_25.server-proto =
      (f.hyper_0_11_25.server-proto or false) ||
      (f.hyper_0_11_25.default or false) ||
      (hyper_0_11_25.default or false);
    hyper_0_11_25.tokio-proto =
      (f.hyper_0_11_25.tokio-proto or false) ||
      (f.hyper_0_11_25.server-proto or false) ||
      (hyper_0_11_25.server-proto or false);
    iovec_0_1_2.default = true;
    language_tags_0_2_2.default = true;
    log_0_4_1.default = true;
    mime_0_3_5.default = true;
    percent_encoding_1_0_1.default = true;
    relay_0_1_1.default = true;
    time_0_1_39.default = true;
    tokio_core_0_1_17.default = true;
    tokio_io_0_1_6.default = true;
    tokio_proto_0_1_1.default = true;
    tokio_service_0_1_0.default = true;
    unicase_2_1_0.default = true;
  }) [ base64_0_9_0_features bytes_0_4_6_features futures_0_1_21_features futures_cpupool_0_1_8_features httparse_1_2_4_features iovec_0_1_2_features language_tags_0_2_2_features log_0_4_1_features mime_0_3_5_features percent_encoding_1_0_1_features relay_0_1_1_features time_0_1_39_features tokio_core_0_1_17_features tokio_io_0_1_6_features tokio_proto_0_1_1_features tokio_service_0_1_0_features unicase_2_1_0_features ];
  hyper_tls_0_1_3 = { features?(hyper_tls_0_1_3_features {}) }: hyper_tls_0_1_3_ {
    dependencies = mapFeatures features ([ futures_0_1_21 hyper_0_11_25 native_tls_0_1_5 tokio_core_0_1_17 tokio_io_0_1_6 tokio_service_0_1_0 tokio_tls_0_1_4 ]);
  };
  hyper_tls_0_1_3_features = f: updateFeatures f (rec {
    futures_0_1_21.default = true;
    hyper_0_11_25.default = true;
    hyper_tls_0_1_3.default = (f.hyper_tls_0_1_3.default or true);
    native_tls_0_1_5.default = true;
    tokio_core_0_1_17.default = true;
    tokio_io_0_1_6.default = true;
    tokio_service_0_1_0.default = true;
    tokio_tls_0_1_4.default = true;
  }) [ futures_0_1_21_features hyper_0_11_25_features native_tls_0_1_5_features tokio_core_0_1_17_features tokio_io_0_1_6_features tokio_service_0_1_0_features tokio_tls_0_1_4_features ];
  idna_0_1_4 = { features?(idna_0_1_4_features {}) }: idna_0_1_4_ {
    dependencies = mapFeatures features ([ matches_0_1_6 unicode_bidi_0_3_4 unicode_normalization_0_1_5 ]);
  };
  idna_0_1_4_features = f: updateFeatures f (rec {
    idna_0_1_4.default = (f.idna_0_1_4.default or true);
    matches_0_1_6.default = true;
    unicode_bidi_0_3_4.default = true;
    unicode_normalization_0_1_5.default = true;
  }) [ matches_0_1_6_features unicode_bidi_0_3_4_features unicode_normalization_0_1_5_features ];
  ignore_0_3_1 = { features?(ignore_0_3_1_features {}) }: ignore_0_3_1_ {
    dependencies = mapFeatures features ([ crossbeam_0_2_12 globset_0_2_1 lazy_static_0_2_11 log_0_3_9 memchr_2_0_1 regex_0_2_10 same_file_1_0_2 thread_local_0_3_5 walkdir_2_1_4 ]);
    features = mkFeatures (features.ignore_0_3_1 or {});
  };
  ignore_0_3_1_features = f: updateFeatures f (rec {
    crossbeam_0_2_12.default = true;
    globset_0_2_1.default = true;
    globset_0_2_1.simd-accel =
      (f.globset_0_2_1.simd-accel or false) ||
      (ignore_0_3_1.simd-accel or false) ||
      (f.ignore_0_3_1.simd-accel or false);
    ignore_0_3_1.default = (f.ignore_0_3_1.default or true);
    lazy_static_0_2_11.default = true;
    log_0_3_9.default = true;
    memchr_2_0_1.default = true;
    regex_0_2_10.default = true;
    same_file_1_0_2.default = true;
    thread_local_0_3_5.default = true;
    walkdir_2_1_4.default = true;
  }) [ crossbeam_0_2_12_features globset_0_2_1_features lazy_static_0_2_11_features log_0_3_9_features memchr_2_0_1_features regex_0_2_10_features same_file_1_0_2_features thread_local_0_3_5_features walkdir_2_1_4_features ];
  iovec_0_1_2 = { features?(iovec_0_1_2_features {}) }: iovec_0_1_2_ {
    dependencies = (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_40 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_2_8 ]) else []);
  };
  iovec_0_1_2_features = f: updateFeatures f (rec {
    iovec_0_1_2.default = (f.iovec_0_1_2.default or true);
    libc_0_2_40.default = true;
    winapi_0_2_8.default = true;
  }) [ libc_0_2_40_features winapi_0_2_8_features ];
  isatty_0_1_7 = { features?(isatty_0_1_7_features {}) }: isatty_0_1_7_ {
    dependencies = (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_37 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_40 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
  };
  isatty_0_1_7_features = f: updateFeatures f (rec {
    isatty_0_1_7.default = (f.isatty_0_1_7.default or true);
    kernel32_sys_0_2_2.default = true;
    libc_0_2_40.default = true;
    redox_syscall_0_1_37.default = true;
    winapi_0_2_8.default = true;
  }) [ redox_syscall_0_1_37_features libc_0_2_40_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  itoa_0_3_4 = { features?(itoa_0_3_4_features {}) }: itoa_0_3_4_ {
    features = mkFeatures (features.itoa_0_3_4 or {});
  };
  itoa_0_3_4_features = f: updateFeatures f (rec {
    itoa_0_3_4.default = (f.itoa_0_3_4.default or true);
  }) [];
  itoa_0_4_1 = { features?(itoa_0_4_1_features {}) }: itoa_0_4_1_ {
    features = mkFeatures (features.itoa_0_4_1 or {});
  };
  itoa_0_4_1_features = f: updateFeatures f (rec {
    itoa_0_4_1.default = (f.itoa_0_4_1.default or true);
    itoa_0_4_1.std =
      (f.itoa_0_4_1.std or false) ||
      (f.itoa_0_4_1.default or false) ||
      (itoa_0_4_1.default or false);
  }) [];
  kernel32_sys_0_2_2 = { features?(kernel32_sys_0_2_2_features {}) }: kernel32_sys_0_2_2_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  kernel32_sys_0_2_2_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = (f.kernel32_sys_0_2_2.default or true);
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  language_tags_0_2_2 = { features?(language_tags_0_2_2_features {}) }: language_tags_0_2_2_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.language_tags_0_2_2 or {});
  };
  language_tags_0_2_2_features = f: updateFeatures f (rec {
    language_tags_0_2_2.default = (f.language_tags_0_2_2.default or true);
    language_tags_0_2_2.heapsize =
      (f.language_tags_0_2_2.heapsize or false) ||
      (f.language_tags_0_2_2.heap_size or false) ||
      (language_tags_0_2_2.heap_size or false);
    language_tags_0_2_2.heapsize_plugin =
      (f.language_tags_0_2_2.heapsize_plugin or false) ||
      (f.language_tags_0_2_2.heap_size or false) ||
      (language_tags_0_2_2.heap_size or false);
  }) [];
  lazy_static_0_2_11 = { features?(lazy_static_0_2_11_features {}) }: lazy_static_0_2_11_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazy_static_0_2_11 or {});
  };
  lazy_static_0_2_11_features = f: updateFeatures f (rec {
    lazy_static_0_2_11.compiletest_rs =
      (f.lazy_static_0_2_11.compiletest_rs or false) ||
      (f.lazy_static_0_2_11.compiletest or false) ||
      (lazy_static_0_2_11.compiletest or false);
    lazy_static_0_2_11.default = (f.lazy_static_0_2_11.default or true);
    lazy_static_0_2_11.nightly =
      (f.lazy_static_0_2_11.nightly or false) ||
      (f.lazy_static_0_2_11.spin_no_std or false) ||
      (lazy_static_0_2_11.spin_no_std or false);
    lazy_static_0_2_11.spin =
      (f.lazy_static_0_2_11.spin or false) ||
      (f.lazy_static_0_2_11.spin_no_std or false) ||
      (lazy_static_0_2_11.spin_no_std or false);
  }) [];
  lazy_static_1_0_0 = { features?(lazy_static_1_0_0_features {}) }: lazy_static_1_0_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazy_static_1_0_0 or {});
  };
  lazy_static_1_0_0_features = f: updateFeatures f (rec {
    lazy_static_1_0_0.compiletest_rs =
      (f.lazy_static_1_0_0.compiletest_rs or false) ||
      (f.lazy_static_1_0_0.compiletest or false) ||
      (lazy_static_1_0_0.compiletest or false);
    lazy_static_1_0_0.default = (f.lazy_static_1_0_0.default or true);
    lazy_static_1_0_0.nightly =
      (f.lazy_static_1_0_0.nightly or false) ||
      (f.lazy_static_1_0_0.spin_no_std or false) ||
      (lazy_static_1_0_0.spin_no_std or false);
    lazy_static_1_0_0.spin =
      (f.lazy_static_1_0_0.spin or false) ||
      (f.lazy_static_1_0_0.spin_no_std or false) ||
      (lazy_static_1_0_0.spin_no_std or false);
  }) [];
  lazycell_0_6_0 = { features?(lazycell_0_6_0_features {}) }: lazycell_0_6_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazycell_0_6_0 or {});
  };
  lazycell_0_6_0_features = f: updateFeatures f (rec {
    lazycell_0_6_0.clippy =
      (f.lazycell_0_6_0.clippy or false) ||
      (f.lazycell_0_6_0.nightly-testing or false) ||
      (lazycell_0_6_0.nightly-testing or false);
    lazycell_0_6_0.default = (f.lazycell_0_6_0.default or true);
    lazycell_0_6_0.nightly =
      (f.lazycell_0_6_0.nightly or false) ||
      (f.lazycell_0_6_0.nightly-testing or false) ||
      (lazycell_0_6_0.nightly-testing or false);
  }) [];
  libc_0_2_40 = { features?(libc_0_2_40_features {}) }: libc_0_2_40_ {
    features = mkFeatures (features.libc_0_2_40 or {});
  };
  libc_0_2_40_features = f: updateFeatures f (rec {
    libc_0_2_40.default = (f.libc_0_2_40.default or true);
    libc_0_2_40.use_std =
      (f.libc_0_2_40.use_std or false) ||
      (f.libc_0_2_40.default or false) ||
      (libc_0_2_40.default or false);
  }) [];
  libflate_0_1_14 = { features?(libflate_0_1_14_features {}) }: libflate_0_1_14_ {
    dependencies = mapFeatures features ([ adler32_1_0_2 byteorder_1_2_2 crc_1_7_0 ]);
  };
  libflate_0_1_14_features = f: updateFeatures f (rec {
    adler32_1_0_2.default = true;
    byteorder_1_2_2.default = true;
    crc_1_7_0.default = true;
    libflate_0_1_14.default = (f.libflate_0_1_14.default or true);
  }) [ adler32_1_0_2_features byteorder_1_2_2_features crc_1_7_0_features ];
  libpijul_0_10_1 = { features?(libpijul_0_10_1_features {}) }: libpijul_0_10_1_ {
    dependencies = mapFeatures features ([ base64_0_9_0 bincode_0_8_0 bitflags_1_0_1 bs58_0_2_0 byteorder_1_2_2 chrono_0_4_2 error_chain_0_11_0 flate2_1_0_1 hex_0_3_2 ignore_0_3_1 log_0_4_1 openssl_0_10_6 rand_0_4_2 sanakirja_0_8_16 serde_1_0_41 serde_derive_1_0_41 serde_json_1_0_15 tempdir_0_3_7 thrussh_keys_0_9_5 ]);
  };
  libpijul_0_10_1_features = f: updateFeatures f (rec {
    base64_0_9_0.default = true;
    bincode_0_8_0.default = true;
    bitflags_1_0_1.default = true;
    bs58_0_2_0.default = true;
    byteorder_1_2_2.default = true;
    chrono_0_4_2.default = true;
    chrono_0_4_2.serde = true;
    error_chain_0_11_0.default = true;
    flate2_1_0_1.default = true;
    hex_0_3_2.default = true;
    ignore_0_3_1.default = true;
    libpijul_0_10_1.default = (f.libpijul_0_10_1.default or true);
    log_0_4_1.default = true;
    openssl_0_10_6.default = true;
    rand_0_4_2.default = true;
    sanakirja_0_8_16.default = true;
    serde_1_0_41.default = true;
    serde_derive_1_0_41.default = true;
    serde_json_1_0_15.default = true;
    tempdir_0_3_7.default = true;
    thrussh_keys_0_9_5.default = true;
  }) [ base64_0_9_0_features bincode_0_8_0_features bitflags_1_0_1_features bs58_0_2_0_features byteorder_1_2_2_features chrono_0_4_2_features error_chain_0_11_0_features flate2_1_0_1_features hex_0_3_2_features ignore_0_3_1_features log_0_4_1_features openssl_0_10_6_features rand_0_4_2_features sanakirja_0_8_16_features serde_1_0_41_features serde_derive_1_0_41_features serde_json_1_0_15_features tempdir_0_3_7_features thrussh_keys_0_9_5_features ];
  line_0_1_2 = { features?(line_0_1_2_features {}) }: line_0_1_2_ {
    dependencies = (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_40 utf8parse_0_1_0 ]) else []);
  };
  line_0_1_2_features = f: updateFeatures f (rec {
    libc_0_2_40.default = true;
    line_0_1_2.default = (f.line_0_1_2.default or true);
    utf8parse_0_1_0.default = true;
  }) [ libc_0_2_40_features utf8parse_0_1_0_features ];
  log_0_3_9 = { features?(log_0_3_9_features {}) }: log_0_3_9_ {
    dependencies = mapFeatures features ([ log_0_4_1 ]);
    features = mkFeatures (features.log_0_3_9 or {});
  };
  log_0_3_9_features = f: updateFeatures f (rec {
    log_0_3_9.default = (f.log_0_3_9.default or true);
    log_0_3_9.use_std =
      (f.log_0_3_9.use_std or false) ||
      (f.log_0_3_9.default or false) ||
      (log_0_3_9.default or false);
    log_0_4_1.default = true;
    log_0_4_1.max_level_debug =
      (f.log_0_4_1.max_level_debug or false) ||
      (log_0_3_9.max_level_debug or false) ||
      (f.log_0_3_9.max_level_debug or false);
    log_0_4_1.max_level_error =
      (f.log_0_4_1.max_level_error or false) ||
      (log_0_3_9.max_level_error or false) ||
      (f.log_0_3_9.max_level_error or false);
    log_0_4_1.max_level_info =
      (f.log_0_4_1.max_level_info or false) ||
      (log_0_3_9.max_level_info or false) ||
      (f.log_0_3_9.max_level_info or false);
    log_0_4_1.max_level_off =
      (f.log_0_4_1.max_level_off or false) ||
      (log_0_3_9.max_level_off or false) ||
      (f.log_0_3_9.max_level_off or false);
    log_0_4_1.max_level_trace =
      (f.log_0_4_1.max_level_trace or false) ||
      (log_0_3_9.max_level_trace or false) ||
      (f.log_0_3_9.max_level_trace or false);
    log_0_4_1.max_level_warn =
      (f.log_0_4_1.max_level_warn or false) ||
      (log_0_3_9.max_level_warn or false) ||
      (f.log_0_3_9.max_level_warn or false);
    log_0_4_1.release_max_level_debug =
      (f.log_0_4_1.release_max_level_debug or false) ||
      (log_0_3_9.release_max_level_debug or false) ||
      (f.log_0_3_9.release_max_level_debug or false);
    log_0_4_1.release_max_level_error =
      (f.log_0_4_1.release_max_level_error or false) ||
      (log_0_3_9.release_max_level_error or false) ||
      (f.log_0_3_9.release_max_level_error or false);
    log_0_4_1.release_max_level_info =
      (f.log_0_4_1.release_max_level_info or false) ||
      (log_0_3_9.release_max_level_info or false) ||
      (f.log_0_3_9.release_max_level_info or false);
    log_0_4_1.release_max_level_off =
      (f.log_0_4_1.release_max_level_off or false) ||
      (log_0_3_9.release_max_level_off or false) ||
      (f.log_0_3_9.release_max_level_off or false);
    log_0_4_1.release_max_level_trace =
      (f.log_0_4_1.release_max_level_trace or false) ||
      (log_0_3_9.release_max_level_trace or false) ||
      (f.log_0_3_9.release_max_level_trace or false);
    log_0_4_1.release_max_level_warn =
      (f.log_0_4_1.release_max_level_warn or false) ||
      (log_0_3_9.release_max_level_warn or false) ||
      (f.log_0_3_9.release_max_level_warn or false);
    log_0_4_1.std =
      (f.log_0_4_1.std or false) ||
      (log_0_3_9.use_std or false) ||
      (f.log_0_3_9.use_std or false);
  }) [ log_0_4_1_features ];
  log_0_4_1 = { features?(log_0_4_1_features {}) }: log_0_4_1_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 ]);
    features = mkFeatures (features.log_0_4_1 or {});
  };
  log_0_4_1_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = true;
    log_0_4_1.default = (f.log_0_4_1.default or true);
  }) [ cfg_if_0_1_2_features ];
  matches_0_1_6 = { features?(matches_0_1_6_features {}) }: matches_0_1_6_ {};
  matches_0_1_6_features = f: updateFeatures f (rec {
    matches_0_1_6.default = (f.matches_0_1_6.default or true);
  }) [];
  memchr_2_0_1 = { features?(memchr_2_0_1_features {}) }: memchr_2_0_1_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.memchr_2_0_1.libc or false then [ libc_0_2_40 ] else []));
    features = mkFeatures (features.memchr_2_0_1 or {});
  };
  memchr_2_0_1_features = f: updateFeatures f (rec {
    libc_0_2_40.default = (f.libc_0_2_40.default or false);
    libc_0_2_40.use_std =
      (f.libc_0_2_40.use_std or false) ||
      (memchr_2_0_1.use_std or false) ||
      (f.memchr_2_0_1.use_std or false);
    memchr_2_0_1.default = (f.memchr_2_0_1.default or true);
    memchr_2_0_1.libc =
      (f.memchr_2_0_1.libc or false) ||
      (f.memchr_2_0_1.default or false) ||
      (memchr_2_0_1.default or false) ||
      (f.memchr_2_0_1.use_std or false) ||
      (memchr_2_0_1.use_std or false);
    memchr_2_0_1.use_std =
      (f.memchr_2_0_1.use_std or false) ||
      (f.memchr_2_0_1.default or false) ||
      (memchr_2_0_1.default or false);
  }) [ libc_0_2_40_features ];
  memmap_0_6_2 = { features?(memmap_0_6_2_features {}) }: memmap_0_6_2_ {
    dependencies = (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_40 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  memmap_0_6_2_features = f: updateFeatures f (rec {
    libc_0_2_40.default = true;
    memmap_0_6_2.default = (f.memmap_0_6_2.default or true);
    winapi_0_3_4.basetsd = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.handleapi = true;
    winapi_0_3_4.memoryapi = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.std = true;
    winapi_0_3_4.sysinfoapi = true;
  }) [ libc_0_2_40_features winapi_0_3_4_features ];
  memoffset_0_2_1 = { features?(memoffset_0_2_1_features {}) }: memoffset_0_2_1_ {};
  memoffset_0_2_1_features = f: updateFeatures f (rec {
    memoffset_0_2_1.default = (f.memoffset_0_2_1.default or true);
  }) [];
  mime_0_3_5 = { features?(mime_0_3_5_features {}) }: mime_0_3_5_ {
    dependencies = mapFeatures features ([ unicase_2_1_0 ]);
  };
  mime_0_3_5_features = f: updateFeatures f (rec {
    mime_0_3_5.default = (f.mime_0_3_5.default or true);
    unicase_2_1_0.default = true;
  }) [ unicase_2_1_0_features ];
  mime_guess_2_0_0_alpha_4 = { features?(mime_guess_2_0_0_alpha_4_features {}) }: mime_guess_2_0_0_alpha_4_ {
    dependencies = mapFeatures features ([ mime_0_3_5 phf_0_7_21 unicase_1_4_2 ]);
    buildDependencies = mapFeatures features ([ phf_codegen_0_7_21 unicase_1_4_2 ]);
    features = mkFeatures (features.mime_guess_2_0_0_alpha_4 or {});
  };
  mime_guess_2_0_0_alpha_4_features = f: updateFeatures f (rec {
    mime_0_3_5.default = true;
    mime_guess_2_0_0_alpha_4.default = (f.mime_guess_2_0_0_alpha_4.default or true);
    phf_0_7_21.default = true;
    phf_0_7_21.unicase = true;
    phf_codegen_0_7_21.default = true;
    unicase_1_4_2.default = true;
  }) [ mime_0_3_5_features phf_0_7_21_features unicase_1_4_2_features phf_codegen_0_7_21_features unicase_1_4_2_features ];
  miniz_sys_0_1_10 = { features?(miniz_sys_0_1_10_features {}) }: miniz_sys_0_1_10_ {
    dependencies = mapFeatures features ([ libc_0_2_40 ]);
    buildDependencies = mapFeatures features ([ cc_1_0_10 ]);
  };
  miniz_sys_0_1_10_features = f: updateFeatures f (rec {
    cc_1_0_10.default = true;
    libc_0_2_40.default = true;
    miniz_sys_0_1_10.default = (f.miniz_sys_0_1_10.default or true);
  }) [ libc_0_2_40_features cc_1_0_10_features ];
  mio_0_6_14 = { features?(mio_0_6_14_features {}) }: mio_0_6_14_ {
    dependencies = mapFeatures features ([ iovec_0_1_2 lazycell_0_6_0 log_0_4_1 net2_0_2_32 slab_0_4_0 ])
      ++ (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_3_3 fuchsia_zircon_sys_0_3_3 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_40 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 miow_0_2_1 winapi_0_2_8 ]) else []);
    features = mkFeatures (features.mio_0_6_14 or {});
  };
  mio_0_6_14_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_3_3.default = true;
    fuchsia_zircon_sys_0_3_3.default = true;
    iovec_0_1_2.default = true;
    kernel32_sys_0_2_2.default = true;
    lazycell_0_6_0.default = true;
    libc_0_2_40.default = true;
    log_0_4_1.default = true;
    mio_0_6_14.default = (f.mio_0_6_14.default or true);
    mio_0_6_14.with-deprecated =
      (f.mio_0_6_14.with-deprecated or false) ||
      (f.mio_0_6_14.default or false) ||
      (mio_0_6_14.default or false);
    miow_0_2_1.default = true;
    net2_0_2_32.default = true;
    slab_0_4_0.default = true;
    winapi_0_2_8.default = true;
  }) [ iovec_0_1_2_features lazycell_0_6_0_features log_0_4_1_features net2_0_2_32_features slab_0_4_0_features fuchsia_zircon_0_3_3_features fuchsia_zircon_sys_0_3_3_features libc_0_2_40_features kernel32_sys_0_2_2_features miow_0_2_1_features winapi_0_2_8_features ];
  mio_uds_0_6_4 = { features?(mio_uds_0_6_4_features {}) }: mio_uds_0_6_4_ {
    dependencies = (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_40 mio_0_6_14 ]) else []);
  };
  mio_uds_0_6_4_features = f: updateFeatures f (rec {
    libc_0_2_40.default = true;
    mio_0_6_14.default = true;
    mio_uds_0_6_4.default = (f.mio_uds_0_6_4.default or true);
  }) [ libc_0_2_40_features mio_0_6_14_features ];
  miow_0_2_1 = { features?(miow_0_2_1_features {}) }: miow_0_2_1_ {
    dependencies = mapFeatures features ([ kernel32_sys_0_2_2 net2_0_2_32 winapi_0_2_8 ws2_32_sys_0_2_1 ]);
  };
  miow_0_2_1_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    miow_0_2_1.default = (f.miow_0_2_1.default or true);
    net2_0_2_32.default = (f.net2_0_2_32.default or false);
    winapi_0_2_8.default = true;
    ws2_32_sys_0_2_1.default = true;
  }) [ kernel32_sys_0_2_2_features net2_0_2_32_features winapi_0_2_8_features ws2_32_sys_0_2_1_features ];
  native_tls_0_1_5 = { features?(native_tls_0_1_5_features {}) }: native_tls_0_1_5_ {
    dependencies = mapFeatures features ([ lazy_static_0_2_11 ])
      ++ (if kernel == "darwin" || kernel == "ios" then mapFeatures features ([ libc_0_2_40 security_framework_0_1_16 security_framework_sys_0_1_16 tempdir_0_3_7 ]) else [])
      ++ (if !(kernel == "windows" || kernel == "darwin" || kernel == "ios") then mapFeatures features ([ openssl_0_9_24 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ schannel_0_1_12 ]) else []);
  };
  native_tls_0_1_5_features = f: updateFeatures f (rec {
    lazy_static_0_2_11.default = true;
    libc_0_2_40.default = true;
    native_tls_0_1_5.default = (f.native_tls_0_1_5.default or true);
    openssl_0_9_24.default = true;
    schannel_0_1_12.default = true;
    security_framework_0_1_16.OSX_10_8 = true;
    security_framework_0_1_16.default = true;
    security_framework_sys_0_1_16.default = true;
    tempdir_0_3_7.default = true;
  }) [ lazy_static_0_2_11_features libc_0_2_40_features security_framework_0_1_16_features security_framework_sys_0_1_16_features tempdir_0_3_7_features openssl_0_9_24_features schannel_0_1_12_features ];
  net2_0_2_32 = { features?(net2_0_2_32_features {}) }: net2_0_2_32_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 ])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_40 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else [])
      ++ (if kernel == "i686-apple-darwin" then mapFeatures features ([ libc_0_2_40 ]) else [])
      ++ (if kernel == "i686-unknown-linux-gnu" then mapFeatures features ([ libc_0_2_40 ]) else [])
      ++ (if kernel == "x86_64-apple-darwin" then mapFeatures features ([ libc_0_2_40 ]) else [])
      ++ (if kernel == "x86_64-unknown-linux-gnu" then mapFeatures features ([ libc_0_2_40 ]) else []);
    features = mkFeatures (features.net2_0_2_32 or {});
  };
  net2_0_2_32_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = true;
    libc_0_2_40.default = true;
    net2_0_2_32.default = (f.net2_0_2_32.default or true);
    net2_0_2_32.duration =
      (f.net2_0_2_32.duration or false) ||
      (f.net2_0_2_32.default or false) ||
      (net2_0_2_32.default or false);
    winapi_0_3_4.default = true;
    winapi_0_3_4.handleapi = true;
    winapi_0_3_4.winsock2 = true;
    winapi_0_3_4.ws2def = true;
    winapi_0_3_4.ws2ipdef = true;
    winapi_0_3_4.ws2tcpip = true;
  }) [ cfg_if_0_1_2_features libc_0_2_40_features winapi_0_3_4_features libc_0_2_40_features libc_0_2_40_features libc_0_2_40_features libc_0_2_40_features ];
  nodrop_0_1_12 = { features?(nodrop_0_1_12_features {}) }: nodrop_0_1_12_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.nodrop_0_1_12 or {});
  };
  nodrop_0_1_12_features = f: updateFeatures f (rec {
    nodrop_0_1_12.default = (f.nodrop_0_1_12.default or true);
    nodrop_0_1_12.nodrop-union =
      (f.nodrop_0_1_12.nodrop-union or false) ||
      (f.nodrop_0_1_12.use_union or false) ||
      (nodrop_0_1_12.use_union or false);
    nodrop_0_1_12.std =
      (f.nodrop_0_1_12.std or false) ||
      (f.nodrop_0_1_12.default or false) ||
      (nodrop_0_1_12.default or false);
  }) [];
  num_0_1_42 = { features?(num_0_1_42_features {}) }: num_0_1_42_ {
    dependencies = mapFeatures features ([ num_integer_0_1_36 num_iter_0_1_35 num_traits_0_2_2 ]
      ++ (if features.num_0_1_42.num-bigint or false then [ num_bigint_0_1_43 ] else [])
      ++ (if features.num_0_1_42.num-complex or false then [ num_complex_0_1_43 ] else [])
      ++ (if features.num_0_1_42.num-rational or false then [ num_rational_0_1_42 ] else []));
    features = mkFeatures (features.num_0_1_42 or {});
  };
  num_0_1_42_features = f: updateFeatures f (rec {
    num_0_1_42.bigint =
      (f.num_0_1_42.bigint or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_0_1_42.complex =
      (f.num_0_1_42.complex or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_0_1_42.default = (f.num_0_1_42.default or true);
    num_0_1_42.num-bigint =
      (f.num_0_1_42.num-bigint or false) ||
      (f.num_0_1_42.bigint or false) ||
      (num_0_1_42.bigint or false);
    num_0_1_42.num-complex =
      (f.num_0_1_42.num-complex or false) ||
      (f.num_0_1_42.complex or false) ||
      (num_0_1_42.complex or false);
    num_0_1_42.num-rational =
      (f.num_0_1_42.num-rational or false) ||
      (f.num_0_1_42.rational or false) ||
      (num_0_1_42.rational or false);
    num_0_1_42.rational =
      (f.num_0_1_42.rational or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_0_1_42.rustc-serialize =
      (f.num_0_1_42.rustc-serialize or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_bigint_0_1_43.default = true;
    num_bigint_0_1_43.rustc-serialize =
      (f.num_bigint_0_1_43.rustc-serialize or false) ||
      (num_0_1_42.rustc-serialize or false) ||
      (f.num_0_1_42.rustc-serialize or false);
    num_bigint_0_1_43.serde =
      (f.num_bigint_0_1_43.serde or false) ||
      (num_0_1_42.serde or false) ||
      (f.num_0_1_42.serde or false);
    num_complex_0_1_43.default = true;
    num_complex_0_1_43.rustc-serialize =
      (f.num_complex_0_1_43.rustc-serialize or false) ||
      (num_0_1_42.rustc-serialize or false) ||
      (f.num_0_1_42.rustc-serialize or false);
    num_complex_0_1_43.serde =
      (f.num_complex_0_1_43.serde or false) ||
      (num_0_1_42.serde or false) ||
      (f.num_0_1_42.serde or false);
    num_integer_0_1_36.default = true;
    num_iter_0_1_35.default = true;
    num_rational_0_1_42.default = true;
    num_rational_0_1_42.rustc-serialize =
      (f.num_rational_0_1_42.rustc-serialize or false) ||
      (num_0_1_42.rustc-serialize or false) ||
      (f.num_0_1_42.rustc-serialize or false);
    num_rational_0_1_42.serde =
      (f.num_rational_0_1_42.serde or false) ||
      (num_0_1_42.serde or false) ||
      (f.num_0_1_42.serde or false);
    num_traits_0_2_2.default = true;
  }) [ num_bigint_0_1_43_features num_complex_0_1_43_features num_integer_0_1_36_features num_iter_0_1_35_features num_rational_0_1_42_features num_traits_0_2_2_features ];
  num_bigint_0_1_43 = { features?(num_bigint_0_1_43_features {}) }: num_bigint_0_1_43_ {
    dependencies = mapFeatures features ([ num_integer_0_1_36 num_traits_0_2_2 ]
      ++ (if features.num_bigint_0_1_43.rand or false then [ rand_0_4_2 ] else [])
      ++ (if features.num_bigint_0_1_43.rustc-serialize or false then [ rustc_serialize_0_3_24 ] else []));
    features = mkFeatures (features.num_bigint_0_1_43 or {});
  };
  num_bigint_0_1_43_features = f: updateFeatures f (rec {
    num_bigint_0_1_43.default = (f.num_bigint_0_1_43.default or true);
    num_bigint_0_1_43.rand =
      (f.num_bigint_0_1_43.rand or false) ||
      (f.num_bigint_0_1_43.default or false) ||
      (num_bigint_0_1_43.default or false);
    num_bigint_0_1_43.rustc-serialize =
      (f.num_bigint_0_1_43.rustc-serialize or false) ||
      (f.num_bigint_0_1_43.default or false) ||
      (num_bigint_0_1_43.default or false);
    num_integer_0_1_36.default = (f.num_integer_0_1_36.default or false);
    num_traits_0_2_2.default = (f.num_traits_0_2_2.default or false);
    num_traits_0_2_2.std = true;
    rand_0_4_2.default = true;
    rustc_serialize_0_3_24.default = true;
  }) [ num_integer_0_1_36_features num_traits_0_2_2_features rand_0_4_2_features rustc_serialize_0_3_24_features ];
  num_complex_0_1_43 = { features?(num_complex_0_1_43_features {}) }: num_complex_0_1_43_ {
    dependencies = mapFeatures features ([ num_traits_0_2_2 ]
      ++ (if features.num_complex_0_1_43.rustc-serialize or false then [ rustc_serialize_0_3_24 ] else []));
    features = mkFeatures (features.num_complex_0_1_43 or {});
  };
  num_complex_0_1_43_features = f: updateFeatures f (rec {
    num_complex_0_1_43.default = (f.num_complex_0_1_43.default or true);
    num_complex_0_1_43.rustc-serialize =
      (f.num_complex_0_1_43.rustc-serialize or false) ||
      (f.num_complex_0_1_43.default or false) ||
      (num_complex_0_1_43.default or false);
    num_traits_0_2_2.default = (f.num_traits_0_2_2.default or false);
    num_traits_0_2_2.std = true;
    rustc_serialize_0_3_24.default = true;
  }) [ num_traits_0_2_2_features rustc_serialize_0_3_24_features ];
  num_integer_0_1_36 = { features?(num_integer_0_1_36_features {}) }: num_integer_0_1_36_ {
    dependencies = mapFeatures features ([ num_traits_0_2_2 ]);
    features = mkFeatures (features.num_integer_0_1_36 or {});
  };
  num_integer_0_1_36_features = f: updateFeatures f (rec {
    num_integer_0_1_36.default = (f.num_integer_0_1_36.default or true);
    num_integer_0_1_36.std =
      (f.num_integer_0_1_36.std or false) ||
      (f.num_integer_0_1_36.default or false) ||
      (num_integer_0_1_36.default or false);
    num_traits_0_2_2.default = (f.num_traits_0_2_2.default or false);
  }) [ num_traits_0_2_2_features ];
  num_iter_0_1_35 = { features?(num_iter_0_1_35_features {}) }: num_iter_0_1_35_ {
    dependencies = mapFeatures features ([ num_integer_0_1_36 num_traits_0_2_2 ]);
    features = mkFeatures (features.num_iter_0_1_35 or {});
  };
  num_iter_0_1_35_features = f: updateFeatures f (rec {
    num_integer_0_1_36.default = (f.num_integer_0_1_36.default or false);
    num_iter_0_1_35.default = (f.num_iter_0_1_35.default or true);
    num_iter_0_1_35.std =
      (f.num_iter_0_1_35.std or false) ||
      (f.num_iter_0_1_35.default or false) ||
      (num_iter_0_1_35.default or false);
    num_traits_0_2_2.default = (f.num_traits_0_2_2.default or false);
  }) [ num_integer_0_1_36_features num_traits_0_2_2_features ];
  num_rational_0_1_42 = { features?(num_rational_0_1_42_features {}) }: num_rational_0_1_42_ {
    dependencies = mapFeatures features ([ num_integer_0_1_36 num_traits_0_2_2 ]
      ++ (if features.num_rational_0_1_42.num-bigint or false then [ num_bigint_0_1_43 ] else [])
      ++ (if features.num_rational_0_1_42.rustc-serialize or false then [ rustc_serialize_0_3_24 ] else []));
    features = mkFeatures (features.num_rational_0_1_42 or {});
  };
  num_rational_0_1_42_features = f: updateFeatures f (rec {
    num_bigint_0_1_43.default = true;
    num_integer_0_1_36.default = (f.num_integer_0_1_36.default or false);
    num_rational_0_1_42.bigint =
      (f.num_rational_0_1_42.bigint or false) ||
      (f.num_rational_0_1_42.default or false) ||
      (num_rational_0_1_42.default or false);
    num_rational_0_1_42.default = (f.num_rational_0_1_42.default or true);
    num_rational_0_1_42.num-bigint =
      (f.num_rational_0_1_42.num-bigint or false) ||
      (f.num_rational_0_1_42.bigint or false) ||
      (num_rational_0_1_42.bigint or false);
    num_rational_0_1_42.rustc-serialize =
      (f.num_rational_0_1_42.rustc-serialize or false) ||
      (f.num_rational_0_1_42.default or false) ||
      (num_rational_0_1_42.default or false);
    num_traits_0_2_2.default = (f.num_traits_0_2_2.default or false);
    num_traits_0_2_2.std = true;
    rustc_serialize_0_3_24.default = true;
  }) [ num_bigint_0_1_43_features num_integer_0_1_36_features num_traits_0_2_2_features rustc_serialize_0_3_24_features ];
  num_traits_0_1_43 = { features?(num_traits_0_1_43_features {}) }: num_traits_0_1_43_ {
    dependencies = mapFeatures features ([ num_traits_0_2_2 ]);
  };
  num_traits_0_1_43_features = f: updateFeatures f (rec {
    num_traits_0_1_43.default = (f.num_traits_0_1_43.default or true);
    num_traits_0_2_2.default = true;
  }) [ num_traits_0_2_2_features ];
  num_traits_0_2_2 = { features?(num_traits_0_2_2_features {}) }: num_traits_0_2_2_ {
    features = mkFeatures (features.num_traits_0_2_2 or {});
  };
  num_traits_0_2_2_features = f: updateFeatures f (rec {
    num_traits_0_2_2.default = (f.num_traits_0_2_2.default or true);
    num_traits_0_2_2.std =
      (f.num_traits_0_2_2.std or false) ||
      (f.num_traits_0_2_2.default or false) ||
      (num_traits_0_2_2.default or false);
  }) [];
  num_cpus_1_8_0 = { features?(num_cpus_1_8_0_features {}) }: num_cpus_1_8_0_ {
    dependencies = mapFeatures features ([ libc_0_2_40 ]);
  };
  num_cpus_1_8_0_features = f: updateFeatures f (rec {
    libc_0_2_40.default = true;
    num_cpus_1_8_0.default = (f.num_cpus_1_8_0.default or true);
  }) [ libc_0_2_40_features ];
  openssl_0_9_24 = { features?(openssl_0_9_24_features {}) }: openssl_0_9_24_ {
    dependencies = mapFeatures features ([ bitflags_0_9_1 foreign_types_0_3_2 lazy_static_1_0_0 libc_0_2_40 openssl_sys_0_9_28 ]);
    features = mkFeatures (features.openssl_0_9_24 or {});
  };
  openssl_0_9_24_features = f: updateFeatures f (rec {
    bitflags_0_9_1.default = true;
    foreign_types_0_3_2.default = true;
    lazy_static_1_0_0.default = true;
    libc_0_2_40.default = true;
    openssl_0_9_24.default = (f.openssl_0_9_24.default or true);
    openssl_sys_0_9_28.default = true;
  }) [ bitflags_0_9_1_features foreign_types_0_3_2_features lazy_static_1_0_0_features libc_0_2_40_features openssl_sys_0_9_28_features ];
  openssl_0_10_6 = { features?(openssl_0_10_6_features {}) }: openssl_0_10_6_ {
    dependencies = mapFeatures features ([ bitflags_1_0_1 foreign_types_0_3_2 lazy_static_1_0_0 libc_0_2_40 openssl_sys_0_9_28 ]);
    features = mkFeatures (features.openssl_0_10_6 or {});
  };
  openssl_0_10_6_features = f: updateFeatures f (rec {
    bitflags_1_0_1.default = true;
    foreign_types_0_3_2.default = true;
    lazy_static_1_0_0.default = true;
    libc_0_2_40.default = true;
    openssl_0_10_6.default = (f.openssl_0_10_6.default or true);
    openssl_sys_0_9_28.default = true;
  }) [ bitflags_1_0_1_features foreign_types_0_3_2_features lazy_static_1_0_0_features libc_0_2_40_features openssl_sys_0_9_28_features ];
  openssl_sys_0_9_28 = { features?(openssl_sys_0_9_28_features {}) }: openssl_sys_0_9_28_ {
    dependencies = mapFeatures features ([ libc_0_2_40 ])
      ++ (if abi == "msvc" then mapFeatures features ([]) else []);
    buildDependencies = mapFeatures features ([ cc_1_0_10 pkg_config_0_3_9 ]);
  };
  openssl_sys_0_9_28_features = f: updateFeatures f (rec {
    cc_1_0_10.default = true;
    libc_0_2_40.default = true;
    openssl_sys_0_9_28.default = (f.openssl_sys_0_9_28.default or true);
    pkg_config_0_3_9.default = true;
  }) [ libc_0_2_40_features cc_1_0_10_features pkg_config_0_3_9_features ];
  pager_0_14_0 = { features?(pager_0_14_0_features {}) }: pager_0_14_0_ {
    dependencies = mapFeatures features ([ errno_0_2_3 libc_0_2_40 ]);
    features = mkFeatures (features.pager_0_14_0 or {});
  };
  pager_0_14_0_features = f: updateFeatures f (rec {
    errno_0_2_3.default = true;
    libc_0_2_40.default = true;
    pager_0_14_0.default = (f.pager_0_14_0.default or true);
  }) [ errno_0_2_3_features libc_0_2_40_features ];
  percent_encoding_1_0_1 = { features?(percent_encoding_1_0_1_features {}) }: percent_encoding_1_0_1_ {};
  percent_encoding_1_0_1_features = f: updateFeatures f (rec {
    percent_encoding_1_0_1.default = (f.percent_encoding_1_0_1.default or true);
  }) [];
  phf_0_7_21 = { features?(phf_0_7_21_features {}) }: phf_0_7_21_ {
    dependencies = mapFeatures features ([ phf_shared_0_7_21 ]);
    features = mkFeatures (features.phf_0_7_21 or {});
  };
  phf_0_7_21_features = f: updateFeatures f (rec {
    phf_0_7_21.default = (f.phf_0_7_21.default or true);
    phf_shared_0_7_21.core =
      (f.phf_shared_0_7_21.core or false) ||
      (phf_0_7_21.core or false) ||
      (f.phf_0_7_21.core or false);
    phf_shared_0_7_21.default = true;
    phf_shared_0_7_21.unicase =
      (f.phf_shared_0_7_21.unicase or false) ||
      (phf_0_7_21.unicase or false) ||
      (f.phf_0_7_21.unicase or false);
  }) [ phf_shared_0_7_21_features ];
  phf_codegen_0_7_21 = { features?(phf_codegen_0_7_21_features {}) }: phf_codegen_0_7_21_ {
    dependencies = mapFeatures features ([ phf_generator_0_7_21 phf_shared_0_7_21 ]);
  };
  phf_codegen_0_7_21_features = f: updateFeatures f (rec {
    phf_codegen_0_7_21.default = (f.phf_codegen_0_7_21.default or true);
    phf_generator_0_7_21.default = true;
    phf_shared_0_7_21.default = true;
  }) [ phf_generator_0_7_21_features phf_shared_0_7_21_features ];
  phf_generator_0_7_21 = { features?(phf_generator_0_7_21_features {}) }: phf_generator_0_7_21_ {
    dependencies = mapFeatures features ([ phf_shared_0_7_21 rand_0_3_22 ]);
  };
  phf_generator_0_7_21_features = f: updateFeatures f (rec {
    phf_generator_0_7_21.default = (f.phf_generator_0_7_21.default or true);
    phf_shared_0_7_21.default = true;
    rand_0_3_22.default = true;
  }) [ phf_shared_0_7_21_features rand_0_3_22_features ];
  phf_shared_0_7_21 = { features?(phf_shared_0_7_21_features {}) }: phf_shared_0_7_21_ {
    dependencies = mapFeatures features ([ siphasher_0_2_2 ]
      ++ (if features.phf_shared_0_7_21.unicase or false then [ unicase_1_4_2 ] else []));
    features = mkFeatures (features.phf_shared_0_7_21 or {});
  };
  phf_shared_0_7_21_features = f: updateFeatures f (rec {
    phf_shared_0_7_21.default = (f.phf_shared_0_7_21.default or true);
    siphasher_0_2_2.default = true;
    unicase_1_4_2.default = true;
  }) [ siphasher_0_2_2_features unicase_1_4_2_features ];
  pijul_0_10_0 = { features?(pijul_0_10_0_features {}) }: pijul_0_10_0_ {
    dependencies = mapFeatures features ([ base64_0_9_0 bincode_0_8_0 bs58_0_2_0 chrono_0_4_2 clap_2_31_2 cryptovec_0_4_4 env_logger_0_5_8 error_chain_0_11_0 flate2_1_0_1 futures_0_1_21 getch_0_2_0 hex_0_3_2 ignore_0_3_1 isatty_0_1_7 libpijul_0_10_1 line_0_1_2 log_0_4_1 progrs_0_1_1 rand_0_4_2 regex_0_2_10 reqwest_0_8_5 rpassword_2_0_0 serde_1_0_41 serde_derive_1_0_41 shell_escape_0_1_4 tar_0_4_15 tempdir_0_3_7 term_0_5_1 thrussh_0_19_5 thrussh_keys_0_9_5 tokio_core_0_1_17 tokio_io_0_1_6 toml_0_4_6 username_0_2_0 ])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ pager_0_14_0 tokio_uds_0_1_7 ]) else []);
  };
  pijul_0_10_0_features = f: updateFeatures f (rec {
    base64_0_9_0.default = true;
    bincode_0_8_0.default = true;
    bs58_0_2_0.default = true;
    chrono_0_4_2.default = true;
    clap_2_31_2.default = true;
    cryptovec_0_4_4.default = true;
    env_logger_0_5_8.default = true;
    error_chain_0_11_0.default = true;
    flate2_1_0_1.default = true;
    futures_0_1_21.default = true;
    getch_0_2_0.default = true;
    hex_0_3_2.default = true;
    ignore_0_3_1.default = true;
    isatty_0_1_7.default = true;
    libpijul_0_10_1.default = true;
    line_0_1_2.default = true;
    log_0_4_1.default = true;
    pager_0_14_0.default = true;
    pijul_0_10_0.default = (f.pijul_0_10_0.default or true);
    progrs_0_1_1.default = true;
    rand_0_4_2.default = true;
    regex_0_2_10.default = true;
    reqwest_0_8_5.default = true;
    reqwest_0_8_5.unstable = true;
    rpassword_2_0_0.default = true;
    serde_1_0_41.default = true;
    serde_derive_1_0_41.default = true;
    shell_escape_0_1_4.default = true;
    tar_0_4_15.default = true;
    tempdir_0_3_7.default = true;
    term_0_5_1.default = true;
    thrussh_0_19_5.default = true;
    thrussh_keys_0_9_5.default = true;
    tokio_core_0_1_17.default = true;
    tokio_io_0_1_6.default = true;
    tokio_uds_0_1_7.default = true;
    toml_0_4_6.default = true;
    username_0_2_0.default = true;
  }) [ base64_0_9_0_features bincode_0_8_0_features bs58_0_2_0_features chrono_0_4_2_features clap_2_31_2_features cryptovec_0_4_4_features env_logger_0_5_8_features error_chain_0_11_0_features flate2_1_0_1_features futures_0_1_21_features getch_0_2_0_features hex_0_3_2_features ignore_0_3_1_features isatty_0_1_7_features libpijul_0_10_1_features line_0_1_2_features log_0_4_1_features progrs_0_1_1_features rand_0_4_2_features regex_0_2_10_features reqwest_0_8_5_features rpassword_2_0_0_features serde_1_0_41_features serde_derive_1_0_41_features shell_escape_0_1_4_features tar_0_4_15_features tempdir_0_3_7_features term_0_5_1_features thrussh_0_19_5_features thrussh_keys_0_9_5_features tokio_core_0_1_17_features tokio_io_0_1_6_features toml_0_4_6_features username_0_2_0_features pager_0_14_0_features tokio_uds_0_1_7_features ];
  pkg_config_0_3_9 = { features?(pkg_config_0_3_9_features {}) }: pkg_config_0_3_9_ {};
  pkg_config_0_3_9_features = f: updateFeatures f (rec {
    pkg_config_0_3_9.default = (f.pkg_config_0_3_9.default or true);
  }) [];
  proc_macro2_0_3_6 = { features?(proc_macro2_0_3_6_features {}) }: proc_macro2_0_3_6_ {
    dependencies = mapFeatures features ([ unicode_xid_0_1_0 ]);
    features = mkFeatures (features.proc_macro2_0_3_6 or {});
  };
  proc_macro2_0_3_6_features = f: updateFeatures f (rec {
    proc_macro2_0_3_6.default = (f.proc_macro2_0_3_6.default or true);
    proc_macro2_0_3_6.proc-macro =
      (f.proc_macro2_0_3_6.proc-macro or false) ||
      (f.proc_macro2_0_3_6.default or false) ||
      (proc_macro2_0_3_6.default or false) ||
      (f.proc_macro2_0_3_6.nightly or false) ||
      (proc_macro2_0_3_6.nightly or false);
    unicode_xid_0_1_0.default = true;
  }) [ unicode_xid_0_1_0_features ];
  progrs_0_1_1 = { features?(progrs_0_1_1_features {}) }: progrs_0_1_1_ {};
  progrs_0_1_1_features = f: updateFeatures f (rec {
    progrs_0_1_1.default = (f.progrs_0_1_1.default or true);
  }) [];
  quick_error_1_2_1 = { features?(quick_error_1_2_1_features {}) }: quick_error_1_2_1_ {};
  quick_error_1_2_1_features = f: updateFeatures f (rec {
    quick_error_1_2_1.default = (f.quick_error_1_2_1.default or true);
  }) [];
  quote_0_5_1 = { features?(quote_0_5_1_features {}) }: quote_0_5_1_ {
    dependencies = mapFeatures features ([ proc_macro2_0_3_6 ]);
    features = mkFeatures (features.quote_0_5_1 or {});
  };
  quote_0_5_1_features = f: updateFeatures f (rec {
    proc_macro2_0_3_6.default = (f.proc_macro2_0_3_6.default or false);
    proc_macro2_0_3_6.proc-macro =
      (f.proc_macro2_0_3_6.proc-macro or false) ||
      (quote_0_5_1.proc-macro or false) ||
      (f.quote_0_5_1.proc-macro or false);
    quote_0_5_1.default = (f.quote_0_5_1.default or true);
    quote_0_5_1.proc-macro =
      (f.quote_0_5_1.proc-macro or false) ||
      (f.quote_0_5_1.default or false) ||
      (quote_0_5_1.default or false);
  }) [ proc_macro2_0_3_6_features ];
  rand_0_3_22 = { features?(rand_0_3_22_features {}) }: rand_0_3_22_ {
    dependencies = mapFeatures features ([ libc_0_2_40 rand_0_4_2 ])
      ++ (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_3_3 ]) else []);
    features = mkFeatures (features.rand_0_3_22 or {});
  };
  rand_0_3_22_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_3_3.default = true;
    libc_0_2_40.default = true;
    rand_0_3_22.default = (f.rand_0_3_22.default or true);
    rand_0_3_22.i128_support =
      (f.rand_0_3_22.i128_support or false) ||
      (f.rand_0_3_22.nightly or false) ||
      (rand_0_3_22.nightly or false);
    rand_0_4_2.default = true;
  }) [ libc_0_2_40_features rand_0_4_2_features fuchsia_zircon_0_3_3_features ];
  rand_0_4_2 = { features?(rand_0_4_2_features {}) }: rand_0_4_2_ {
    dependencies = (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_3_3 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ ]
      ++ (if features.rand_0_4_2.libc or false then [ libc_0_2_40 ] else [])) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
    features = mkFeatures (features.rand_0_4_2 or {});
  };
  rand_0_4_2_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_3_3.default = true;
    libc_0_2_40.default = true;
    rand_0_4_2.default = (f.rand_0_4_2.default or true);
    rand_0_4_2.i128_support =
      (f.rand_0_4_2.i128_support or false) ||
      (f.rand_0_4_2.nightly or false) ||
      (rand_0_4_2.nightly or false);
    rand_0_4_2.libc =
      (f.rand_0_4_2.libc or false) ||
      (f.rand_0_4_2.std or false) ||
      (rand_0_4_2.std or false);
    rand_0_4_2.std =
      (f.rand_0_4_2.std or false) ||
      (f.rand_0_4_2.default or false) ||
      (rand_0_4_2.default or false);
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.ntsecapi = true;
    winapi_0_3_4.profileapi = true;
    winapi_0_3_4.winnt = true;
  }) [ fuchsia_zircon_0_3_3_features libc_0_2_40_features winapi_0_3_4_features ];
  redox_syscall_0_1_37 = { features?(redox_syscall_0_1_37_features {}) }: redox_syscall_0_1_37_ {};
  redox_syscall_0_1_37_features = f: updateFeatures f (rec {
    redox_syscall_0_1_37.default = (f.redox_syscall_0_1_37.default or true);
  }) [];
  redox_termios_0_1_1 = { features?(redox_termios_0_1_1_features {}) }: redox_termios_0_1_1_ {
    dependencies = mapFeatures features ([ redox_syscall_0_1_37 ]);
  };
  redox_termios_0_1_1_features = f: updateFeatures f (rec {
    redox_syscall_0_1_37.default = true;
    redox_termios_0_1_1.default = (f.redox_termios_0_1_1.default or true);
  }) [ redox_syscall_0_1_37_features ];
  regex_0_2_10 = { features?(regex_0_2_10_features {}) }: regex_0_2_10_ {
    dependencies = mapFeatures features ([ aho_corasick_0_6_4 memchr_2_0_1 regex_syntax_0_5_5 thread_local_0_3_5 utf8_ranges_1_0_0 ]);
    features = mkFeatures (features.regex_0_2_10 or {});
  };
  regex_0_2_10_features = f: updateFeatures f (rec {
    aho_corasick_0_6_4.default = true;
    memchr_2_0_1.default = true;
    regex_0_2_10.default = (f.regex_0_2_10.default or true);
    regex_0_2_10.pattern =
      (f.regex_0_2_10.pattern or false) ||
      (f.regex_0_2_10.unstable or false) ||
      (regex_0_2_10.unstable or false);
    regex_syntax_0_5_5.default = true;
    thread_local_0_3_5.default = true;
    utf8_ranges_1_0_0.default = true;
  }) [ aho_corasick_0_6_4_features memchr_2_0_1_features regex_syntax_0_5_5_features thread_local_0_3_5_features utf8_ranges_1_0_0_features ];
  regex_syntax_0_5_5 = { features?(regex_syntax_0_5_5_features {}) }: regex_syntax_0_5_5_ {
    dependencies = mapFeatures features ([ ucd_util_0_1_1 ]);
  };
  regex_syntax_0_5_5_features = f: updateFeatures f (rec {
    regex_syntax_0_5_5.default = (f.regex_syntax_0_5_5.default or true);
    ucd_util_0_1_1.default = true;
  }) [ ucd_util_0_1_1_features ];
  relay_0_1_1 = { features?(relay_0_1_1_features {}) }: relay_0_1_1_ {
    dependencies = mapFeatures features ([ futures_0_1_21 ]);
  };
  relay_0_1_1_features = f: updateFeatures f (rec {
    futures_0_1_21.default = true;
    relay_0_1_1.default = (f.relay_0_1_1.default or true);
  }) [ futures_0_1_21_features ];
  remove_dir_all_0_5_1 = { features?(remove_dir_all_0_5_1_features {}) }: remove_dir_all_0_5_1_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  remove_dir_all_0_5_1_features = f: updateFeatures f (rec {
    remove_dir_all_0_5_1.default = (f.remove_dir_all_0_5_1.default or true);
    winapi_0_3_4.default = true;
    winapi_0_3_4.errhandlingapi = true;
    winapi_0_3_4.fileapi = true;
    winapi_0_3_4.std = true;
    winapi_0_3_4.winbase = true;
    winapi_0_3_4.winerror = true;
  }) [ winapi_0_3_4_features ];
  reqwest_0_8_5 = { features?(reqwest_0_8_5_features {}) }: reqwest_0_8_5_ {
    dependencies = mapFeatures features ([ bytes_0_4_6 encoding_rs_0_7_2 futures_0_1_21 hyper_0_11_25 hyper_tls_0_1_3 libflate_0_1_14 log_0_4_1 mime_guess_2_0_0_alpha_4 native_tls_0_1_5 serde_1_0_41 serde_json_1_0_15 serde_urlencoded_0_5_1 tokio_core_0_1_17 tokio_io_0_1_6 tokio_tls_0_1_4 url_1_7_0 uuid_0_5_1 ]);
    features = mkFeatures (features.reqwest_0_8_5 or {});
  };
  reqwest_0_8_5_features = f: updateFeatures f (rec {
    bytes_0_4_6.default = true;
    encoding_rs_0_7_2.default = true;
    futures_0_1_21.default = true;
    hyper_0_11_25.default = true;
    hyper_tls_0_1_3.default = true;
    libflate_0_1_14.default = true;
    log_0_4_1.default = true;
    mime_guess_2_0_0_alpha_4.default = true;
    native_tls_0_1_5.default = true;
    reqwest_0_8_5.default = (f.reqwest_0_8_5.default or true);
    serde_1_0_41.default = true;
    serde_json_1_0_15.default = true;
    serde_urlencoded_0_5_1.default = true;
    tokio_core_0_1_17.default = true;
    tokio_io_0_1_6.default = true;
    tokio_tls_0_1_4.default = true;
    url_1_7_0.default = true;
    uuid_0_5_1.default = true;
    uuid_0_5_1.v4 = true;
  }) [ bytes_0_4_6_features encoding_rs_0_7_2_features futures_0_1_21_features hyper_0_11_25_features hyper_tls_0_1_3_features libflate_0_1_14_features log_0_4_1_features mime_guess_2_0_0_alpha_4_features native_tls_0_1_5_features serde_1_0_41_features serde_json_1_0_15_features serde_urlencoded_0_5_1_features tokio_core_0_1_17_features tokio_io_0_1_6_features tokio_tls_0_1_4_features url_1_7_0_features uuid_0_5_1_features ];
  rpassword_2_0_0 = { features?(rpassword_2_0_0_features {}) }: rpassword_2_0_0_ {
    dependencies = (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_40 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
  };
  rpassword_2_0_0_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    libc_0_2_40.default = true;
    rpassword_2_0_0.default = (f.rpassword_2_0_0.default or true);
    winapi_0_2_8.default = true;
  }) [ libc_0_2_40_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  rustc_demangle_0_1_7 = { features?(rustc_demangle_0_1_7_features {}) }: rustc_demangle_0_1_7_ {};
  rustc_demangle_0_1_7_features = f: updateFeatures f (rec {
    rustc_demangle_0_1_7.default = (f.rustc_demangle_0_1_7.default or true);
  }) [];
  rustc_serialize_0_3_24 = { features?(rustc_serialize_0_3_24_features {}) }: rustc_serialize_0_3_24_ {};
  rustc_serialize_0_3_24_features = f: updateFeatures f (rec {
    rustc_serialize_0_3_24.default = (f.rustc_serialize_0_3_24.default or true);
  }) [];
  safemem_0_2_0 = { features?(safemem_0_2_0_features {}) }: safemem_0_2_0_ {};
  safemem_0_2_0_features = f: updateFeatures f (rec {
    safemem_0_2_0.default = (f.safemem_0_2_0.default or true);
  }) [];
  same_file_1_0_2 = { features?(same_file_1_0_2_features {}) }: same_file_1_0_2_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  same_file_1_0_2_features = f: updateFeatures f (rec {
    same_file_1_0_2.default = (f.same_file_1_0_2.default or true);
    winapi_0_3_4.default = true;
    winapi_0_3_4.fileapi = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.processenv = true;
    winapi_0_3_4.std = true;
    winapi_0_3_4.winbase = true;
  }) [ winapi_0_3_4_features ];
  sanakirja_0_8_16 = { features?(sanakirja_0_8_16_features {}) }: sanakirja_0_8_16_ {
    dependencies = mapFeatures features ([ fs2_0_4_3 log_0_4_1 memmap_0_6_2 rand_0_4_2 ]);
  };
  sanakirja_0_8_16_features = f: updateFeatures f (rec {
    fs2_0_4_3.default = true;
    log_0_4_1.default = true;
    memmap_0_6_2.default = true;
    rand_0_4_2.default = true;
    sanakirja_0_8_16.default = (f.sanakirja_0_8_16.default or true);
  }) [ fs2_0_4_3_features log_0_4_1_features memmap_0_6_2_features rand_0_4_2_features ];
  schannel_0_1_12 = { features?(schannel_0_1_12_features {}) }: schannel_0_1_12_ {
    dependencies = mapFeatures features ([ lazy_static_1_0_0 winapi_0_3_4 ]);
  };
  schannel_0_1_12_features = f: updateFeatures f (rec {
    lazy_static_1_0_0.default = true;
    schannel_0_1_12.default = (f.schannel_0_1_12.default or true);
    winapi_0_3_4.default = true;
    winapi_0_3_4.lmcons = true;
    winapi_0_3_4.minschannel = true;
    winapi_0_3_4.schannel = true;
    winapi_0_3_4.securitybaseapi = true;
    winapi_0_3_4.sysinfoapi = true;
    winapi_0_3_4.timezoneapi = true;
    winapi_0_3_4.winbase = true;
    winapi_0_3_4.wincrypt = true;
    winapi_0_3_4.winerror = true;
  }) [ lazy_static_1_0_0_features winapi_0_3_4_features ];
  scoped_tls_0_1_1 = { features?(scoped_tls_0_1_1_features {}) }: scoped_tls_0_1_1_ {
    features = mkFeatures (features.scoped_tls_0_1_1 or {});
  };
  scoped_tls_0_1_1_features = f: updateFeatures f (rec {
    scoped_tls_0_1_1.default = (f.scoped_tls_0_1_1.default or true);
  }) [];
  scopeguard_0_3_3 = { features?(scopeguard_0_3_3_features {}) }: scopeguard_0_3_3_ {
    features = mkFeatures (features.scopeguard_0_3_3 or {});
  };
  scopeguard_0_3_3_features = f: updateFeatures f (rec {
    scopeguard_0_3_3.default = (f.scopeguard_0_3_3.default or true);
    scopeguard_0_3_3.use_std =
      (f.scopeguard_0_3_3.use_std or false) ||
      (f.scopeguard_0_3_3.default or false) ||
      (scopeguard_0_3_3.default or false);
  }) [];
  security_framework_0_1_16 = { features?(security_framework_0_1_16_features {}) }: security_framework_0_1_16_ {
    dependencies = mapFeatures features ([ core_foundation_0_2_3 core_foundation_sys_0_2_3 libc_0_2_40 security_framework_sys_0_1_16 ]);
    features = mkFeatures (features.security_framework_0_1_16 or {});
  };
  security_framework_0_1_16_features = f: updateFeatures f (rec {
    core_foundation_0_2_3.default = true;
    core_foundation_sys_0_2_3.default = true;
    libc_0_2_40.default = true;
    security_framework_0_1_16.OSX_10_10 =
      (f.security_framework_0_1_16.OSX_10_10 or false) ||
      (f.security_framework_0_1_16.OSX_10_11 or false) ||
      (security_framework_0_1_16.OSX_10_11 or false);
    security_framework_0_1_16.OSX_10_11 =
      (f.security_framework_0_1_16.OSX_10_11 or false) ||
      (f.security_framework_0_1_16.OSX_10_12 or false) ||
      (security_framework_0_1_16.OSX_10_12 or false);
    security_framework_0_1_16.OSX_10_8 =
      (f.security_framework_0_1_16.OSX_10_8 or false) ||
      (f.security_framework_0_1_16.OSX_10_9 or false) ||
      (security_framework_0_1_16.OSX_10_9 or false);
    security_framework_0_1_16.OSX_10_9 =
      (f.security_framework_0_1_16.OSX_10_9 or false) ||
      (f.security_framework_0_1_16.OSX_10_10 or false) ||
      (security_framework_0_1_16.OSX_10_10 or false);
    security_framework_0_1_16.default = (f.security_framework_0_1_16.default or true);
    security_framework_sys_0_1_16.OSX_10_10 =
      (f.security_framework_sys_0_1_16.OSX_10_10 or false) ||
      (security_framework_0_1_16.OSX_10_10 or false) ||
      (f.security_framework_0_1_16.OSX_10_10 or false);
    security_framework_sys_0_1_16.OSX_10_11 =
      (f.security_framework_sys_0_1_16.OSX_10_11 or false) ||
      (security_framework_0_1_16.OSX_10_11 or false) ||
      (f.security_framework_0_1_16.OSX_10_11 or false) ||
      (security_framework_0_1_16.OSX_10_12 or false) ||
      (f.security_framework_0_1_16.OSX_10_12 or false);
    security_framework_sys_0_1_16.OSX_10_8 =
      (f.security_framework_sys_0_1_16.OSX_10_8 or false) ||
      (security_framework_0_1_16.OSX_10_8 or false) ||
      (f.security_framework_0_1_16.OSX_10_8 or false);
    security_framework_sys_0_1_16.OSX_10_9 =
      (f.security_framework_sys_0_1_16.OSX_10_9 or false) ||
      (security_framework_0_1_16.OSX_10_9 or false) ||
      (f.security_framework_0_1_16.OSX_10_9 or false);
    security_framework_sys_0_1_16.default = true;
  }) [ core_foundation_0_2_3_features core_foundation_sys_0_2_3_features libc_0_2_40_features security_framework_sys_0_1_16_features ];
  security_framework_sys_0_1_16 = { features?(security_framework_sys_0_1_16_features {}) }: security_framework_sys_0_1_16_ {
    dependencies = mapFeatures features ([ core_foundation_sys_0_2_3 libc_0_2_40 ]);
    features = mkFeatures (features.security_framework_sys_0_1_16 or {});
  };
  security_framework_sys_0_1_16_features = f: updateFeatures f (rec {
    core_foundation_sys_0_2_3.default = true;
    libc_0_2_40.default = true;
    security_framework_sys_0_1_16.OSX_10_10 =
      (f.security_framework_sys_0_1_16.OSX_10_10 or false) ||
      (f.security_framework_sys_0_1_16.OSX_10_11 or false) ||
      (security_framework_sys_0_1_16.OSX_10_11 or false);
    security_framework_sys_0_1_16.OSX_10_11 =
      (f.security_framework_sys_0_1_16.OSX_10_11 or false) ||
      (f.security_framework_sys_0_1_16.OSX_10_12 or false) ||
      (security_framework_sys_0_1_16.OSX_10_12 or false);
    security_framework_sys_0_1_16.OSX_10_8 =
      (f.security_framework_sys_0_1_16.OSX_10_8 or false) ||
      (f.security_framework_sys_0_1_16.OSX_10_9 or false) ||
      (security_framework_sys_0_1_16.OSX_10_9 or false);
    security_framework_sys_0_1_16.OSX_10_9 =
      (f.security_framework_sys_0_1_16.OSX_10_9 or false) ||
      (f.security_framework_sys_0_1_16.OSX_10_10 or false) ||
      (security_framework_sys_0_1_16.OSX_10_10 or false);
    security_framework_sys_0_1_16.default = (f.security_framework_sys_0_1_16.default or true);
  }) [ core_foundation_sys_0_2_3_features libc_0_2_40_features ];
  serde_1_0_41 = { features?(serde_1_0_41_features {}) }: serde_1_0_41_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.serde_1_0_41 or {});
  };
  serde_1_0_41_features = f: updateFeatures f (rec {
    serde_1_0_41.default = (f.serde_1_0_41.default or true);
    serde_1_0_41.serde_derive =
      (f.serde_1_0_41.serde_derive or false) ||
      (f.serde_1_0_41.derive or false) ||
      (serde_1_0_41.derive or false) ||
      (f.serde_1_0_41.playground or false) ||
      (serde_1_0_41.playground or false);
    serde_1_0_41.std =
      (f.serde_1_0_41.std or false) ||
      (f.serde_1_0_41.default or false) ||
      (serde_1_0_41.default or false);
    serde_1_0_41.unstable =
      (f.serde_1_0_41.unstable or false) ||
      (f.serde_1_0_41.alloc or false) ||
      (serde_1_0_41.alloc or false);
  }) [];
  serde_derive_1_0_41 = { features?(serde_derive_1_0_41_features {}) }: serde_derive_1_0_41_ {
    dependencies = mapFeatures features ([ proc_macro2_0_3_6 quote_0_5_1 serde_derive_internals_0_23_1 syn_0_13_1 ]);
    features = mkFeatures (features.serde_derive_1_0_41 or {});
  };
  serde_derive_1_0_41_features = f: updateFeatures f (rec {
    proc_macro2_0_3_6.default = true;
    quote_0_5_1.default = true;
    serde_derive_1_0_41.default = (f.serde_derive_1_0_41.default or true);
    serde_derive_internals_0_23_1.default = (f.serde_derive_internals_0_23_1.default or false);
    syn_0_13_1.default = true;
    syn_0_13_1.visit = true;
  }) [ proc_macro2_0_3_6_features quote_0_5_1_features serde_derive_internals_0_23_1_features syn_0_13_1_features ];
  serde_derive_internals_0_23_1 = { features?(serde_derive_internals_0_23_1_features {}) }: serde_derive_internals_0_23_1_ {
    dependencies = mapFeatures features ([ proc_macro2_0_3_6 syn_0_13_1 ]);
  };
  serde_derive_internals_0_23_1_features = f: updateFeatures f (rec {
    proc_macro2_0_3_6.default = true;
    serde_derive_internals_0_23_1.default = (f.serde_derive_internals_0_23_1.default or true);
    syn_0_13_1.clone-impls = true;
    syn_0_13_1.default = (f.syn_0_13_1.default or false);
    syn_0_13_1.derive = true;
    syn_0_13_1.parsing = true;
  }) [ proc_macro2_0_3_6_features syn_0_13_1_features ];
  serde_json_1_0_15 = { features?(serde_json_1_0_15_features {}) }: serde_json_1_0_15_ {
    dependencies = mapFeatures features ([ dtoa_0_4_2 itoa_0_4_1 num_traits_0_2_2 serde_1_0_41 ]);
    features = mkFeatures (features.serde_json_1_0_15 or {});
  };
  serde_json_1_0_15_features = f: updateFeatures f (rec {
    dtoa_0_4_2.default = true;
    itoa_0_4_1.default = true;
    num_traits_0_2_2.default = (f.num_traits_0_2_2.default or false);
    serde_1_0_41.default = true;
    serde_json_1_0_15.default = (f.serde_json_1_0_15.default or true);
    serde_json_1_0_15.linked-hash-map =
      (f.serde_json_1_0_15.linked-hash-map or false) ||
      (f.serde_json_1_0_15.preserve_order or false) ||
      (serde_json_1_0_15.preserve_order or false);
  }) [ dtoa_0_4_2_features itoa_0_4_1_features num_traits_0_2_2_features serde_1_0_41_features ];
  serde_urlencoded_0_5_1 = { features?(serde_urlencoded_0_5_1_features {}) }: serde_urlencoded_0_5_1_ {
    dependencies = mapFeatures features ([ dtoa_0_4_2 itoa_0_3_4 serde_1_0_41 url_1_7_0 ]);
  };
  serde_urlencoded_0_5_1_features = f: updateFeatures f (rec {
    dtoa_0_4_2.default = true;
    itoa_0_3_4.default = true;
    serde_1_0_41.default = true;
    serde_urlencoded_0_5_1.default = (f.serde_urlencoded_0_5_1.default or true);
    url_1_7_0.default = true;
  }) [ dtoa_0_4_2_features itoa_0_3_4_features serde_1_0_41_features url_1_7_0_features ];
  shell_escape_0_1_4 = { features?(shell_escape_0_1_4_features {}) }: shell_escape_0_1_4_ {};
  shell_escape_0_1_4_features = f: updateFeatures f (rec {
    shell_escape_0_1_4.default = (f.shell_escape_0_1_4.default or true);
  }) [];
  siphasher_0_2_2 = { features?(siphasher_0_2_2_features {}) }: siphasher_0_2_2_ {
    dependencies = mapFeatures features ([]);
  };
  siphasher_0_2_2_features = f: updateFeatures f (rec {
    siphasher_0_2_2.default = (f.siphasher_0_2_2.default or true);
  }) [];
  slab_0_3_0 = { features?(slab_0_3_0_features {}) }: slab_0_3_0_ {};
  slab_0_3_0_features = f: updateFeatures f (rec {
    slab_0_3_0.default = (f.slab_0_3_0.default or true);
  }) [];
  slab_0_4_0 = { features?(slab_0_4_0_features {}) }: slab_0_4_0_ {};
  slab_0_4_0_features = f: updateFeatures f (rec {
    slab_0_4_0.default = (f.slab_0_4_0.default or true);
  }) [];
  smallvec_0_2_1 = { features?(smallvec_0_2_1_features {}) }: smallvec_0_2_1_ {};
  smallvec_0_2_1_features = f: updateFeatures f (rec {
    smallvec_0_2_1.default = (f.smallvec_0_2_1.default or true);
  }) [];
  strsim_0_7_0 = { features?(strsim_0_7_0_features {}) }: strsim_0_7_0_ {};
  strsim_0_7_0_features = f: updateFeatures f (rec {
    strsim_0_7_0.default = (f.strsim_0_7_0.default or true);
  }) [];
  syn_0_13_1 = { features?(syn_0_13_1_features {}) }: syn_0_13_1_ {
    dependencies = mapFeatures features ([ proc_macro2_0_3_6 unicode_xid_0_1_0 ]
      ++ (if features.syn_0_13_1.quote or false then [ quote_0_5_1 ] else []));
    features = mkFeatures (features.syn_0_13_1 or {});
  };
  syn_0_13_1_features = f: updateFeatures f (rec {
    proc_macro2_0_3_6.default = (f.proc_macro2_0_3_6.default or false);
    proc_macro2_0_3_6.proc-macro =
      (f.proc_macro2_0_3_6.proc-macro or false) ||
      (syn_0_13_1.proc-macro or false) ||
      (f.syn_0_13_1.proc-macro or false);
    quote_0_5_1.default = (f.quote_0_5_1.default or false);
    quote_0_5_1.proc-macro =
      (f.quote_0_5_1.proc-macro or false) ||
      (syn_0_13_1.proc-macro or false) ||
      (f.syn_0_13_1.proc-macro or false);
    syn_0_13_1.clone-impls =
      (f.syn_0_13_1.clone-impls or false) ||
      (f.syn_0_13_1.default or false) ||
      (syn_0_13_1.default or false);
    syn_0_13_1.default = (f.syn_0_13_1.default or true);
    syn_0_13_1.derive =
      (f.syn_0_13_1.derive or false) ||
      (f.syn_0_13_1.default or false) ||
      (syn_0_13_1.default or false);
    syn_0_13_1.parsing =
      (f.syn_0_13_1.parsing or false) ||
      (f.syn_0_13_1.default or false) ||
      (syn_0_13_1.default or false);
    syn_0_13_1.printing =
      (f.syn_0_13_1.printing or false) ||
      (f.syn_0_13_1.default or false) ||
      (syn_0_13_1.default or false);
    syn_0_13_1.proc-macro =
      (f.syn_0_13_1.proc-macro or false) ||
      (f.syn_0_13_1.default or false) ||
      (syn_0_13_1.default or false);
    syn_0_13_1.quote =
      (f.syn_0_13_1.quote or false) ||
      (f.syn_0_13_1.printing or false) ||
      (syn_0_13_1.printing or false);
    unicode_xid_0_1_0.default = true;
  }) [ proc_macro2_0_3_6_features quote_0_5_1_features unicode_xid_0_1_0_features ];
  take_0_1_0 = { features?(take_0_1_0_features {}) }: take_0_1_0_ {};
  take_0_1_0_features = f: updateFeatures f (rec {
    take_0_1_0.default = (f.take_0_1_0.default or true);
  }) [];
  tar_0_4_15 = { features?(tar_0_4_15_features {}) }: tar_0_4_15_ {
    dependencies = mapFeatures features ([ filetime_0_2_0 ])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_37 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_40 ]
      ++ (if features.tar_0_4_15.xattr or false then [ xattr_0_2_1 ] else [])) else []);
    features = mkFeatures (features.tar_0_4_15 or {});
  };
  tar_0_4_15_features = f: updateFeatures f (rec {
    filetime_0_2_0.default = true;
    libc_0_2_40.default = true;
    redox_syscall_0_1_37.default = true;
    tar_0_4_15.default = (f.tar_0_4_15.default or true);
    tar_0_4_15.xattr =
      (f.tar_0_4_15.xattr or false) ||
      (f.tar_0_4_15.default or false) ||
      (tar_0_4_15.default or false);
    xattr_0_2_1.default = true;
  }) [ filetime_0_2_0_features redox_syscall_0_1_37_features libc_0_2_40_features xattr_0_2_1_features ];
  tempdir_0_3_7 = { features?(tempdir_0_3_7_features {}) }: tempdir_0_3_7_ {
    dependencies = mapFeatures features ([ rand_0_4_2 remove_dir_all_0_5_1 ]);
  };
  tempdir_0_3_7_features = f: updateFeatures f (rec {
    rand_0_4_2.default = true;
    remove_dir_all_0_5_1.default = true;
    tempdir_0_3_7.default = (f.tempdir_0_3_7.default or true);
  }) [ rand_0_4_2_features remove_dir_all_0_5_1_features ];
  term_0_5_1 = { features?(term_0_5_1_features {}) }: term_0_5_1_ {
    dependencies = mapFeatures features ([ byteorder_1_2_2 ])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  term_0_5_1_features = f: updateFeatures f (rec {
    byteorder_1_2_2.default = true;
    term_0_5_1.default = (f.term_0_5_1.default or true);
    winapi_0_3_4.default = true;
    winapi_0_3_4.fileapi = true;
    winapi_0_3_4.handleapi = true;
    winapi_0_3_4.wincon = true;
  }) [ byteorder_1_2_2_features winapi_0_3_4_features ];
  termcolor_0_3_6 = { features?(termcolor_0_3_6_features {}) }: termcolor_0_3_6_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ wincolor_0_1_6 ]) else []);
  };
  termcolor_0_3_6_features = f: updateFeatures f (rec {
    termcolor_0_3_6.default = (f.termcolor_0_3_6.default or true);
    wincolor_0_1_6.default = true;
  }) [ wincolor_0_1_6_features ];
  termion_1_5_1 = { features?(termion_1_5_1_features {}) }: termion_1_5_1_ {
    dependencies = (if !(kernel == "redox") then mapFeatures features ([ libc_0_2_40 ]) else [])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_37 redox_termios_0_1_1 ]) else []);
  };
  termion_1_5_1_features = f: updateFeatures f (rec {
    libc_0_2_40.default = true;
    redox_syscall_0_1_37.default = true;
    redox_termios_0_1_1.default = true;
    termion_1_5_1.default = (f.termion_1_5_1.default or true);
  }) [ libc_0_2_40_features redox_syscall_0_1_37_features redox_termios_0_1_1_features ];
  termios_0_2_2 = { features?(termios_0_2_2_features {}) }: termios_0_2_2_ {
    dependencies = mapFeatures features ([ libc_0_2_40 ]);
  };
  termios_0_2_2_features = f: updateFeatures f (rec {
    libc_0_2_40.default = true;
    termios_0_2_2.default = (f.termios_0_2_2.default or true);
  }) [ libc_0_2_40_features ];
  textwrap_0_9_0 = { features?(textwrap_0_9_0_features {}) }: textwrap_0_9_0_ {
    dependencies = mapFeatures features ([ unicode_width_0_1_4 ]);
  };
  textwrap_0_9_0_features = f: updateFeatures f (rec {
    textwrap_0_9_0.default = (f.textwrap_0_9_0.default or true);
    unicode_width_0_1_4.default = true;
  }) [ unicode_width_0_1_4_features ];
  thread_local_0_3_5 = { features?(thread_local_0_3_5_features {}) }: thread_local_0_3_5_ {
    dependencies = mapFeatures features ([ lazy_static_1_0_0 unreachable_1_0_0 ]);
  };
  thread_local_0_3_5_features = f: updateFeatures f (rec {
    lazy_static_1_0_0.default = true;
    thread_local_0_3_5.default = (f.thread_local_0_3_5.default or true);
    unreachable_1_0_0.default = true;
  }) [ lazy_static_1_0_0_features unreachable_1_0_0_features ];
  thrussh_0_19_5 = { features?(thrussh_0_19_5_features {}) }: thrussh_0_19_5_ {
    dependencies = mapFeatures features ([ bitflags_1_0_1 byteorder_1_2_2 cryptovec_0_4_4 env_logger_0_4_3 futures_0_1_21 log_0_3_9 openssl_0_10_6 thrussh_keys_0_9_5 thrussh_libsodium_0_1_3 tokio_core_0_1_17 tokio_io_0_1_6 ]);
  };
  thrussh_0_19_5_features = f: updateFeatures f (rec {
    bitflags_1_0_1.default = true;
    byteorder_1_2_2.default = true;
    cryptovec_0_4_4.default = true;
    env_logger_0_4_3.default = true;
    futures_0_1_21.default = true;
    log_0_3_9.default = true;
    openssl_0_10_6.default = true;
    thrussh_0_19_5.default = (f.thrussh_0_19_5.default or true);
    thrussh_keys_0_9_5.default = true;
    thrussh_libsodium_0_1_3.default = true;
    tokio_core_0_1_17.default = true;
    tokio_io_0_1_6.default = true;
  }) [ bitflags_1_0_1_features byteorder_1_2_2_features cryptovec_0_4_4_features env_logger_0_4_3_features futures_0_1_21_features log_0_3_9_features openssl_0_10_6_features thrussh_keys_0_9_5_features thrussh_libsodium_0_1_3_features tokio_core_0_1_17_features tokio_io_0_1_6_features ];
  thrussh_keys_0_9_5 = { features?(thrussh_keys_0_9_5_features {}) }: thrussh_keys_0_9_5_ {
    dependencies = mapFeatures features ([ base64_0_8_0 bit_vec_0_4_4 byteorder_1_2_2 cryptovec_0_4_4 error_chain_0_11_0 futures_0_1_21 hex_0_3_2 log_0_3_9 num_bigint_0_1_43 num_integer_0_1_36 openssl_0_10_6 serde_1_0_41 serde_derive_1_0_41 thrussh_libsodium_0_1_3 tokio_core_0_1_17 tokio_io_0_1_6 yasna_0_1_3 ]);
  };
  thrussh_keys_0_9_5_features = f: updateFeatures f (rec {
    base64_0_8_0.default = true;
    bit_vec_0_4_4.default = true;
    byteorder_1_2_2.default = true;
    cryptovec_0_4_4.default = true;
    error_chain_0_11_0.default = true;
    futures_0_1_21.default = true;
    hex_0_3_2.default = true;
    log_0_3_9.default = true;
    num_bigint_0_1_43.default = (f.num_bigint_0_1_43.default or false);
    num_integer_0_1_36.default = (f.num_integer_0_1_36.default or false);
    openssl_0_10_6.default = true;
    serde_1_0_41.default = true;
    serde_derive_1_0_41.default = true;
    thrussh_keys_0_9_5.default = (f.thrussh_keys_0_9_5.default or true);
    thrussh_libsodium_0_1_3.default = true;
    tokio_core_0_1_17.default = true;
    tokio_io_0_1_6.default = true;
    yasna_0_1_3.default = true;
  }) [ base64_0_8_0_features bit_vec_0_4_4_features byteorder_1_2_2_features cryptovec_0_4_4_features error_chain_0_11_0_features futures_0_1_21_features hex_0_3_2_features log_0_3_9_features num_bigint_0_1_43_features num_integer_0_1_36_features openssl_0_10_6_features serde_1_0_41_features serde_derive_1_0_41_features thrussh_libsodium_0_1_3_features tokio_core_0_1_17_features tokio_io_0_1_6_features yasna_0_1_3_features ];
  thrussh_libsodium_0_1_3 = { features?(thrussh_libsodium_0_1_3_features {}) }: thrussh_libsodium_0_1_3_ {
    dependencies = mapFeatures features ([ libc_0_2_40 ]);
    buildDependencies = mapFeatures features ([ pkg_config_0_3_9 ]);
  };
  thrussh_libsodium_0_1_3_features = f: updateFeatures f (rec {
    libc_0_2_40.default = true;
    pkg_config_0_3_9.default = true;
    thrussh_libsodium_0_1_3.default = (f.thrussh_libsodium_0_1_3.default or true);
  }) [ libc_0_2_40_features pkg_config_0_3_9_features ];
  time_0_1_39 = { features?(time_0_1_39_features {}) }: time_0_1_39_ {
    dependencies = mapFeatures features ([ libc_0_2_40 ])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_37 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  time_0_1_39_features = f: updateFeatures f (rec {
    libc_0_2_40.default = true;
    redox_syscall_0_1_37.default = true;
    time_0_1_39.default = (f.time_0_1_39.default or true);
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwinbase = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.ntdef = true;
    winapi_0_3_4.profileapi = true;
    winapi_0_3_4.std = true;
    winapi_0_3_4.sysinfoapi = true;
    winapi_0_3_4.timezoneapi = true;
  }) [ libc_0_2_40_features redox_syscall_0_1_37_features winapi_0_3_4_features ];
  tokio_0_1_5 = { features?(tokio_0_1_5_features {}) }: tokio_0_1_5_ {
    dependencies = mapFeatures features ([ futures_0_1_21 mio_0_6_14 tokio_executor_0_1_2 tokio_io_0_1_6 tokio_reactor_0_1_1 tokio_tcp_0_1_0 tokio_threadpool_0_1_2 tokio_timer_0_2_1 tokio_udp_0_1_0 ]);
    features = mkFeatures (features.tokio_0_1_5 or {});
  };
  tokio_0_1_5_features = f: updateFeatures f (rec {
    futures_0_1_21.default = true;
    mio_0_6_14.default = true;
    tokio_0_1_5.default = (f.tokio_0_1_5.default or true);
    tokio_0_1_5.futures2 =
      (f.tokio_0_1_5.futures2 or false) ||
      (f.tokio_0_1_5.unstable-futures or false) ||
      (tokio_0_1_5.unstable-futures or false);
    tokio_executor_0_1_2.default = true;
    tokio_executor_0_1_2.unstable-futures =
      (f.tokio_executor_0_1_2.unstable-futures or false) ||
      (tokio_0_1_5.unstable-futures or false) ||
      (f.tokio_0_1_5.unstable-futures or false);
    tokio_io_0_1_6.default = true;
    tokio_reactor_0_1_1.default = true;
    tokio_reactor_0_1_1.unstable-futures =
      (f.tokio_reactor_0_1_1.unstable-futures or false) ||
      (tokio_0_1_5.unstable-futures or false) ||
      (f.tokio_0_1_5.unstable-futures or false);
    tokio_tcp_0_1_0.default = true;
    tokio_tcp_0_1_0.unstable-futures =
      (f.tokio_tcp_0_1_0.unstable-futures or false) ||
      (tokio_0_1_5.unstable-futures or false) ||
      (f.tokio_0_1_5.unstable-futures or false);
    tokio_threadpool_0_1_2.default = true;
    tokio_threadpool_0_1_2.unstable-futures =
      (f.tokio_threadpool_0_1_2.unstable-futures or false) ||
      (tokio_0_1_5.unstable-futures or false) ||
      (f.tokio_0_1_5.unstable-futures or false);
    tokio_timer_0_2_1.default = true;
    tokio_udp_0_1_0.default = true;
    tokio_udp_0_1_0.unstable-futures =
      (f.tokio_udp_0_1_0.unstable-futures or false) ||
      (tokio_0_1_5.unstable-futures or false) ||
      (f.tokio_0_1_5.unstable-futures or false);
  }) [ futures_0_1_21_features mio_0_6_14_features tokio_executor_0_1_2_features tokio_io_0_1_6_features tokio_reactor_0_1_1_features tokio_tcp_0_1_0_features tokio_threadpool_0_1_2_features tokio_timer_0_2_1_features tokio_udp_0_1_0_features ];
  tokio_core_0_1_17 = { features?(tokio_core_0_1_17_features {}) }: tokio_core_0_1_17_ {
    dependencies = mapFeatures features ([ bytes_0_4_6 futures_0_1_21 iovec_0_1_2 log_0_4_1 mio_0_6_14 scoped_tls_0_1_1 tokio_0_1_5 tokio_executor_0_1_2 tokio_io_0_1_6 tokio_reactor_0_1_1 tokio_timer_0_2_1 ]);
  };
  tokio_core_0_1_17_features = f: updateFeatures f (rec {
    bytes_0_4_6.default = true;
    futures_0_1_21.default = true;
    iovec_0_1_2.default = true;
    log_0_4_1.default = true;
    mio_0_6_14.default = true;
    scoped_tls_0_1_1.default = true;
    tokio_0_1_5.default = true;
    tokio_core_0_1_17.default = (f.tokio_core_0_1_17.default or true);
    tokio_executor_0_1_2.default = true;
    tokio_io_0_1_6.default = true;
    tokio_reactor_0_1_1.default = true;
    tokio_timer_0_2_1.default = true;
  }) [ bytes_0_4_6_features futures_0_1_21_features iovec_0_1_2_features log_0_4_1_features mio_0_6_14_features scoped_tls_0_1_1_features tokio_0_1_5_features tokio_executor_0_1_2_features tokio_io_0_1_6_features tokio_reactor_0_1_1_features tokio_timer_0_2_1_features ];
  tokio_executor_0_1_2 = { features?(tokio_executor_0_1_2_features {}) }: tokio_executor_0_1_2_ {
    dependencies = mapFeatures features ([ futures_0_1_21 ]);
    features = mkFeatures (features.tokio_executor_0_1_2 or {});
  };
  tokio_executor_0_1_2_features = f: updateFeatures f (rec {
    futures_0_1_21.default = true;
    tokio_executor_0_1_2.default = (f.tokio_executor_0_1_2.default or true);
    tokio_executor_0_1_2.futures2 =
      (f.tokio_executor_0_1_2.futures2 or false) ||
      (f.tokio_executor_0_1_2.unstable-futures or false) ||
      (tokio_executor_0_1_2.unstable-futures or false);
  }) [ futures_0_1_21_features ];
  tokio_io_0_1_6 = { features?(tokio_io_0_1_6_features {}) }: tokio_io_0_1_6_ {
    dependencies = mapFeatures features ([ bytes_0_4_6 futures_0_1_21 log_0_4_1 ]);
  };
  tokio_io_0_1_6_features = f: updateFeatures f (rec {
    bytes_0_4_6.default = true;
    futures_0_1_21.default = true;
    log_0_4_1.default = true;
    tokio_io_0_1_6.default = (f.tokio_io_0_1_6.default or true);
  }) [ bytes_0_4_6_features futures_0_1_21_features log_0_4_1_features ];
  tokio_proto_0_1_1 = { features?(tokio_proto_0_1_1_features {}) }: tokio_proto_0_1_1_ {
    dependencies = mapFeatures features ([ futures_0_1_21 log_0_3_9 net2_0_2_32 rand_0_3_22 slab_0_3_0 smallvec_0_2_1 take_0_1_0 tokio_core_0_1_17 tokio_io_0_1_6 tokio_service_0_1_0 ]);
  };
  tokio_proto_0_1_1_features = f: updateFeatures f (rec {
    futures_0_1_21.default = true;
    log_0_3_9.default = true;
    net2_0_2_32.default = true;
    rand_0_3_22.default = true;
    slab_0_3_0.default = true;
    smallvec_0_2_1.default = true;
    take_0_1_0.default = true;
    tokio_core_0_1_17.default = true;
    tokio_io_0_1_6.default = true;
    tokio_proto_0_1_1.default = (f.tokio_proto_0_1_1.default or true);
    tokio_service_0_1_0.default = true;
  }) [ futures_0_1_21_features log_0_3_9_features net2_0_2_32_features rand_0_3_22_features slab_0_3_0_features smallvec_0_2_1_features take_0_1_0_features tokio_core_0_1_17_features tokio_io_0_1_6_features tokio_service_0_1_0_features ];
  tokio_reactor_0_1_1 = { features?(tokio_reactor_0_1_1_features {}) }: tokio_reactor_0_1_1_ {
    dependencies = mapFeatures features ([ futures_0_1_21 log_0_4_1 mio_0_6_14 slab_0_4_0 tokio_executor_0_1_2 tokio_io_0_1_6 ]);
    features = mkFeatures (features.tokio_reactor_0_1_1 or {});
  };
  tokio_reactor_0_1_1_features = f: updateFeatures f (rec {
    futures_0_1_21.default = true;
    log_0_4_1.default = true;
    mio_0_6_14.default = true;
    slab_0_4_0.default = true;
    tokio_executor_0_1_2.default = true;
    tokio_io_0_1_6.default = true;
    tokio_reactor_0_1_1.default = (f.tokio_reactor_0_1_1.default or true);
    tokio_reactor_0_1_1.futures2 =
      (f.tokio_reactor_0_1_1.futures2 or false) ||
      (f.tokio_reactor_0_1_1.unstable-futures or false) ||
      (tokio_reactor_0_1_1.unstable-futures or false);
  }) [ futures_0_1_21_features log_0_4_1_features mio_0_6_14_features slab_0_4_0_features tokio_executor_0_1_2_features tokio_io_0_1_6_features ];
  tokio_service_0_1_0 = { features?(tokio_service_0_1_0_features {}) }: tokio_service_0_1_0_ {
    dependencies = mapFeatures features ([ futures_0_1_21 ]);
  };
  tokio_service_0_1_0_features = f: updateFeatures f (rec {
    futures_0_1_21.default = true;
    tokio_service_0_1_0.default = (f.tokio_service_0_1_0.default or true);
  }) [ futures_0_1_21_features ];
  tokio_tcp_0_1_0 = { features?(tokio_tcp_0_1_0_features {}) }: tokio_tcp_0_1_0_ {
    dependencies = mapFeatures features ([ bytes_0_4_6 futures_0_1_21 iovec_0_1_2 mio_0_6_14 tokio_io_0_1_6 tokio_reactor_0_1_1 ]);
    features = mkFeatures (features.tokio_tcp_0_1_0 or {});
  };
  tokio_tcp_0_1_0_features = f: updateFeatures f (rec {
    bytes_0_4_6.default = true;
    futures_0_1_21.default = true;
    iovec_0_1_2.default = true;
    mio_0_6_14.default = true;
    tokio_io_0_1_6.default = true;
    tokio_reactor_0_1_1.default = true;
    tokio_tcp_0_1_0.default = (f.tokio_tcp_0_1_0.default or true);
    tokio_tcp_0_1_0.futures2 =
      (f.tokio_tcp_0_1_0.futures2 or false) ||
      (f.tokio_tcp_0_1_0.unstable-futures or false) ||
      (tokio_tcp_0_1_0.unstable-futures or false);
  }) [ bytes_0_4_6_features futures_0_1_21_features iovec_0_1_2_features mio_0_6_14_features tokio_io_0_1_6_features tokio_reactor_0_1_1_features ];
  tokio_threadpool_0_1_2 = { features?(tokio_threadpool_0_1_2_features {}) }: tokio_threadpool_0_1_2_ {
    dependencies = mapFeatures features ([ crossbeam_deque_0_3_0 futures_0_1_21 log_0_4_1 num_cpus_1_8_0 rand_0_4_2 tokio_executor_0_1_2 ]);
    features = mkFeatures (features.tokio_threadpool_0_1_2 or {});
  };
  tokio_threadpool_0_1_2_features = f: updateFeatures f (rec {
    crossbeam_deque_0_3_0.default = true;
    futures_0_1_21.default = true;
    log_0_4_1.default = true;
    num_cpus_1_8_0.default = true;
    rand_0_4_2.default = true;
    tokio_executor_0_1_2.default = true;
    tokio_executor_0_1_2.unstable-futures =
      (f.tokio_executor_0_1_2.unstable-futures or false) ||
      (tokio_threadpool_0_1_2.unstable-futures or false) ||
      (f.tokio_threadpool_0_1_2.unstable-futures or false);
    tokio_threadpool_0_1_2.default = (f.tokio_threadpool_0_1_2.default or true);
    tokio_threadpool_0_1_2.futures2 =
      (f.tokio_threadpool_0_1_2.futures2 or false) ||
      (f.tokio_threadpool_0_1_2.unstable-futures or false) ||
      (tokio_threadpool_0_1_2.unstable-futures or false);
  }) [ crossbeam_deque_0_3_0_features futures_0_1_21_features log_0_4_1_features num_cpus_1_8_0_features rand_0_4_2_features tokio_executor_0_1_2_features ];
  tokio_timer_0_2_1 = { features?(tokio_timer_0_2_1_features {}) }: tokio_timer_0_2_1_ {
    dependencies = mapFeatures features ([ futures_0_1_21 tokio_executor_0_1_2 ]);
  };
  tokio_timer_0_2_1_features = f: updateFeatures f (rec {
    futures_0_1_21.default = true;
    tokio_executor_0_1_2.default = true;
    tokio_timer_0_2_1.default = (f.tokio_timer_0_2_1.default or true);
  }) [ futures_0_1_21_features tokio_executor_0_1_2_features ];
  tokio_tls_0_1_4 = { features?(tokio_tls_0_1_4_features {}) }: tokio_tls_0_1_4_ {
    dependencies = mapFeatures features ([ futures_0_1_21 native_tls_0_1_5 tokio_core_0_1_17 tokio_io_0_1_6 ])
      ++ (if !(kernel == "darwin") && !(kernel == "windows") && !(kernel == "ios") then mapFeatures features ([]) else [])
      ++ (if kernel == "darwin" || kernel == "ios" then mapFeatures features ([]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([]) else []);
  };
  tokio_tls_0_1_4_features = f: updateFeatures f (rec {
    futures_0_1_21.default = true;
    native_tls_0_1_5.default = true;
    tokio_core_0_1_17.default = true;
    tokio_io_0_1_6.default = true;
    tokio_tls_0_1_4.default = (f.tokio_tls_0_1_4.default or true);
  }) [ futures_0_1_21_features native_tls_0_1_5_features tokio_core_0_1_17_features tokio_io_0_1_6_features ];
  tokio_udp_0_1_0 = { features?(tokio_udp_0_1_0_features {}) }: tokio_udp_0_1_0_ {
    dependencies = mapFeatures features ([ bytes_0_4_6 futures_0_1_21 log_0_4_1 mio_0_6_14 tokio_io_0_1_6 tokio_reactor_0_1_1 ]);
    features = mkFeatures (features.tokio_udp_0_1_0 or {});
  };
  tokio_udp_0_1_0_features = f: updateFeatures f (rec {
    bytes_0_4_6.default = true;
    futures_0_1_21.default = true;
    log_0_4_1.default = true;
    mio_0_6_14.default = true;
    tokio_io_0_1_6.default = true;
    tokio_reactor_0_1_1.default = true;
    tokio_udp_0_1_0.default = (f.tokio_udp_0_1_0.default or true);
    tokio_udp_0_1_0.futures2 =
      (f.tokio_udp_0_1_0.futures2 or false) ||
      (f.tokio_udp_0_1_0.unstable-futures or false) ||
      (tokio_udp_0_1_0.unstable-futures or false);
  }) [ bytes_0_4_6_features futures_0_1_21_features log_0_4_1_features mio_0_6_14_features tokio_io_0_1_6_features tokio_reactor_0_1_1_features ];
  tokio_uds_0_1_7 = { features?(tokio_uds_0_1_7_features {}) }: tokio_uds_0_1_7_ {
    dependencies = mapFeatures features ([ bytes_0_4_6 futures_0_1_21 iovec_0_1_2 libc_0_2_40 log_0_3_9 mio_0_6_14 mio_uds_0_6_4 tokio_core_0_1_17 tokio_io_0_1_6 ]);
  };
  tokio_uds_0_1_7_features = f: updateFeatures f (rec {
    bytes_0_4_6.default = true;
    futures_0_1_21.default = true;
    iovec_0_1_2.default = true;
    libc_0_2_40.default = true;
    log_0_3_9.default = true;
    mio_0_6_14.default = true;
    mio_uds_0_6_4.default = true;
    tokio_core_0_1_17.default = true;
    tokio_io_0_1_6.default = true;
    tokio_uds_0_1_7.default = (f.tokio_uds_0_1_7.default or true);
  }) [ bytes_0_4_6_features futures_0_1_21_features iovec_0_1_2_features libc_0_2_40_features log_0_3_9_features mio_0_6_14_features mio_uds_0_6_4_features tokio_core_0_1_17_features tokio_io_0_1_6_features ];
  toml_0_4_6 = { features?(toml_0_4_6_features {}) }: toml_0_4_6_ {
    dependencies = mapFeatures features ([ serde_1_0_41 ]);
  };
  toml_0_4_6_features = f: updateFeatures f (rec {
    serde_1_0_41.default = true;
    toml_0_4_6.default = (f.toml_0_4_6.default or true);
  }) [ serde_1_0_41_features ];
  ucd_util_0_1_1 = { features?(ucd_util_0_1_1_features {}) }: ucd_util_0_1_1_ {};
  ucd_util_0_1_1_features = f: updateFeatures f (rec {
    ucd_util_0_1_1.default = (f.ucd_util_0_1_1.default or true);
  }) [];
  unicase_1_4_2 = { features?(unicase_1_4_2_features {}) }: unicase_1_4_2_ {
    dependencies = mapFeatures features ([]);
    buildDependencies = mapFeatures features ([ version_check_0_1_3 ]);
    features = mkFeatures (features.unicase_1_4_2 or {});
  };
  unicase_1_4_2_features = f: updateFeatures f (rec {
    unicase_1_4_2.default = (f.unicase_1_4_2.default or true);
    unicase_1_4_2.heapsize =
      (f.unicase_1_4_2.heapsize or false) ||
      (f.unicase_1_4_2.heap_size or false) ||
      (unicase_1_4_2.heap_size or false);
    unicase_1_4_2.heapsize_plugin =
      (f.unicase_1_4_2.heapsize_plugin or false) ||
      (f.unicase_1_4_2.heap_size or false) ||
      (unicase_1_4_2.heap_size or false);
    version_check_0_1_3.default = true;
  }) [ version_check_0_1_3_features ];
  unicase_2_1_0 = { features?(unicase_2_1_0_features {}) }: unicase_2_1_0_ {
    buildDependencies = mapFeatures features ([ version_check_0_1_3 ]);
    features = mkFeatures (features.unicase_2_1_0 or {});
  };
  unicase_2_1_0_features = f: updateFeatures f (rec {
    unicase_2_1_0.default = (f.unicase_2_1_0.default or true);
    version_check_0_1_3.default = true;
  }) [ version_check_0_1_3_features ];
  unicode_bidi_0_3_4 = { features?(unicode_bidi_0_3_4_features {}) }: unicode_bidi_0_3_4_ {
    dependencies = mapFeatures features ([ matches_0_1_6 ]);
    features = mkFeatures (features.unicode_bidi_0_3_4 or {});
  };
  unicode_bidi_0_3_4_features = f: updateFeatures f (rec {
    matches_0_1_6.default = true;
    unicode_bidi_0_3_4.default = (f.unicode_bidi_0_3_4.default or true);
    unicode_bidi_0_3_4.flame =
      (f.unicode_bidi_0_3_4.flame or false) ||
      (f.unicode_bidi_0_3_4.flame_it or false) ||
      (unicode_bidi_0_3_4.flame_it or false);
    unicode_bidi_0_3_4.flamer =
      (f.unicode_bidi_0_3_4.flamer or false) ||
      (f.unicode_bidi_0_3_4.flame_it or false) ||
      (unicode_bidi_0_3_4.flame_it or false);
    unicode_bidi_0_3_4.serde =
      (f.unicode_bidi_0_3_4.serde or false) ||
      (f.unicode_bidi_0_3_4.with_serde or false) ||
      (unicode_bidi_0_3_4.with_serde or false);
  }) [ matches_0_1_6_features ];
  unicode_normalization_0_1_5 = { features?(unicode_normalization_0_1_5_features {}) }: unicode_normalization_0_1_5_ {};
  unicode_normalization_0_1_5_features = f: updateFeatures f (rec {
    unicode_normalization_0_1_5.default = (f.unicode_normalization_0_1_5.default or true);
  }) [];
  unicode_width_0_1_4 = { features?(unicode_width_0_1_4_features {}) }: unicode_width_0_1_4_ {
    features = mkFeatures (features.unicode_width_0_1_4 or {});
  };
  unicode_width_0_1_4_features = f: updateFeatures f (rec {
    unicode_width_0_1_4.default = (f.unicode_width_0_1_4.default or true);
  }) [];
  unicode_xid_0_1_0 = { features?(unicode_xid_0_1_0_features {}) }: unicode_xid_0_1_0_ {
    features = mkFeatures (features.unicode_xid_0_1_0 or {});
  };
  unicode_xid_0_1_0_features = f: updateFeatures f (rec {
    unicode_xid_0_1_0.default = (f.unicode_xid_0_1_0.default or true);
  }) [];
  unreachable_1_0_0 = { features?(unreachable_1_0_0_features {}) }: unreachable_1_0_0_ {
    dependencies = mapFeatures features ([ void_1_0_2 ]);
  };
  unreachable_1_0_0_features = f: updateFeatures f (rec {
    unreachable_1_0_0.default = (f.unreachable_1_0_0.default or true);
    void_1_0_2.default = (f.void_1_0_2.default or false);
  }) [ void_1_0_2_features ];
  url_1_7_0 = { features?(url_1_7_0_features {}) }: url_1_7_0_ {
    dependencies = mapFeatures features ([ idna_0_1_4 matches_0_1_6 percent_encoding_1_0_1 ]);
    features = mkFeatures (features.url_1_7_0 or {});
  };
  url_1_7_0_features = f: updateFeatures f (rec {
    idna_0_1_4.default = true;
    matches_0_1_6.default = true;
    percent_encoding_1_0_1.default = true;
    url_1_7_0.default = (f.url_1_7_0.default or true);
    url_1_7_0.encoding =
      (f.url_1_7_0.encoding or false) ||
      (f.url_1_7_0.query_encoding or false) ||
      (url_1_7_0.query_encoding or false);
    url_1_7_0.heapsize =
      (f.url_1_7_0.heapsize or false) ||
      (f.url_1_7_0.heap_size or false) ||
      (url_1_7_0.heap_size or false);
  }) [ idna_0_1_4_features matches_0_1_6_features percent_encoding_1_0_1_features ];
  username_0_2_0 = { features?(username_0_2_0_features {}) }: username_0_2_0_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ advapi32_sys_0_2_0 winapi_0_2_8 ]) else []);
  };
  username_0_2_0_features = f: updateFeatures f (rec {
    advapi32_sys_0_2_0.default = true;
    username_0_2_0.default = (f.username_0_2_0.default or true);
    winapi_0_2_8.default = true;
  }) [ advapi32_sys_0_2_0_features winapi_0_2_8_features ];
  utf8_ranges_1_0_0 = { features?(utf8_ranges_1_0_0_features {}) }: utf8_ranges_1_0_0_ {};
  utf8_ranges_1_0_0_features = f: updateFeatures f (rec {
    utf8_ranges_1_0_0.default = (f.utf8_ranges_1_0_0.default or true);
  }) [];
  utf8parse_0_1_0 = { features?(utf8parse_0_1_0_features {}) }: utf8parse_0_1_0_ {};
  utf8parse_0_1_0_features = f: updateFeatures f (rec {
    utf8parse_0_1_0.default = (f.utf8parse_0_1_0.default or true);
  }) [];
  uuid_0_5_1 = { features?(uuid_0_5_1_features {}) }: uuid_0_5_1_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.uuid_0_5_1.rand or false then [ rand_0_3_22 ] else []));
    features = mkFeatures (features.uuid_0_5_1 or {});
  };
  uuid_0_5_1_features = f: updateFeatures f (rec {
    rand_0_3_22.default = true;
    uuid_0_5_1.default = (f.uuid_0_5_1.default or true);
    uuid_0_5_1.md5 =
      (f.uuid_0_5_1.md5 or false) ||
      (f.uuid_0_5_1.v3 or false) ||
      (uuid_0_5_1.v3 or false);
    uuid_0_5_1.rand =
      (f.uuid_0_5_1.rand or false) ||
      (f.uuid_0_5_1.v1 or false) ||
      (uuid_0_5_1.v1 or false) ||
      (f.uuid_0_5_1.v4 or false) ||
      (uuid_0_5_1.v4 or false);
    uuid_0_5_1.sha1 =
      (f.uuid_0_5_1.sha1 or false) ||
      (f.uuid_0_5_1.v5 or false) ||
      (uuid_0_5_1.v5 or false);
  }) [ rand_0_3_22_features ];
  vcpkg_0_2_3 = { features?(vcpkg_0_2_3_features {}) }: vcpkg_0_2_3_ {};
  vcpkg_0_2_3_features = f: updateFeatures f (rec {
    vcpkg_0_2_3.default = (f.vcpkg_0_2_3.default or true);
  }) [];
  vec_map_0_8_0 = { features?(vec_map_0_8_0_features {}) }: vec_map_0_8_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.vec_map_0_8_0 or {});
  };
  vec_map_0_8_0_features = f: updateFeatures f (rec {
    vec_map_0_8_0.default = (f.vec_map_0_8_0.default or true);
    vec_map_0_8_0.serde =
      (f.vec_map_0_8_0.serde or false) ||
      (f.vec_map_0_8_0.eders or false) ||
      (vec_map_0_8_0.eders or false);
    vec_map_0_8_0.serde_derive =
      (f.vec_map_0_8_0.serde_derive or false) ||
      (f.vec_map_0_8_0.eders or false) ||
      (vec_map_0_8_0.eders or false);
  }) [];
  version_check_0_1_3 = { features?(version_check_0_1_3_features {}) }: version_check_0_1_3_ {};
  version_check_0_1_3_features = f: updateFeatures f (rec {
    version_check_0_1_3.default = (f.version_check_0_1_3.default or true);
  }) [];
  void_1_0_2 = { features?(void_1_0_2_features {}) }: void_1_0_2_ {
    features = mkFeatures (features.void_1_0_2 or {});
  };
  void_1_0_2_features = f: updateFeatures f (rec {
    void_1_0_2.default = (f.void_1_0_2.default or true);
    void_1_0_2.std =
      (f.void_1_0_2.std or false) ||
      (f.void_1_0_2.default or false) ||
      (void_1_0_2.default or false);
  }) [];
  walkdir_2_1_4 = { features?(walkdir_2_1_4_features {}) }: walkdir_2_1_4_ {
    dependencies = mapFeatures features ([ same_file_1_0_2 ])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  walkdir_2_1_4_features = f: updateFeatures f (rec {
    same_file_1_0_2.default = true;
    walkdir_2_1_4.default = (f.walkdir_2_1_4.default or true);
    winapi_0_3_4.default = true;
    winapi_0_3_4.std = true;
    winapi_0_3_4.winnt = true;
  }) [ same_file_1_0_2_features winapi_0_3_4_features ];
  winapi_0_2_8 = { features?(winapi_0_2_8_features {}) }: winapi_0_2_8_ {};
  winapi_0_2_8_features = f: updateFeatures f (rec {
    winapi_0_2_8.default = (f.winapi_0_2_8.default or true);
  }) [];
  winapi_0_3_4 = { features?(winapi_0_3_4_features {}) }: winapi_0_3_4_ {
    dependencies = (if kernel == "i686-pc-windows-gnu" then mapFeatures features ([ winapi_i686_pc_windows_gnu_0_4_0 ]) else [])
      ++ (if kernel == "x86_64-pc-windows-gnu" then mapFeatures features ([ winapi_x86_64_pc_windows_gnu_0_4_0 ]) else []);
    features = mkFeatures (features.winapi_0_3_4 or {});
  };
  winapi_0_3_4_features = f: updateFeatures f (rec {
    winapi_0_3_4.default = (f.winapi_0_3_4.default or true);
    winapi_i686_pc_windows_gnu_0_4_0.default = true;
    winapi_x86_64_pc_windows_gnu_0_4_0.default = true;
  }) [ winapi_i686_pc_windows_gnu_0_4_0_features winapi_x86_64_pc_windows_gnu_0_4_0_features ];
  winapi_build_0_1_1 = { features?(winapi_build_0_1_1_features {}) }: winapi_build_0_1_1_ {};
  winapi_build_0_1_1_features = f: updateFeatures f (rec {
    winapi_build_0_1_1.default = (f.winapi_build_0_1_1.default or true);
  }) [];
  winapi_i686_pc_windows_gnu_0_4_0 = { features?(winapi_i686_pc_windows_gnu_0_4_0_features {}) }: winapi_i686_pc_windows_gnu_0_4_0_ {};
  winapi_i686_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_i686_pc_windows_gnu_0_4_0.default = (f.winapi_i686_pc_windows_gnu_0_4_0.default or true);
  }) [];
  winapi_x86_64_pc_windows_gnu_0_4_0 = { features?(winapi_x86_64_pc_windows_gnu_0_4_0_features {}) }: winapi_x86_64_pc_windows_gnu_0_4_0_ {};
  winapi_x86_64_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_x86_64_pc_windows_gnu_0_4_0.default = (f.winapi_x86_64_pc_windows_gnu_0_4_0.default or true);
  }) [];
  wincolor_0_1_6 = { features?(wincolor_0_1_6_features {}) }: wincolor_0_1_6_ {
    dependencies = mapFeatures features ([ winapi_0_3_4 ]);
  };
  wincolor_0_1_6_features = f: updateFeatures f (rec {
    winapi_0_3_4.consoleapi = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.processenv = true;
    winapi_0_3_4.winbase = true;
    winapi_0_3_4.wincon = true;
    wincolor_0_1_6.default = (f.wincolor_0_1_6.default or true);
  }) [ winapi_0_3_4_features ];
  ws2_32_sys_0_2_1 = { features?(ws2_32_sys_0_2_1_features {}) }: ws2_32_sys_0_2_1_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  ws2_32_sys_0_2_1_features = f: updateFeatures f (rec {
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
    ws2_32_sys_0_2_1.default = (f.ws2_32_sys_0_2_1.default or true);
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  xattr_0_2_1 = { features?(xattr_0_2_1_features {}) }: xattr_0_2_1_ {
    dependencies = mapFeatures features ([ libc_0_2_40 ]);
    features = mkFeatures (features.xattr_0_2_1 or {});
  };
  xattr_0_2_1_features = f: updateFeatures f (rec {
    libc_0_2_40.default = true;
    xattr_0_2_1.default = (f.xattr_0_2_1.default or true);
    xattr_0_2_1.unsupported =
      (f.xattr_0_2_1.unsupported or false) ||
      (f.xattr_0_2_1.default or false) ||
      (xattr_0_2_1.default or false);
  }) [ libc_0_2_40_features ];
  yasna_0_1_3 = { features?(yasna_0_1_3_features {}) }: yasna_0_1_3_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.yasna_0_1_3.bit-vec or false then [ bit_vec_0_4_4 ] else [])
      ++ (if features.yasna_0_1_3.num or false then [ num_0_1_42 ] else []));
    features = mkFeatures (features.yasna_0_1_3 or {});
  };
  yasna_0_1_3_features = f: updateFeatures f (rec {
    bit_vec_0_4_4.default = true;
    num_0_1_42.bigint = true;
    num_0_1_42.default = true;
    yasna_0_1_3.bigint =
      (f.yasna_0_1_3.bigint or false) ||
      (f.yasna_0_1_3.default or false) ||
      (yasna_0_1_3.default or false);
    yasna_0_1_3.bit-vec =
      (f.yasna_0_1_3.bit-vec or false) ||
      (f.yasna_0_1_3.bitvec or false) ||
      (yasna_0_1_3.bitvec or false);
    yasna_0_1_3.bitvec =
      (f.yasna_0_1_3.bitvec or false) ||
      (f.yasna_0_1_3.default or false) ||
      (yasna_0_1_3.default or false);
    yasna_0_1_3.default = (f.yasna_0_1_3.default or true);
    yasna_0_1_3.num =
      (f.yasna_0_1_3.num or false) ||
      (f.yasna_0_1_3.bigint or false) ||
      (yasna_0_1_3.bigint or false);
  }) [ bit_vec_0_4_4_features num_0_1_42_features ];
}
