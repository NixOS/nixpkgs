# Disable reordering imports and fix linking for iridium patches

--- "a/chrome/BUILD.gn.orig"
+++ "b/chrome/BUILD.gn"
@@ -37,33 +37,6 @@ if (enable_resource_whitelist_generation) {
   chrome_resource_whitelist = "$target_gen_dir/chrome_resource_whitelist.txt"
 }
 
-if (is_win) {
-  action("reorder_imports") {
-    script = "//build/win/reorder-imports.py"
-
-    # See comment in chrome_dll.gypi in the hardlink_to_output
-    # target for why this cannot be 'initial' like the DLL.
-    inputs = [
-      "$root_out_dir/initialexe/chrome.exe",
-    ]
-    outputs = [
-      "$root_out_dir/chrome.exe",
-      "$root_out_dir/chrome.exe.pdb",
-    ]
-    args = [
-      "-i",
-      rebase_path("$root_out_dir/initialexe", root_build_dir),
-      "-o",
-      rebase_path("$root_out_dir", root_build_dir),
-      "-a",
-      current_cpu,
-    ]
-    deps = [
-      ":chrome_initial",
-    ]
-  }
-}
-
 # This target exists above chrome and it's main components in the dependency
 # tree as a central place to put assert_no_deps annotations. Since this depends
 # on Chrome and the main DLLs it uses, it will transitively assert that those
@@ -98,21 +71,14 @@ if (!is_android && !is_mac) {
     data_deps = [
       ":chrome_initial",
     ]
-    if (is_win) {
-      public_deps += [ ":reorder_imports" ]
-    }
     if (use_aura && (is_win || is_linux)) {
       data_deps += [ "//chrome/app:mojo_manifests" ]
     }
   }
 
   executable("chrome_initial") {
-    if (is_win) {
-      output_name = "initialexe/chrome"
-    } else {
-      output_name = "chrome"
-    }
-
+    output_name = "chrome"
+    
     # Because the sources list varies so significantly per-platform, generally
     # each platform lists its own files rather than relying on filtering or
     # removing unused files.
@@ -323,6 +289,7 @@ if (is_win) {
         "//net:net_resources",
         "//third_party/wtl",
         "//ui/views",
+        "//iridium:trknotify",
       ]
 
       ldflags += [
--- "a/tools/perf/chrome_telemetry_build/BUILD.gn.orig"
+++ "b/tools/perf/chrome_telemetry_build/BUILD.gn"
@@ -89,10 +89,6 @@ group("telemetry_chrome_test") {
     "//components/crash/content/tools/generate_breakpad_symbols.py",
   ]
 
-  if (is_win) {
-    data_deps += [ "//chrome:reorder_imports" ]
-  }
-
   if (is_linux) {
     data_deps += [
       "//tools/xdisplaycheck",
