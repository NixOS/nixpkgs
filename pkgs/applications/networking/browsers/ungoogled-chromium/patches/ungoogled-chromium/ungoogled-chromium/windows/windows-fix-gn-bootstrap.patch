# Remove posix from common sources and switch to implicit machine linking

--- a/tools/gn/bootstrap/bootstrap.py.orig
+++ b/tools/gn/bootstrap/bootstrap.py
@@ -334,8 +334,7 @@ def write_gn_ninja(path, root_gen_dir, options):
         '/GR-',
         '/D_HAS_EXCEPTIONS=0',
     ])
-    # TODO(tim): Support for 64bit builds?
-    ldflags.extend(['/MACHINE:x86', '/DEBUG'])
+    ldflags.extend(['/DEBUG'])
 
   static_libraries = {
       'base': {'sources': [], 'tool': 'cxx', 'include_dirs': []},
@@ -379,7 +378,6 @@ def write_gn_ninja(path, root_gen_dir, options):
       'base/debug/task_annotator.cc',
       'base/environment.cc',
       'base/files/file.cc',
-      'base/files/file_descriptor_watcher_posix.cc',
       'base/files/file_enumerator.cc',
       'base/files/file_path.cc',
       'base/files/file_path_constants.cc',
@@ -523,6 +521,7 @@ def write_gn_ninja(path, root_gen_dir, options):
         'base/files/memory_mapped_file_posix.cc',
         'base/message_loop/message_pump_libevent.cc',
         'base/posix/file_descriptor_shuffle.cc',
+        'base/files/file_descriptor_watcher_posix.cc',
         'base/posix/safe_strerror.cc',
         'base/process/kill_posix.cc',
         'base/process/process_handle_posix.cc',
@@ -687,6 +686,7 @@ def write_gn_ninja(path, root_gen_dir, options):
         'base/timer/hi_res_timer_manager_win.cc',
         'base/trace_event/heap_profiler_allocation_register_win.cc',
         'base/trace_event/trace_event_etw_export_win.cc',
+        'base/trace_event/malloc_dump_provider.cc',
         'base/win/enum_variant.cc',
         'base/win/event_trace_controller.cc',
         'base/win/event_trace_provider.cc',
@@ -712,6 +712,7 @@ def write_gn_ninja(path, root_gen_dir, options):
     ])
 
     libs.extend([
+        'advapi32.lib',
         'kernel32.lib',
         'user32.lib',
         'shell32.lib',
