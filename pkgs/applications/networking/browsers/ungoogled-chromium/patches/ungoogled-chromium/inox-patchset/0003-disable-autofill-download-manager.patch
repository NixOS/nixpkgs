--- a/components/autofill/core/browser/autofill_download_manager.cc
+++ b/components/autofill/core/browser/autofill_download_manager.cc
@@ -85,8 +85,7 @@ std::string RequestTypeToString(Autofill
 }
 
 GURL GetRequestUrl(AutofillDownloadManager::RequestType request_type) {
-  return GURL("https://clients1.google.com/tbproxy/af/" +
-              RequestTypeToString(request_type) + "?client=" + kClientName);
+  return GURL("about:blank");
 }
 
 std::ostream& operator<<(std::ostream& out,
@@ -226,36 +225,6 @@ bool AutofillDownloadManager::StartUploa
 
 bool AutofillDownloadManager::StartRequest(
     const FormRequestData& request_data) {
-  net::URLRequestContextGetter* request_context =
-      driver_->GetURLRequestContext();
-  DCHECK(request_context);
-  GURL request_url = GetRequestUrl(request_data.request_type);
-
-  // Id is ignored for regular chrome, in unit test id's for fake fetcher
-  // factory will be 0, 1, 2, ...
-  std::unique_ptr<net::URLFetcher> owned_fetcher = net::URLFetcher::Create(
-      fetcher_id_for_unittest_++, request_url, net::URLFetcher::POST, this);
-  net::URLFetcher* fetcher = owned_fetcher.get();
-  data_use_measurement::DataUseUserData::AttachToFetcher(
-      fetcher, data_use_measurement::DataUseUserData::AUTOFILL);
-  url_fetchers_[fetcher] =
-      std::make_pair(std::move(owned_fetcher), request_data);
-  fetcher->SetAutomaticallyRetryOn5xx(false);
-  fetcher->SetRequestContext(request_context);
-  fetcher->SetUploadData("text/proto", request_data.payload);
-  fetcher->SetLoadFlags(net::LOAD_DO_NOT_SAVE_COOKIES |
-                        net::LOAD_DO_NOT_SEND_COOKIES);
-  // Add Chrome experiment state to the request headers.
-  net::HttpRequestHeaders headers;
-  // Note: It's OK to pass |is_signed_in| false if it's unknown, as it does
-  // not affect transmission of experiments coming from the variations server.
-  bool is_signed_in = false;
-  variations::AppendVariationHeaders(fetcher->GetOriginalURL(),
-                                     driver_->IsOffTheRecord(), false,
-                                     is_signed_in, &headers);
-  fetcher->SetExtraRequestHeaders(headers.ToString());
-  fetcher->Start();
-
   return true;
 }
 
