--- a/chrome/browser/extensions/component_loader.cc
+++ b/chrome/browser/extensions/component_loader.cc
@@ -420,11 +420,6 @@ void ComponentLoader::AddWebStoreApp() {
   if (!IsNormalSession())
     return;
 #endif
-
-  AddWithNameAndDescription(
-      IDR_WEBSTORE_MANIFEST, base::FilePath(FILE_PATH_LITERAL("web_store")),
-      l10n_util::GetStringUTF8(IDS_WEBSTORE_NAME_STORE),
-      l10n_util::GetStringUTF8(IDS_WEBSTORE_APP_DESCRIPTION));
 }
 
 scoped_refptr<const Extension> ComponentLoader::CreateExtension(
@@ -479,11 +474,6 @@ void ComponentLoader::AddDefaultComponen
     Add(IDR_BOOKMARKS_MANIFEST,
         base::FilePath(FILE_PATH_LITERAL("bookmark_manager")));
   }
-#if BUILDFLAG(ENABLE_PRINTING)
-  // Cloud Print component app. Not required on Chrome OS.
-  Add(IDR_CLOUDPRINT_MANIFEST,
-      base::FilePath(FILE_PATH_LITERAL("cloud_print")));
-#endif  // BUILDFLAG(ENABLE_PRINTING)
 #endif  // defined(OS_CHROMEOS)
 
   if (!skip_session_components) {
@@ -559,13 +549,6 @@ void ComponentLoader::AddDefaultComponen
     AddHotwordAudioVerificationApp();
     AddHotwordHelperExtension();
     AddImageLoaderExtension();
-
-    bool install_feedback = enable_background_extensions_during_testing;
-#if defined(GOOGLE_CHROME_BUILD)
-    install_feedback = true;
-#endif  // defined(GOOGLE_CHROME_BUILD)
-    if (install_feedback)
-      Add(IDR_FEEDBACK_MANIFEST, base::FilePath(FILE_PATH_LITERAL("feedback")));
   }
 
 #if defined(OS_CHROMEOS)
--- a/chrome/browser/extensions/webstore_installer.cc
+++ b/chrome/browser/extensions/webstore_installer.cc
@@ -579,6 +579,7 @@ void WebstoreInstaller::DownloadNextPend
 void WebstoreInstaller::DownloadCrx(
     const std::string& extension_id,
     InstallSource source) {
+#if 0
   download_url_ = GetWebstoreInstallURL(extension_id, source);
   MaybeAppendAuthUserParameter(approval_->authuser, &download_url_);
 
@@ -601,6 +602,7 @@ void WebstoreInstaller::DownloadCrx(
       BrowserThread::FILE, FROM_HERE,
       base::Bind(&GetDownloadFilePath, download_directory, extension_id,
         base::Bind(&WebstoreInstaller::StartDownload, this, extension_id)));
+#endif /* 0 */
 }
 
 // http://crbug.com/165634
@@ -718,6 +720,7 @@ void WebstoreInstaller::UpdateDownloadPr
 }
 
 void WebstoreInstaller::StartCrxInstaller(const DownloadItem& download) {
+#if 0
   DCHECK_CURRENTLY_ON(BrowserThread::UI);
   DCHECK(!crx_installer_.get());
 
@@ -740,6 +743,7 @@ void WebstoreInstaller::StartCrxInstalle
   crx_installer_->set_allow_silent_install(true);
 
   crx_installer_->InstallCrx(download.GetFullPath());
+#endif /* 0 */
 }
 
 void WebstoreInstaller::ReportFailure(const std::string& error,
--- a/chrome/browser/extensions/component_extensions_whitelist/whitelist.cc
+++ b/chrome/browser/extensions/component_extensions_whitelist/whitelist.cc
@@ -30,8 +30,6 @@ namespace extensions {
 
 bool IsComponentExtensionWhitelisted(const std::string& extension_id) {
   const char* const kAllowed[] = {
-    extension_misc::kHotwordSharedModuleId,
-    extension_misc::kInAppPaymentsSupportAppId,
 #if defined(ENABLE_MEDIA_ROUTER)
     extension_misc::kMediaRouterStableExtensionId,
 #endif  // defined(ENABLE_MEDIA_ROUTER)
