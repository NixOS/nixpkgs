diff --git a/src/rtc_base/system/gcd_helpers.m b/src/rtc_base/system/gcd_helpers.m
index fd9a361f..3a63be6d 100644
--- a/src/rtc_base/system/gcd_helpers.m
+++ b/src/rtc_base/system/gcd_helpers.m
@@ -13,9 +13,6 @@
 dispatch_queue_t RTCDispatchQueueCreateWithTarget(const char *label,
                                                   dispatch_queue_attr_t attr,
                                                   dispatch_queue_t target) {
-  if (@available(iOS 10, macOS 10.12, tvOS 10, watchOS 3, *)) {
-    return dispatch_queue_create_with_target(label, attr, target);
-  }
   dispatch_queue_t queue = dispatch_queue_create(label, attr);
   dispatch_set_target_queue(queue, target);
   return queue;
diff --git a/src/sdk/objc/components/video_codec/nalu_rewriter.cc b/src/sdk/objc/components/video_codec/nalu_rewriter.cc
index 61c1e7d6..b19f3f91 100644
--- a/src/sdk/objc/components/video_codec/nalu_rewriter.cc
+++ b/src/sdk/objc/components/video_codec/nalu_rewriter.cc
@@ -245,10 +245,7 @@ bool H265CMSampleBufferToAnnexBBuffer(
   int nalu_header_size = 0;
   size_t param_set_count = 0;
   OSStatus status = noErr;
-  if (__builtin_available(macOS 10.13, *)) {
-    status = CMVideoFormatDescriptionGetHEVCParameterSetAtIndex(
-        description, 0, nullptr, nullptr, &param_set_count, &nalu_header_size);
-  } else {
+  {
     RTC_LOG(LS_ERROR) << "Not supported.";
     return false;
   }
@@ -271,10 +268,7 @@ bool H265CMSampleBufferToAnnexBBuffer(
     size_t param_set_size = 0;
     const uint8_t* param_set = nullptr;
     for (size_t i = 0; i < param_set_count; ++i) {
-      if (__builtin_available(macOS 10.13, *)) {
-        status = CMVideoFormatDescriptionGetHEVCParameterSetAtIndex(
-            description, i, &param_set, &param_set_size, nullptr, nullptr);
-      } else {
+      {
         RTC_LOG(LS_ERROR) << "Not supported.";
         return false;
       }
@@ -514,11 +508,7 @@ CMVideoFormatDescriptionRef CreateH265VideoFormatDescription(
   // Parse the SPS and PPS into a CMVideoFormatDescription.
   CMVideoFormatDescriptionRef description = nullptr;
   OSStatus status = noErr;
-  if (__builtin_available(macOS 10.13, *)) {
-    status = CMVideoFormatDescriptionCreateFromHEVCParameterSets(
-        kCFAllocatorDefault, 3, param_set_ptrs, param_set_sizes, 4, nullptr,
-        &description);
-  } else {
+  {
     RTC_LOG(LS_ERROR) << "Not supported.";
     return nullptr;
   }
