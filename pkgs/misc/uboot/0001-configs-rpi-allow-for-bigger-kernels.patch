commit 78eef95be18ade3587f29e562e00ed173142577f
Author: takov751 <takov751@tutanota.com>
Date:   Tue Feb 28 12:38:06 2023 +0000

    patch kernel size
---
diff --git a/include/configs/rpi.h b/include/configs/rpi.h
index 4da982f735..a187d25e81 100644
--- a/include/configs/rpi.h
+++ b/include/configs/rpi.h
@@ -107,20 +107,20 @@
  * more than ~700M away from the start of the kernel image but this number can
  * be larger OR smaller depending on e.g. the 'vmalloc=xxxM' command line
  * parameter given to the kernel. So reserving memory from low to high
- * satisfies this constraint again. Reserving 1M at 0x02600000-0x02700000 for
- * the DTB leaves rest of the free RAM to the initrd starting at 0x02700000.
+ * satisfies this constraint again. Reserving 1M at 0x04700000-0x04800000 for
+ * the DTB leaves rest of the free RAM to the initrd starting at 0x04800000.
  * Even with the smallest possible CPU-GPU memory split of the CPU getting
- * only 64M, the remaining 25M starting at 0x02700000 should allow quite
+ * only 64M, the remaining 25M starting at 0x04800000 should allow quite
  * large initrds before they start colliding with U-Boot.
  */
 #define ENV_MEM_LAYOUT_SETTINGS \
        "fdt_high=" FDT_HIGH "\0" \
        "initrd_high=" INITRD_HIGH "\0" \
        "kernel_addr_r=0x00080000\0" \
-       "scriptaddr=0x02400000\0" \
-       "pxefile_addr_r=0x02500000\0" \
-       "fdt_addr_r=0x02600000\0" \
-       "ramdisk_addr_r=0x02700000\0"
+       "scriptaddr=0x04500000\0" \
+       "pxefile_addr_r=0x04600000\0" \
+       "fdt_addr_r=0x04700000\0" \
+       "ramdisk_addr_r=0x04800000\0"
 
 #if IS_ENABLED(CONFIG_CMD_MMC)
        #define BOOT_TARGET_MMC(func) \
---