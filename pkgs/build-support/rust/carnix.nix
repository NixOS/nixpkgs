# Generated by carnix 0.6.5: carnix -o carnix.nix Cargo.lock
{ lib, buildPlatform, buildRustCrate, fetchgit }:
let kernel = buildPlatform.parsed.kernel.name;
    abi = buildPlatform.parsed.abi.name;
    include = includedFiles: src: builtins.filterSource (path: type:
      lib.lists.any (f:
        let p = toString (src + ("/" + f)); in
        (path == p) || (type == "directory" && lib.strings.hasPrefix path p)
      ) includedFiles
    ) src;
    updateFeatures = f: up: functions: builtins.deepSeq f (lib.lists.foldl' (features: fun: fun features) (lib.attrsets.recursiveUpdate f up) functions);
    mapFeatures = features: map (fun: fun { features = features; });
    mkFeatures = feat: lib.lists.foldl (features: featureName:
      if feat.${featureName} or false then
        [ featureName ] ++ features
      else
        features
    ) [] (builtins.attrNames feat);
in
rec {
  carnix = f: carnix_0_6_6 { features = carnix_0_6_6_features { carnix_0_6_6 = f; }; };
  aho_corasick_0_6_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "aho-corasick";
    version = "0.6.3";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "1cpqzf6acj8lm06z3f1cg41wn6c2n9l3v49nh0dvimv4055qib6k";
    libName = "aho_corasick";
    crateBin = [ {  name = "aho-corasick-dot"; } ];
    inherit dependencies buildDependencies features;
  };
  ansi_term_0_10_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ansi_term";
    version = "0.10.2";
    authors = [ "ogham@bsago.me" "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>" "Josh Triplett <josh@joshtriplett.org>" ];
    sha256 = "07k0hfmlhv43lihyxb9d81l5mq5zlpqvv30dkfd3knmv2ginasn9";
    inherit dependencies buildDependencies features;
  };
  atty_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "atty";
    version = "0.2.3";
    authors = [ "softprops <d.tangren@gmail.com>" ];
    sha256 = "0zl0cjfgarp5y78nd755lpki5bbkj4hgmi88v265m543yg29i88f";
    inherit dependencies buildDependencies features;
  };
  backtrace_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace";
    version = "0.3.4";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "The Rust Project Developers" ];
    sha256 = "1caba8w3rqd5ghr88ghyz5wgkf81dgx18bj1llkax6qmianc6gk7";
    inherit dependencies buildDependencies features;
  };
  backtrace_sys_0_1_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace-sys";
    version = "0.1.16";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1cn2c8q3dn06crmnk0p62czkngam4l8nf57wy33nz1y5g25pszwy";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  bitflags_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "0.7.0";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1hr72xg5slm0z4pxs2hiy4wcyx3jva70h58b7mid8l0a4c8f7gn5";
    inherit dependencies buildDependencies features;
  };
  bitflags_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "1.0.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0p4b3nr0s5nda2qmm7xdhnvh4lkqk3xd8l9ffmwbvqw137vx7mj1";
    inherit dependencies buildDependencies features;
  };
  carnix_0_6_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "carnix";
    version = "0.6.6";
    authors = [ "pe@pijul.org <pe@pijul.org>" ];
    sha256 = "1ai2r52j6vlrclhb7cvifx3lsg9naiy3jpsrbi3mmfmr6zbi7rdw";
    inherit dependencies buildDependencies features;
  };
  cc_1_0_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cc";
    version = "1.0.3";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "193pwqgh79w6k0k29svyds5nnlrwx44myqyrw605d5jj4yk2zmpr";
    inherit dependencies buildDependencies features;
  };
  cfg_if_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cfg-if";
    version = "0.1.2";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0x06hvrrqy96m97593823vvxcgvjaxckghwyy2jcyc8qc7c6cyhi";
    inherit dependencies buildDependencies features;
  };
  chrono_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "chrono";
    version = "0.4.0";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "0hm53hi6v7b6b1va6vn96lx26wvj8gzi2g51s1j02nlz0jcprw6a";
    inherit dependencies buildDependencies features;
  };
  clap_2_28_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "clap";
    version = "2.28.0";
    authors = [ "Kevin K. <kbknapp@gmail.com>" ];
    sha256 = "0m0rj9xw6mja4gdhqmaldv0q5y5jfsfzbyzfd70mm3857aynq03k";
    inherit dependencies buildDependencies features;
  };
  dbghelp_sys_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dbghelp-sys";
    version = "0.2.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0ylpi3bbiy233m57hnisn1df1v0lbl7nsxn34b0anzsgg440hqpq";
    libName = "dbghelp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  dtoa_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dtoa";
    version = "0.4.2";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1bxsh6fags7nr36vlz07ik2a1rzyipc8x1y30kjk832hf2pzadmw";
    inherit dependencies buildDependencies features;
  };
  either_1_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "either";
    version = "1.4.0";
    authors = [ "bluss" ];
    sha256 = "04kpfd84lvyrkb2z4sljlz2d3d5qczd0sb1yy37fgijq2yx3vb37";
    inherit dependencies buildDependencies features;
  };
  env_logger_0_5_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "env_logger";
    version = "0.5.3";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1i7jyxrwwv3w2h200ynq3fjg1iyyvi76ny215hi6d334vkkw2s2y";
    inherit dependencies buildDependencies features;
  };
  error_chain_0_11_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "error-chain";
    version = "0.11.0";
    authors = [ "Brian Anderson <banderson@mozilla.com>" "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" "Yamakaky <yamakaky@yamaworld.fr>" ];
    sha256 = "19nz17q6dzp0mx2jhh9qbj45gkvvgcl7zq9z2ai5a8ihbisfj6d7";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon";
    version = "0.2.1";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "0yd4rd7ql1vdr349p6vgq2dnwmpylky1kjp8g1zgvp250jxrhddb";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_sys_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon-sys";
    version = "0.2.0";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "1yrqsrjwlhl3di6prxf5xmyd82gyjaysldbka5wwk83z11mpqh4w";
    inherit dependencies buildDependencies features;
  };
  itertools_0_7_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "itertools";
    version = "0.7.3";
    authors = [ "bluss" ];
    sha256 = "128a69cnmgpj38rs6lcwzya773d2vx7f9y7012iycjf9yi2pyckj";
    inherit dependencies buildDependencies features;
  };
  itoa_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "itoa";
    version = "0.3.4";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1nfkzz6vrgj0d9l3yzjkkkqzdgs68y294fjdbl7jq118qi8xc9d9";
    inherit dependencies buildDependencies features;
  };
  kernel32_sys_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "kernel32-sys";
    version = "0.2.2";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lrw1hbinyvr6cp28g60z97w32w8vsk6pahk64pmrv2fmby8srfj";
    libName = "kernel32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  lazy_static_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "0.2.11";
    authors = [ "Marvin LÃ¶bel <loebel.marvin@gmail.com>" ];
    sha256 = "1x6871cvpy5b96yv4c7jvpq316fp5d4609s9py7qk6cd6x9k34vm";
    inherit dependencies buildDependencies features;
  };
  libc_0_2_33_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libc";
    version = "0.2.33";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1l7synziccnvarsq2kk22vps720ih6chmn016bhr2bq54hblbnl1";
    inherit dependencies buildDependencies features;
  };
  libsqlite3_sys_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libsqlite3-sys";
    version = "0.9.0";
    authors = [ "John Gallagher <jgallagher@bignerdranch.com>" ];
    sha256 = "1pnx3i9h85si6cs4nhazfb28hsvk7dn0arnfvpdzpjdnj9z38q57";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  linked_hash_map_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "linked-hash-map";
    version = "0.4.2";
    authors = [ "Stepan Koltsov <stepan.koltsov@gmail.com>" "Andrew Paseltiner <apaseltiner@gmail.com>" ];
    sha256 = "04da208h6jb69f46j37jnvsw2i1wqplglp4d61csqcrhh83avbgl";
    inherit dependencies buildDependencies features;
  };
  log_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "log";
    version = "0.4.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "01vm8yy3wngvyj6qp1x3xpcb4xq7v67yn9l7fsma8kz28mliz90d";
    inherit dependencies buildDependencies features;
  };
  lru_cache_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lru-cache";
    version = "0.1.1";
    authors = [ "Stepan Koltsov <stepan.koltsov@gmail.com>" ];
    sha256 = "1hl6kii1g54sq649gnscv858mmw7a02xj081l4vcgvrswdi2z8fw";
    inherit dependencies buildDependencies features;
  };
  memchr_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memchr";
    version = "1.0.2";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" "bluss" ];
    sha256 = "0dfb8ifl9nrc9kzgd5z91q6qg87sh285q1ih7xgrsglmqfav9lg7";
    inherit dependencies buildDependencies features;
  };
  nom_3_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "nom";
    version = "3.2.1";
    authors = [ "contact@geoffroycouprie.com" ];
    sha256 = "1vcllxrz9hdw6j25kn020ka3psz1vkaqh1hm3yfak2240zrxgi07";
    inherit dependencies buildDependencies features;
  };
  num_0_1_40_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num";
    version = "0.1.40";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0b29c25n9mpf6a921khj7a6y3hz5va4vgwppcd2if975qq1shakg";
    inherit dependencies buildDependencies features;
  };
  num_integer_0_1_35_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-integer";
    version = "0.1.35";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0xybj8isi9b6wc646d5rc043i8l8j6wy0vrl4pn995qms9fxbbcc";
    inherit dependencies buildDependencies features;
  };
  num_iter_0_1_34_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-iter";
    version = "0.1.34";
    authors = [ "The Rust Project Developers" ];
    sha256 = "02cld7x9dzbqbs6sxxzq1i22z3awlcd6ljkgvhkfr9rsnaxphzl9";
    inherit dependencies buildDependencies features;
  };
  num_traits_0_1_40_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-traits";
    version = "0.1.40";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1fr8ghp4i97q3agki54i0hpmqxv3s65i2mqd1pinc7w7arc3fplw";
    inherit dependencies buildDependencies features;
  };
  pkg_config_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "pkg-config";
    version = "0.3.9";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "06k8fxgrsrxj8mjpjcq1n7mn2p1shpxif4zg9y5h09c7vy20s146";
    inherit dependencies buildDependencies features;
  };
  quote_0_3_15_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quote";
    version = "0.3.15";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "09il61jv4kd1360spaj46qwyl21fv1qz18fsv2jra8wdnlgl5jsg";
    inherit dependencies buildDependencies features;
  };
  rand_0_3_18_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.3.18";
    authors = [ "The Rust Project Developers" ];
    sha256 = "15d7c3myn968dzjs0a2pgv58hzdavxnq6swgj032lw2v966ir4xv";
    inherit dependencies buildDependencies features;
  };
  redox_syscall_0_1_32_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_syscall";
    version = "0.1.32";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "1axxj8x6ngh6npkzqc5h216fajkcyrdxdgb7m2f0n5xfclbk47fv";
    libName = "syscall";
    inherit dependencies buildDependencies features;
  };
  redox_termios_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_termios";
    version = "0.1.1";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "04s6yyzjca552hdaqlvqhp3vw0zqbc304md5czyd3axh56iry8wh";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  regex_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex";
    version = "0.2.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1f1zrrynfylg0vcfyfp60bybq4rp5g1yk2k7lc7fyz7mmc7k2qr7";
    inherit dependencies buildDependencies features;
  };
  regex_syntax_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex-syntax";
    version = "0.4.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "01yrsm68lj86ad1whgg1z95c2pfsvv58fz8qjcgw7mlszc0c08ls";
    inherit dependencies buildDependencies features;
  };
  rusqlite_0_13_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rusqlite";
    version = "0.13.0";
    authors = [ "John Gallagher <jgallagher@bignerdranch.com>" ];
    sha256 = "1hj2464ar2y4324sk3jx7m9byhkcp60krrrs1v1i8dlhhlnkb9hc";
    inherit dependencies buildDependencies features;
  };
  rustc_demangle_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc-demangle";
    version = "0.1.5";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "096kkcx9j747700fhxj1s4rlwkj21pqjmvj64psdj6bakb2q13nc";
    inherit dependencies buildDependencies features;
  };
  serde_1_0_21_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde";
    version = "1.0.21";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "10almq7pvx8s4ryiqk8gf7fj5igl0yq6dcjknwc67rkmxd8q50w3";
    inherit dependencies buildDependencies features;
  };
  serde_derive_1_0_21_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_derive";
    version = "1.0.21";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0r20qyimm9scfaz7lc0swnhik9d045zklmbidd0zzpd4b2f3jsqm";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  serde_derive_internals_0_17_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_derive_internals";
    version = "0.17.0";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1g1j3v6pj9wbcz3v3w4smjpwrcdwjicmf6yd5cbai04as9iwhw74";
    inherit dependencies buildDependencies features;
  };
  serde_json_1_0_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_json";
    version = "1.0.6";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1kacyc59splwbg8gr7qs32pp9smgy1khq0ggnv07yxhs7h355vjz";
    inherit dependencies buildDependencies features;
  };
  strsim_0_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "strsim";
    version = "0.6.0";
    authors = [ "Danny Guo <dannyguo91@gmail.com>" ];
    sha256 = "1lz85l6y68hr62lv4baww29yy7g8pg20dlr0lbaswxmmcb0wl7gd";
    inherit dependencies buildDependencies features;
  };
  syn_0_11_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syn";
    version = "0.11.11";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0yw8ng7x1dn5a6ykg0ib49y7r9nhzgpiq2989rqdp7rdz3n85502";
    inherit dependencies buildDependencies features;
  };
  synom_0_11_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "synom";
    version = "0.11.3";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1l6d1s9qjfp6ng2s2z8219igvlv7gyk8gby97sdykqc1r93d8rhc";
    inherit dependencies buildDependencies features;
  };
  tempdir_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tempdir";
    version = "0.3.5";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0rirc5prqppzgd15fm8ayan349lgk2k5iqdkrbwrwrv5pm4znsnz";
    inherit dependencies buildDependencies features;
  };
  termcolor_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termcolor";
    version = "0.3.3";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "1rb853jzvkbwm62373dhls4x4r3r5cvfcsxvqh0i75rhx5j8kwsz";
    inherit dependencies buildDependencies features;
  };
  termion_1_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termion";
    version = "1.5.1";
    authors = [ "ticki <Ticki@users.noreply.github.com>" "gycos <alexandre.bury@gmail.com>" "IGI-111 <igi-111@protonmail.com>" ];
    sha256 = "02gq4vd8iws1f3gjrgrgpajsk2bk43nds5acbbb4s8dvrdvr8nf1";
    inherit dependencies buildDependencies features;
  };
  textwrap_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "textwrap";
    version = "0.9.0";
    authors = [ "Martin Geisler <martin@geisler.net>" ];
    sha256 = "18jg79ndjlwndz01mlbh82kkr2arqm658yn5kwp65l5n1hz8w4yb";
    inherit dependencies buildDependencies features;
  };
  thread_local_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "thread_local";
    version = "0.3.4";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "1y6cwyhhx2nkz4b3dziwhqdvgq830z8wjp32b40pjd8r0hxqv2jr";
    inherit dependencies buildDependencies features;
  };
  time_0_1_38_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "time";
    version = "0.1.38";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1ws283vvz7c6jfiwn53rmc6kybapr4pjaahfxxrz232b0qzw7gcp";
    inherit dependencies buildDependencies features;
  };
  toml_0_4_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "toml";
    version = "0.4.5";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "06zxqhn3y58yzjfaykhcrvlf7p2dnn54kn3g4apmja3cn5b18lkk";
    inherit dependencies buildDependencies features;
  };
  unicode_width_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-width";
    version = "0.1.4";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "1rp7a04icn9y5c0lm74nrd4py0rdl0af8bhdwq7g478n1xifpifl";
    inherit dependencies buildDependencies features;
  };
  unicode_xid_0_0_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-xid";
    version = "0.0.4";
    authors = [ "erick.tryzelaar <erick.tryzelaar@gmail.com>" "kwantam <kwantam@gmail.com>" ];
    sha256 = "1dc8wkkcd3s6534s5aw4lbjn8m67flkkbnajp5bl8408wdg8rh9v";
    inherit dependencies buildDependencies features;
  };
  unreachable_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unreachable";
    version = "1.0.0";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "1am8czbk5wwr25gbp2zr007744fxjshhdqjz9liz7wl4pnv3whcf";
    inherit dependencies buildDependencies features;
  };
  utf8_ranges_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "utf8-ranges";
    version = "1.0.0";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0rzmqprwjv9yp1n0qqgahgm24872x6c0xddfym5pfndy7a36vkn0";
    inherit dependencies buildDependencies features;
  };
  vcpkg_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "vcpkg";
    version = "0.2.2";
    authors = [ "Jim McGrath <jimmc2@gmail.com>" ];
    sha256 = "1fl5j0ksnwrnsrf1b1a9lqbjgnajdipq0030vsbhx81mb7d9478a";
    inherit dependencies buildDependencies features;
  };
  vec_map_0_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "vec_map";
    version = "0.8.0";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Jorge Aparicio <japaricious@gmail.com>" "Alexis Beingessner <a.beingessner@gmail.com>" "Brian Anderson <>" "tbu- <>" "Manish Goregaokar <>" "Aaron Turon <aturon@mozilla.com>" "Adolfo OchagavÃ­a <>" "Niko Matsakis <>" "Steven Fackler <>" "Chase Southwood <csouth3@illinois.edu>" "Eduard Burtescu <>" "Florian Wilkens <>" "FÃ©lix Raimundo <>" "Tibor Benke <>" "Markus Siemens <markus@m-siemens.de>" "Josh Branchaud <jbranchaud@gmail.com>" "Huon Wilson <dbau.pp@gmail.com>" "Corey Farwell <coref@rwell.org>" "Aaron Liblong <>" "Nick Cameron <nrc@ncameron.org>" "Patrick Walton <pcwalton@mimiga.net>" "Felix S Klock II <>" "Andrew Paseltiner <apaseltiner@gmail.com>" "Sean McArthur <sean.monstar@gmail.com>" "Vadim Petrochenkov <>" ];
    sha256 = "07sgxp3cf1a4cxm9n3r27fcvqmld32bl2576mrcahnvm34j11xay";
    inherit dependencies buildDependencies features;
  };
  void_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "void";
    version = "1.0.2";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "0h1dm0dx8dhf56a83k68mijyxigqhizpskwxfdrs1drwv2cdclv3";
    inherit dependencies buildDependencies features;
  };
  winapi_0_2_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.2.8";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0a45b58ywf12vb7gvj6h3j264nydynmzyqz8d8rqxsj6icqv82as";
    inherit dependencies buildDependencies features;
  };
  winapi_build_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-build";
    version = "0.1.1";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lxlpi87rkhxcwp2ykf1ldw3p108hwm24nywf3jfrvmff4rjhqga";
    libName = "build";
    inherit dependencies buildDependencies features;
  };
  wincolor_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "wincolor";
    version = "0.1.4";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0cxv6hadnj5vffb8a73y7055p59n20bpqd524df85cm29dcjl38a";
    inherit dependencies buildDependencies features;
  };
  aho_corasick_0_6_3 = { features?(aho_corasick_0_6_3_features {}) }: aho_corasick_0_6_3_ {
    dependencies = mapFeatures features ([ memchr_1_0_2 ]);
  };
  aho_corasick_0_6_3_features = f: updateFeatures f (rec {
    aho_corasick_0_6_3.default = (f.aho_corasick_0_6_3.default or true);
    memchr_1_0_2.default = true;
  }) [ memchr_1_0_2_features ];
  ansi_term_0_10_2 = { features?(ansi_term_0_10_2_features {}) }: ansi_term_0_10_2_ {};
  ansi_term_0_10_2_features = f: updateFeatures f (rec {
    ansi_term_0_10_2.default = (f.ansi_term_0_10_2.default or true);
  }) [];
  atty_0_2_3 = { features?(atty_0_2_3_features {}) }: atty_0_2_3_ {
    dependencies = (if kernel == "redox" then mapFeatures features ([ termion_1_5_1 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_33 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
  };
  atty_0_2_3_features = f: updateFeatures f (rec {
    atty_0_2_3.default = (f.atty_0_2_3.default or true);
    kernel32_sys_0_2_2.default = true;
    libc_0_2_33.default = (f.libc_0_2_33.default or false);
    termion_1_5_1.default = true;
    winapi_0_2_8.default = true;
  }) [ termion_1_5_1_features libc_0_2_33_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  backtrace_0_3_4 = { features?(backtrace_0_3_4_features {}) }: backtrace_0_3_4_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 rustc_demangle_0_1_5 ])
      ++ (if (kernel == "linux" || kernel == "darwin") && !(kernel == "fuchsia") && !(kernel == "emscripten") && !(kernel == "darwin") && !(kernel == "ios") then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_4.backtrace-sys or false then [ backtrace_sys_0_1_16 ] else [])) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_33 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_4.dbghelp-sys or false then [ dbghelp_sys_0_2_0 ] else [])
      ++ (if features.backtrace_0_3_4.kernel32-sys or false then [ kernel32_sys_0_2_2 ] else [])
      ++ (if features.backtrace_0_3_4.winapi or false then [ winapi_0_2_8 ] else [])) else []);
    features = mkFeatures (features.backtrace_0_3_4 or {});
  };
  backtrace_0_3_4_features = f: updateFeatures f (rec {
    backtrace_0_3_4.addr2line =
      (f.backtrace_0_3_4.addr2line or false) ||
      (f.backtrace_0_3_4.gimli-symbolize or false) ||
      (backtrace_0_3_4.gimli-symbolize or false);
    backtrace_0_3_4.backtrace-sys =
      (f.backtrace_0_3_4.backtrace-sys or false) ||
      (f.backtrace_0_3_4.libbacktrace or false) ||
      (backtrace_0_3_4.libbacktrace or false);
    backtrace_0_3_4.coresymbolication =
      (f.backtrace_0_3_4.coresymbolication or false) ||
      (f.backtrace_0_3_4.default or false) ||
      (backtrace_0_3_4.default or false);
    backtrace_0_3_4.dbghelp =
      (f.backtrace_0_3_4.dbghelp or false) ||
      (f.backtrace_0_3_4.default or false) ||
      (backtrace_0_3_4.default or false);
    backtrace_0_3_4.dbghelp-sys =
      (f.backtrace_0_3_4.dbghelp-sys or false) ||
      (f.backtrace_0_3_4.dbghelp or false) ||
      (backtrace_0_3_4.dbghelp or false);
    backtrace_0_3_4.default = (f.backtrace_0_3_4.default or true);
    backtrace_0_3_4.dladdr =
      (f.backtrace_0_3_4.dladdr or false) ||
      (f.backtrace_0_3_4.default or false) ||
      (backtrace_0_3_4.default or false);
    backtrace_0_3_4.findshlibs =
      (f.backtrace_0_3_4.findshlibs or false) ||
      (f.backtrace_0_3_4.gimli-symbolize or false) ||
      (backtrace_0_3_4.gimli-symbolize or false);
    backtrace_0_3_4.kernel32-sys =
      (f.backtrace_0_3_4.kernel32-sys or false) ||
      (f.backtrace_0_3_4.dbghelp or false) ||
      (backtrace_0_3_4.dbghelp or false);
    backtrace_0_3_4.libbacktrace =
      (f.backtrace_0_3_4.libbacktrace or false) ||
      (f.backtrace_0_3_4.default or false) ||
      (backtrace_0_3_4.default or false);
    backtrace_0_3_4.libunwind =
      (f.backtrace_0_3_4.libunwind or false) ||
      (f.backtrace_0_3_4.default or false) ||
      (backtrace_0_3_4.default or false);
    backtrace_0_3_4.rustc-serialize =
      (f.backtrace_0_3_4.rustc-serialize or false) ||
      (f.backtrace_0_3_4.serialize-rustc or false) ||
      (backtrace_0_3_4.serialize-rustc or false);
    backtrace_0_3_4.serde =
      (f.backtrace_0_3_4.serde or false) ||
      (f.backtrace_0_3_4.serialize-serde or false) ||
      (backtrace_0_3_4.serialize-serde or false);
    backtrace_0_3_4.serde_derive =
      (f.backtrace_0_3_4.serde_derive or false) ||
      (f.backtrace_0_3_4.serialize-serde or false) ||
      (backtrace_0_3_4.serialize-serde or false);
    backtrace_0_3_4.winapi =
      (f.backtrace_0_3_4.winapi or false) ||
      (f.backtrace_0_3_4.dbghelp or false) ||
      (backtrace_0_3_4.dbghelp or false);
    backtrace_sys_0_1_16.default = true;
    cfg_if_0_1_2.default = true;
    dbghelp_sys_0_2_0.default = true;
    kernel32_sys_0_2_2.default = true;
    libc_0_2_33.default = true;
    rustc_demangle_0_1_5.default = true;
    winapi_0_2_8.default = true;
  }) [ cfg_if_0_1_2_features rustc_demangle_0_1_5_features backtrace_sys_0_1_16_features libc_0_2_33_features dbghelp_sys_0_2_0_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  backtrace_sys_0_1_16 = { features?(backtrace_sys_0_1_16_features {}) }: backtrace_sys_0_1_16_ {
    dependencies = mapFeatures features ([ libc_0_2_33 ]);
    buildDependencies = mapFeatures features ([ cc_1_0_3 ]);
  };
  backtrace_sys_0_1_16_features = f: updateFeatures f (rec {
    backtrace_sys_0_1_16.default = (f.backtrace_sys_0_1_16.default or true);
    cc_1_0_3.default = true;
    libc_0_2_33.default = true;
  }) [ libc_0_2_33_features cc_1_0_3_features ];
  bitflags_0_7_0 = { features?(bitflags_0_7_0_features {}) }: bitflags_0_7_0_ {};
  bitflags_0_7_0_features = f: updateFeatures f (rec {
    bitflags_0_7_0.default = (f.bitflags_0_7_0.default or true);
  }) [];
  bitflags_1_0_1 = { features?(bitflags_1_0_1_features {}) }: bitflags_1_0_1_ {
    features = mkFeatures (features.bitflags_1_0_1 or {});
  };
  bitflags_1_0_1_features = f: updateFeatures f (rec {
    bitflags_1_0_1.default = (f.bitflags_1_0_1.default or true);
    bitflags_1_0_1.example_generated =
      (f.bitflags_1_0_1.example_generated or false) ||
      (f.bitflags_1_0_1.default or false) ||
      (bitflags_1_0_1.default or false);
  }) [];
  carnix_0_6_6 = { features?(carnix_0_6_6_features {}) }: carnix_0_6_6_ {
    dependencies = mapFeatures features ([ clap_2_28_0 env_logger_0_5_3 error_chain_0_11_0 itertools_0_7_3 log_0_4_1 nom_3_2_1 regex_0_2_2 rusqlite_0_13_0 serde_1_0_21 serde_derive_1_0_21 serde_json_1_0_6 tempdir_0_3_5 toml_0_4_5 ]);
  };
  carnix_0_6_6_features = f: updateFeatures f (rec {
    carnix_0_6_6.default = (f.carnix_0_6_6.default or true);
    clap_2_28_0.default = true;
    env_logger_0_5_3.default = true;
    error_chain_0_11_0.default = true;
    itertools_0_7_3.default = true;
    log_0_4_1.default = true;
    nom_3_2_1.default = true;
    regex_0_2_2.default = true;
    rusqlite_0_13_0.default = true;
    serde_1_0_21.default = true;
    serde_derive_1_0_21.default = true;
    serde_json_1_0_6.default = true;
    tempdir_0_3_5.default = true;
    toml_0_4_5.default = true;
  }) [ clap_2_28_0_features env_logger_0_5_3_features error_chain_0_11_0_features itertools_0_7_3_features log_0_4_1_features nom_3_2_1_features regex_0_2_2_features rusqlite_0_13_0_features serde_1_0_21_features serde_derive_1_0_21_features serde_json_1_0_6_features tempdir_0_3_5_features toml_0_4_5_features ];
  cc_1_0_3 = { features?(cc_1_0_3_features {}) }: cc_1_0_3_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.cc_1_0_3 or {});
  };
  cc_1_0_3_features = f: updateFeatures f (rec {
    cc_1_0_3.default = (f.cc_1_0_3.default or true);
    cc_1_0_3.rayon =
      (f.cc_1_0_3.rayon or false) ||
      (f.cc_1_0_3.parallel or false) ||
      (cc_1_0_3.parallel or false);
  }) [];
  cfg_if_0_1_2 = { features?(cfg_if_0_1_2_features {}) }: cfg_if_0_1_2_ {};
  cfg_if_0_1_2_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = (f.cfg_if_0_1_2.default or true);
  }) [];
  chrono_0_4_0 = { features?(chrono_0_4_0_features {}) }: chrono_0_4_0_ {
    dependencies = mapFeatures features ([ num_0_1_40 time_0_1_38 ]);
  };
  chrono_0_4_0_features = f: updateFeatures f (rec {
    chrono_0_4_0.default = (f.chrono_0_4_0.default or true);
    num_0_1_40.default = (f.num_0_1_40.default or false);
    time_0_1_38.default = true;
  }) [ num_0_1_40_features time_0_1_38_features ];
  clap_2_28_0 = { features?(clap_2_28_0_features {}) }: clap_2_28_0_ {
    dependencies = mapFeatures features ([ bitflags_1_0_1 textwrap_0_9_0 unicode_width_0_1_4 ]
      ++ (if features.clap_2_28_0.ansi_term or false then [ ansi_term_0_10_2 ] else [])
      ++ (if features.clap_2_28_0.atty or false then [ atty_0_2_3 ] else [])
      ++ (if features.clap_2_28_0.strsim or false then [ strsim_0_6_0 ] else [])
      ++ (if features.clap_2_28_0.vec_map or false then [ vec_map_0_8_0 ] else []));
    features = mkFeatures (features.clap_2_28_0 or {});
  };
  clap_2_28_0_features = f: updateFeatures f (rec {
    ansi_term_0_10_2.default = true;
    atty_0_2_3.default = true;
    bitflags_1_0_1.default = true;
    clap_2_28_0.ansi_term =
      (f.clap_2_28_0.ansi_term or false) ||
      (f.clap_2_28_0.color or false) ||
      (clap_2_28_0.color or false);
    clap_2_28_0.atty =
      (f.clap_2_28_0.atty or false) ||
      (f.clap_2_28_0.color or false) ||
      (clap_2_28_0.color or false);
    clap_2_28_0.clippy =
      (f.clap_2_28_0.clippy or false) ||
      (f.clap_2_28_0.lints or false) ||
      (clap_2_28_0.lints or false);
    clap_2_28_0.color =
      (f.clap_2_28_0.color or false) ||
      (f.clap_2_28_0.default or false) ||
      (clap_2_28_0.default or false);
    clap_2_28_0.default = (f.clap_2_28_0.default or true);
    clap_2_28_0.strsim =
      (f.clap_2_28_0.strsim or false) ||
      (f.clap_2_28_0.suggestions or false) ||
      (clap_2_28_0.suggestions or false);
    clap_2_28_0.suggestions =
      (f.clap_2_28_0.suggestions or false) ||
      (f.clap_2_28_0.default or false) ||
      (clap_2_28_0.default or false);
    clap_2_28_0.term_size =
      (f.clap_2_28_0.term_size or false) ||
      (f.clap_2_28_0.wrap_help or false) ||
      (clap_2_28_0.wrap_help or false);
    clap_2_28_0.vec_map =
      (f.clap_2_28_0.vec_map or false) ||
      (f.clap_2_28_0.default or false) ||
      (clap_2_28_0.default or false);
    clap_2_28_0.yaml =
      (f.clap_2_28_0.yaml or false) ||
      (f.clap_2_28_0.doc or false) ||
      (clap_2_28_0.doc or false);
    clap_2_28_0.yaml-rust =
      (f.clap_2_28_0.yaml-rust or false) ||
      (f.clap_2_28_0.yaml or false) ||
      (clap_2_28_0.yaml or false);
    strsim_0_6_0.default = true;
    textwrap_0_9_0.default = true;
    textwrap_0_9_0.term_size =
      (f.textwrap_0_9_0.term_size or false) ||
      (clap_2_28_0.wrap_help or false) ||
      (f.clap_2_28_0.wrap_help or false);
    unicode_width_0_1_4.default = true;
    vec_map_0_8_0.default = true;
  }) [ ansi_term_0_10_2_features atty_0_2_3_features bitflags_1_0_1_features strsim_0_6_0_features textwrap_0_9_0_features unicode_width_0_1_4_features vec_map_0_8_0_features ];
  dbghelp_sys_0_2_0 = { features?(dbghelp_sys_0_2_0_features {}) }: dbghelp_sys_0_2_0_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  dbghelp_sys_0_2_0_features = f: updateFeatures f (rec {
    dbghelp_sys_0_2_0.default = (f.dbghelp_sys_0_2_0.default or true);
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  dtoa_0_4_2 = { features?(dtoa_0_4_2_features {}) }: dtoa_0_4_2_ {};
  dtoa_0_4_2_features = f: updateFeatures f (rec {
    dtoa_0_4_2.default = (f.dtoa_0_4_2.default or true);
  }) [];
  either_1_4_0 = { features?(either_1_4_0_features {}) }: either_1_4_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.either_1_4_0 or {});
  };
  either_1_4_0_features = f: updateFeatures f (rec {
    either_1_4_0.default = (f.either_1_4_0.default or true);
    either_1_4_0.use_std =
      (f.either_1_4_0.use_std or false) ||
      (f.either_1_4_0.default or false) ||
      (either_1_4_0.default or false);
  }) [];
  env_logger_0_5_3 = { features?(env_logger_0_5_3_features {}) }: env_logger_0_5_3_ {
    dependencies = mapFeatures features ([ atty_0_2_3 chrono_0_4_0 log_0_4_1 termcolor_0_3_3 ]
      ++ (if features.env_logger_0_5_3.regex or false then [ regex_0_2_2 ] else []));
    features = mkFeatures (features.env_logger_0_5_3 or {});
  };
  env_logger_0_5_3_features = f: updateFeatures f (rec {
    atty_0_2_3.default = true;
    chrono_0_4_0.default = true;
    env_logger_0_5_3.default = (f.env_logger_0_5_3.default or true);
    env_logger_0_5_3.regex =
      (f.env_logger_0_5_3.regex or false) ||
      (f.env_logger_0_5_3.default or false) ||
      (env_logger_0_5_3.default or false);
    log_0_4_1.default = true;
    log_0_4_1.std = true;
    regex_0_2_2.default = true;
    termcolor_0_3_3.default = true;
  }) [ atty_0_2_3_features chrono_0_4_0_features log_0_4_1_features regex_0_2_2_features termcolor_0_3_3_features ];
  error_chain_0_11_0 = { features?(error_chain_0_11_0_features {}) }: error_chain_0_11_0_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.error_chain_0_11_0.backtrace or false then [ backtrace_0_3_4 ] else []));
    features = mkFeatures (features.error_chain_0_11_0 or {});
  };
  error_chain_0_11_0_features = f: updateFeatures f (rec {
    backtrace_0_3_4.default = true;
    error_chain_0_11_0.backtrace =
      (f.error_chain_0_11_0.backtrace or false) ||
      (f.error_chain_0_11_0.default or false) ||
      (error_chain_0_11_0.default or false);
    error_chain_0_11_0.default = (f.error_chain_0_11_0.default or true);
    error_chain_0_11_0.example_generated =
      (f.error_chain_0_11_0.example_generated or false) ||
      (f.error_chain_0_11_0.default or false) ||
      (error_chain_0_11_0.default or false);
  }) [ backtrace_0_3_4_features ];
  fuchsia_zircon_0_2_1 = { features?(fuchsia_zircon_0_2_1_features {}) }: fuchsia_zircon_0_2_1_ {
    dependencies = mapFeatures features ([ fuchsia_zircon_sys_0_2_0 ]);
  };
  fuchsia_zircon_0_2_1_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_2_1.default = (f.fuchsia_zircon_0_2_1.default or true);
    fuchsia_zircon_sys_0_2_0.default = true;
  }) [ fuchsia_zircon_sys_0_2_0_features ];
  fuchsia_zircon_sys_0_2_0 = { features?(fuchsia_zircon_sys_0_2_0_features {}) }: fuchsia_zircon_sys_0_2_0_ {
    dependencies = mapFeatures features ([ bitflags_0_7_0 ]);
  };
  fuchsia_zircon_sys_0_2_0_features = f: updateFeatures f (rec {
    bitflags_0_7_0.default = true;
    fuchsia_zircon_sys_0_2_0.default = (f.fuchsia_zircon_sys_0_2_0.default or true);
  }) [ bitflags_0_7_0_features ];
  itertools_0_7_3 = { features?(itertools_0_7_3_features {}) }: itertools_0_7_3_ {
    dependencies = mapFeatures features ([ either_1_4_0 ]);
    features = mkFeatures (features.itertools_0_7_3 or {});
  };
  itertools_0_7_3_features = f: updateFeatures f (rec {
    either_1_4_0.default = (f.either_1_4_0.default or false);
    itertools_0_7_3.default = (f.itertools_0_7_3.default or true);
    itertools_0_7_3.use_std =
      (f.itertools_0_7_3.use_std or false) ||
      (f.itertools_0_7_3.default or false) ||
      (itertools_0_7_3.default or false);
  }) [ either_1_4_0_features ];
  itoa_0_3_4 = { features?(itoa_0_3_4_features {}) }: itoa_0_3_4_ {
    features = mkFeatures (features.itoa_0_3_4 or {});
  };
  itoa_0_3_4_features = f: updateFeatures f (rec {
    itoa_0_3_4.default = (f.itoa_0_3_4.default or true);
  }) [];
  kernel32_sys_0_2_2 = { features?(kernel32_sys_0_2_2_features {}) }: kernel32_sys_0_2_2_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  kernel32_sys_0_2_2_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = (f.kernel32_sys_0_2_2.default or true);
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  lazy_static_0_2_11 = { features?(lazy_static_0_2_11_features {}) }: lazy_static_0_2_11_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazy_static_0_2_11 or {});
  };
  lazy_static_0_2_11_features = f: updateFeatures f (rec {
    lazy_static_0_2_11.compiletest_rs =
      (f.lazy_static_0_2_11.compiletest_rs or false) ||
      (f.lazy_static_0_2_11.compiletest or false) ||
      (lazy_static_0_2_11.compiletest or false);
    lazy_static_0_2_11.default = (f.lazy_static_0_2_11.default or true);
    lazy_static_0_2_11.nightly =
      (f.lazy_static_0_2_11.nightly or false) ||
      (f.lazy_static_0_2_11.spin_no_std or false) ||
      (lazy_static_0_2_11.spin_no_std or false);
    lazy_static_0_2_11.spin =
      (f.lazy_static_0_2_11.spin or false) ||
      (f.lazy_static_0_2_11.spin_no_std or false) ||
      (lazy_static_0_2_11.spin_no_std or false);
  }) [];
  libc_0_2_33 = { features?(libc_0_2_33_features {}) }: libc_0_2_33_ {
    features = mkFeatures (features.libc_0_2_33 or {});
  };
  libc_0_2_33_features = f: updateFeatures f (rec {
    libc_0_2_33.default = (f.libc_0_2_33.default or true);
    libc_0_2_33.use_std =
      (f.libc_0_2_33.use_std or false) ||
      (f.libc_0_2_33.default or false) ||
      (libc_0_2_33.default or false);
  }) [];
  libsqlite3_sys_0_9_0 = { features?(libsqlite3_sys_0_9_0_features {}) }: libsqlite3_sys_0_9_0_ {
    dependencies = (if abi == "msvc" then mapFeatures features ([]) else []);
    buildDependencies = mapFeatures features ([ ]
      ++ (if features.libsqlite3_sys_0_9_0.pkg-config or false then [ pkg_config_0_3_9 ] else []));
    features = mkFeatures (features.libsqlite3_sys_0_9_0 or {});
  };
  libsqlite3_sys_0_9_0_features = f: updateFeatures f (rec {
    libsqlite3_sys_0_9_0.bindgen =
      (f.libsqlite3_sys_0_9_0.bindgen or false) ||
      (f.libsqlite3_sys_0_9_0.buildtime_bindgen or false) ||
      (libsqlite3_sys_0_9_0.buildtime_bindgen or false);
    libsqlite3_sys_0_9_0.cc =
      (f.libsqlite3_sys_0_9_0.cc or false) ||
      (f.libsqlite3_sys_0_9_0.bundled or false) ||
      (libsqlite3_sys_0_9_0.bundled or false);
    libsqlite3_sys_0_9_0.default = (f.libsqlite3_sys_0_9_0.default or true);
    libsqlite3_sys_0_9_0.min_sqlite_version_3_6_8 =
      (f.libsqlite3_sys_0_9_0.min_sqlite_version_3_6_8 or false) ||
      (f.libsqlite3_sys_0_9_0.default or false) ||
      (libsqlite3_sys_0_9_0.default or false);
    libsqlite3_sys_0_9_0.pkg-config =
      (f.libsqlite3_sys_0_9_0.pkg-config or false) ||
      (f.libsqlite3_sys_0_9_0.buildtime_bindgen or false) ||
      (libsqlite3_sys_0_9_0.buildtime_bindgen or false) ||
      (f.libsqlite3_sys_0_9_0.min_sqlite_version_3_6_11 or false) ||
      (libsqlite3_sys_0_9_0.min_sqlite_version_3_6_11 or false) ||
      (f.libsqlite3_sys_0_9_0.min_sqlite_version_3_6_23 or false) ||
      (libsqlite3_sys_0_9_0.min_sqlite_version_3_6_23 or false) ||
      (f.libsqlite3_sys_0_9_0.min_sqlite_version_3_6_8 or false) ||
      (libsqlite3_sys_0_9_0.min_sqlite_version_3_6_8 or false) ||
      (f.libsqlite3_sys_0_9_0.min_sqlite_version_3_7_16 or false) ||
      (libsqlite3_sys_0_9_0.min_sqlite_version_3_7_16 or false) ||
      (f.libsqlite3_sys_0_9_0.min_sqlite_version_3_7_3 or false) ||
      (libsqlite3_sys_0_9_0.min_sqlite_version_3_7_3 or false) ||
      (f.libsqlite3_sys_0_9_0.min_sqlite_version_3_7_4 or false) ||
      (libsqlite3_sys_0_9_0.min_sqlite_version_3_7_4 or false);
    libsqlite3_sys_0_9_0.vcpkg =
      (f.libsqlite3_sys_0_9_0.vcpkg or false) ||
      (f.libsqlite3_sys_0_9_0.buildtime_bindgen or false) ||
      (libsqlite3_sys_0_9_0.buildtime_bindgen or false) ||
      (f.libsqlite3_sys_0_9_0.min_sqlite_version_3_6_11 or false) ||
      (libsqlite3_sys_0_9_0.min_sqlite_version_3_6_11 or false) ||
      (f.libsqlite3_sys_0_9_0.min_sqlite_version_3_6_23 or false) ||
      (libsqlite3_sys_0_9_0.min_sqlite_version_3_6_23 or false) ||
      (f.libsqlite3_sys_0_9_0.min_sqlite_version_3_6_8 or false) ||
      (libsqlite3_sys_0_9_0.min_sqlite_version_3_6_8 or false) ||
      (f.libsqlite3_sys_0_9_0.min_sqlite_version_3_7_16 or false) ||
      (libsqlite3_sys_0_9_0.min_sqlite_version_3_7_16 or false) ||
      (f.libsqlite3_sys_0_9_0.min_sqlite_version_3_7_3 or false) ||
      (libsqlite3_sys_0_9_0.min_sqlite_version_3_7_3 or false) ||
      (f.libsqlite3_sys_0_9_0.min_sqlite_version_3_7_4 or false) ||
      (libsqlite3_sys_0_9_0.min_sqlite_version_3_7_4 or false);
    pkg_config_0_3_9.default = true;
  }) [ pkg_config_0_3_9_features ];
  linked_hash_map_0_4_2 = { features?(linked_hash_map_0_4_2_features {}) }: linked_hash_map_0_4_2_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.linked_hash_map_0_4_2 or {});
  };
  linked_hash_map_0_4_2_features = f: updateFeatures f (rec {
    linked_hash_map_0_4_2.default = (f.linked_hash_map_0_4_2.default or true);
    linked_hash_map_0_4_2.heapsize =
      (f.linked_hash_map_0_4_2.heapsize or false) ||
      (f.linked_hash_map_0_4_2.heapsize_impl or false) ||
      (linked_hash_map_0_4_2.heapsize_impl or false);
    linked_hash_map_0_4_2.serde =
      (f.linked_hash_map_0_4_2.serde or false) ||
      (f.linked_hash_map_0_4_2.serde_impl or false) ||
      (linked_hash_map_0_4_2.serde_impl or false);
    linked_hash_map_0_4_2.serde_test =
      (f.linked_hash_map_0_4_2.serde_test or false) ||
      (f.linked_hash_map_0_4_2.serde_impl or false) ||
      (linked_hash_map_0_4_2.serde_impl or false);
  }) [];
  log_0_4_1 = { features?(log_0_4_1_features {}) }: log_0_4_1_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 ]);
    features = mkFeatures (features.log_0_4_1 or {});
  };
  log_0_4_1_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = true;
    log_0_4_1.default = (f.log_0_4_1.default or true);
  }) [ cfg_if_0_1_2_features ];
  lru_cache_0_1_1 = { features?(lru_cache_0_1_1_features {}) }: lru_cache_0_1_1_ {
    dependencies = mapFeatures features ([ linked_hash_map_0_4_2 ]);
    features = mkFeatures (features.lru_cache_0_1_1 or {});
  };
  lru_cache_0_1_1_features = f: updateFeatures f (rec {
    linked_hash_map_0_4_2.default = true;
    linked_hash_map_0_4_2.heapsize_impl =
      (f.linked_hash_map_0_4_2.heapsize_impl or false) ||
      (lru_cache_0_1_1.heapsize_impl or false) ||
      (f.lru_cache_0_1_1.heapsize_impl or false);
    lru_cache_0_1_1.default = (f.lru_cache_0_1_1.default or true);
    lru_cache_0_1_1.heapsize =
      (f.lru_cache_0_1_1.heapsize or false) ||
      (f.lru_cache_0_1_1.heapsize_impl or false) ||
      (lru_cache_0_1_1.heapsize_impl or false);
  }) [ linked_hash_map_0_4_2_features ];
  memchr_1_0_2 = { features?(memchr_1_0_2_features {}) }: memchr_1_0_2_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.memchr_1_0_2.libc or false then [ libc_0_2_33 ] else []));
    features = mkFeatures (features.memchr_1_0_2 or {});
  };
  memchr_1_0_2_features = f: updateFeatures f (rec {
    libc_0_2_33.default = (f.libc_0_2_33.default or false);
    libc_0_2_33.use_std =
      (f.libc_0_2_33.use_std or false) ||
      (memchr_1_0_2.use_std or false) ||
      (f.memchr_1_0_2.use_std or false);
    memchr_1_0_2.default = (f.memchr_1_0_2.default or true);
    memchr_1_0_2.libc =
      (f.memchr_1_0_2.libc or false) ||
      (f.memchr_1_0_2.default or false) ||
      (memchr_1_0_2.default or false) ||
      (f.memchr_1_0_2.use_std or false) ||
      (memchr_1_0_2.use_std or false);
    memchr_1_0_2.use_std =
      (f.memchr_1_0_2.use_std or false) ||
      (f.memchr_1_0_2.default or false) ||
      (memchr_1_0_2.default or false);
  }) [ libc_0_2_33_features ];
  nom_3_2_1 = { features?(nom_3_2_1_features {}) }: nom_3_2_1_ {
    dependencies = mapFeatures features ([ memchr_1_0_2 ]);
    features = mkFeatures (features.nom_3_2_1 or {});
  };
  nom_3_2_1_features = f: updateFeatures f (rec {
    memchr_1_0_2.default = (f.memchr_1_0_2.default or false);
    memchr_1_0_2.use_std =
      (f.memchr_1_0_2.use_std or false) ||
      (nom_3_2_1.std or false) ||
      (f.nom_3_2_1.std or false);
    nom_3_2_1.compiler_error =
      (f.nom_3_2_1.compiler_error or false) ||
      (f.nom_3_2_1.nightly or false) ||
      (nom_3_2_1.nightly or false);
    nom_3_2_1.default = (f.nom_3_2_1.default or true);
    nom_3_2_1.lazy_static =
      (f.nom_3_2_1.lazy_static or false) ||
      (f.nom_3_2_1.regexp_macros or false) ||
      (nom_3_2_1.regexp_macros or false);
    nom_3_2_1.regex =
      (f.nom_3_2_1.regex or false) ||
      (f.nom_3_2_1.regexp or false) ||
      (nom_3_2_1.regexp or false);
    nom_3_2_1.regexp =
      (f.nom_3_2_1.regexp or false) ||
      (f.nom_3_2_1.regexp_macros or false) ||
      (nom_3_2_1.regexp_macros or false);
    nom_3_2_1.std =
      (f.nom_3_2_1.std or false) ||
      (f.nom_3_2_1.default or false) ||
      (nom_3_2_1.default or false);
    nom_3_2_1.stream =
      (f.nom_3_2_1.stream or false) ||
      (f.nom_3_2_1.default or false) ||
      (nom_3_2_1.default or false);
  }) [ memchr_1_0_2_features ];
  num_0_1_40 = { features?(num_0_1_40_features {}) }: num_0_1_40_ {
    dependencies = mapFeatures features ([ num_integer_0_1_35 num_iter_0_1_34 num_traits_0_1_40 ]);
    features = mkFeatures (features.num_0_1_40 or {});
  };
  num_0_1_40_features = f: updateFeatures f (rec {
    num_0_1_40.bigint =
      (f.num_0_1_40.bigint or false) ||
      (f.num_0_1_40.default or false) ||
      (num_0_1_40.default or false);
    num_0_1_40.complex =
      (f.num_0_1_40.complex or false) ||
      (f.num_0_1_40.default or false) ||
      (num_0_1_40.default or false);
    num_0_1_40.default = (f.num_0_1_40.default or true);
    num_0_1_40.num-bigint =
      (f.num_0_1_40.num-bigint or false) ||
      (f.num_0_1_40.bigint or false) ||
      (num_0_1_40.bigint or false);
    num_0_1_40.num-complex =
      (f.num_0_1_40.num-complex or false) ||
      (f.num_0_1_40.complex or false) ||
      (num_0_1_40.complex or false);
    num_0_1_40.num-rational =
      (f.num_0_1_40.num-rational or false) ||
      (f.num_0_1_40.rational or false) ||
      (num_0_1_40.rational or false);
    num_0_1_40.rational =
      (f.num_0_1_40.rational or false) ||
      (f.num_0_1_40.default or false) ||
      (num_0_1_40.default or false);
    num_0_1_40.rustc-serialize =
      (f.num_0_1_40.rustc-serialize or false) ||
      (f.num_0_1_40.default or false) ||
      (num_0_1_40.default or false);
    num_integer_0_1_35.default = true;
    num_iter_0_1_34.default = true;
    num_traits_0_1_40.default = true;
  }) [ num_integer_0_1_35_features num_iter_0_1_34_features num_traits_0_1_40_features ];
  num_integer_0_1_35 = { features?(num_integer_0_1_35_features {}) }: num_integer_0_1_35_ {
    dependencies = mapFeatures features ([ num_traits_0_1_40 ]);
  };
  num_integer_0_1_35_features = f: updateFeatures f (rec {
    num_integer_0_1_35.default = (f.num_integer_0_1_35.default or true);
    num_traits_0_1_40.default = true;
  }) [ num_traits_0_1_40_features ];
  num_iter_0_1_34 = { features?(num_iter_0_1_34_features {}) }: num_iter_0_1_34_ {
    dependencies = mapFeatures features ([ num_integer_0_1_35 num_traits_0_1_40 ]);
  };
  num_iter_0_1_34_features = f: updateFeatures f (rec {
    num_integer_0_1_35.default = true;
    num_iter_0_1_34.default = (f.num_iter_0_1_34.default or true);
    num_traits_0_1_40.default = true;
  }) [ num_integer_0_1_35_features num_traits_0_1_40_features ];
  num_traits_0_1_40 = { features?(num_traits_0_1_40_features {}) }: num_traits_0_1_40_ {};
  num_traits_0_1_40_features = f: updateFeatures f (rec {
    num_traits_0_1_40.default = (f.num_traits_0_1_40.default or true);
  }) [];
  pkg_config_0_3_9 = { features?(pkg_config_0_3_9_features {}) }: pkg_config_0_3_9_ {};
  pkg_config_0_3_9_features = f: updateFeatures f (rec {
    pkg_config_0_3_9.default = (f.pkg_config_0_3_9.default or true);
  }) [];
  quote_0_3_15 = { features?(quote_0_3_15_features {}) }: quote_0_3_15_ {};
  quote_0_3_15_features = f: updateFeatures f (rec {
    quote_0_3_15.default = (f.quote_0_3_15.default or true);
  }) [];
  rand_0_3_18 = { features?(rand_0_3_18_features {}) }: rand_0_3_18_ {
    dependencies = mapFeatures features ([ libc_0_2_33 ])
      ++ (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_2_1 ]) else []);
    features = mkFeatures (features.rand_0_3_18 or {});
  };
  rand_0_3_18_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_2_1.default = true;
    libc_0_2_33.default = true;
    rand_0_3_18.default = (f.rand_0_3_18.default or true);
    rand_0_3_18.i128_support =
      (f.rand_0_3_18.i128_support or false) ||
      (f.rand_0_3_18.nightly or false) ||
      (rand_0_3_18.nightly or false);
  }) [ libc_0_2_33_features fuchsia_zircon_0_2_1_features ];
  redox_syscall_0_1_32 = { features?(redox_syscall_0_1_32_features {}) }: redox_syscall_0_1_32_ {};
  redox_syscall_0_1_32_features = f: updateFeatures f (rec {
    redox_syscall_0_1_32.default = (f.redox_syscall_0_1_32.default or true);
  }) [];
  redox_termios_0_1_1 = { features?(redox_termios_0_1_1_features {}) }: redox_termios_0_1_1_ {
    dependencies = mapFeatures features ([ redox_syscall_0_1_32 ]);
  };
  redox_termios_0_1_1_features = f: updateFeatures f (rec {
    redox_syscall_0_1_32.default = true;
    redox_termios_0_1_1.default = (f.redox_termios_0_1_1.default or true);
  }) [ redox_syscall_0_1_32_features ];
  regex_0_2_2 = { features?(regex_0_2_2_features {}) }: regex_0_2_2_ {
    dependencies = mapFeatures features ([ aho_corasick_0_6_3 memchr_1_0_2 regex_syntax_0_4_1 thread_local_0_3_4 utf8_ranges_1_0_0 ]);
    features = mkFeatures (features.regex_0_2_2 or {});
  };
  regex_0_2_2_features = f: updateFeatures f (rec {
    aho_corasick_0_6_3.default = true;
    memchr_1_0_2.default = true;
    regex_0_2_2.default = (f.regex_0_2_2.default or true);
    regex_0_2_2.simd =
      (f.regex_0_2_2.simd or false) ||
      (f.regex_0_2_2.simd-accel or false) ||
      (regex_0_2_2.simd-accel or false);
    regex_syntax_0_4_1.default = true;
    thread_local_0_3_4.default = true;
    utf8_ranges_1_0_0.default = true;
  }) [ aho_corasick_0_6_3_features memchr_1_0_2_features regex_syntax_0_4_1_features thread_local_0_3_4_features utf8_ranges_1_0_0_features ];
  regex_syntax_0_4_1 = { features?(regex_syntax_0_4_1_features {}) }: regex_syntax_0_4_1_ {};
  regex_syntax_0_4_1_features = f: updateFeatures f (rec {
    regex_syntax_0_4_1.default = (f.regex_syntax_0_4_1.default or true);
  }) [];
  rusqlite_0_13_0 = { features?(rusqlite_0_13_0_features {}) }: rusqlite_0_13_0_ {
    dependencies = mapFeatures features ([ bitflags_1_0_1 libsqlite3_sys_0_9_0 lru_cache_0_1_1 time_0_1_38 ]);
    features = mkFeatures (features.rusqlite_0_13_0 or {});
  };
  rusqlite_0_13_0_features = f: updateFeatures f (rec {
    bitflags_1_0_1.default = true;
    libsqlite3_sys_0_9_0.buildtime_bindgen =
      (f.libsqlite3_sys_0_9_0.buildtime_bindgen or false) ||
      (rusqlite_0_13_0.buildtime_bindgen or false) ||
      (f.rusqlite_0_13_0.buildtime_bindgen or false);
    libsqlite3_sys_0_9_0.bundled =
      (f.libsqlite3_sys_0_9_0.bundled or false) ||
      (rusqlite_0_13_0.bundled or false) ||
      (f.rusqlite_0_13_0.bundled or false);
    libsqlite3_sys_0_9_0.default = true;
    libsqlite3_sys_0_9_0.min_sqlite_version_3_6_11 =
      (f.libsqlite3_sys_0_9_0.min_sqlite_version_3_6_11 or false) ||
      (rusqlite_0_13_0.backup or false) ||
      (f.rusqlite_0_13_0.backup or false);
    libsqlite3_sys_0_9_0.min_sqlite_version_3_6_23 =
      (f.libsqlite3_sys_0_9_0.min_sqlite_version_3_6_23 or false) ||
      (rusqlite_0_13_0.trace or false) ||
      (f.rusqlite_0_13_0.trace or false);
    libsqlite3_sys_0_9_0.min_sqlite_version_3_7_3 =
      (f.libsqlite3_sys_0_9_0.min_sqlite_version_3_7_3 or false) ||
      (rusqlite_0_13_0.functions or false) ||
      (f.rusqlite_0_13_0.functions or false);
    libsqlite3_sys_0_9_0.min_sqlite_version_3_7_4 =
      (f.libsqlite3_sys_0_9_0.min_sqlite_version_3_7_4 or false) ||
      (rusqlite_0_13_0.blob or false) ||
      (f.rusqlite_0_13_0.blob or false);
    libsqlite3_sys_0_9_0.sqlcipher =
      (f.libsqlite3_sys_0_9_0.sqlcipher or false) ||
      (rusqlite_0_13_0.sqlcipher or false) ||
      (f.rusqlite_0_13_0.sqlcipher or false);
    lru_cache_0_1_1.default = true;
    rusqlite_0_13_0.default = (f.rusqlite_0_13_0.default or true);
    time_0_1_38.default = true;
  }) [ bitflags_1_0_1_features libsqlite3_sys_0_9_0_features lru_cache_0_1_1_features time_0_1_38_features ];
  rustc_demangle_0_1_5 = { features?(rustc_demangle_0_1_5_features {}) }: rustc_demangle_0_1_5_ {};
  rustc_demangle_0_1_5_features = f: updateFeatures f (rec {
    rustc_demangle_0_1_5.default = (f.rustc_demangle_0_1_5.default or true);
  }) [];
  serde_1_0_21 = { features?(serde_1_0_21_features {}) }: serde_1_0_21_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.serde_1_0_21 or {});
  };
  serde_1_0_21_features = f: updateFeatures f (rec {
    serde_1_0_21.default = (f.serde_1_0_21.default or true);
    serde_1_0_21.serde_derive =
      (f.serde_1_0_21.serde_derive or false) ||
      (f.serde_1_0_21.derive or false) ||
      (serde_1_0_21.derive or false) ||
      (f.serde_1_0_21.playground or false) ||
      (serde_1_0_21.playground or false);
    serde_1_0_21.std =
      (f.serde_1_0_21.std or false) ||
      (f.serde_1_0_21.default or false) ||
      (serde_1_0_21.default or false);
    serde_1_0_21.unstable =
      (f.serde_1_0_21.unstable or false) ||
      (f.serde_1_0_21.alloc or false) ||
      (serde_1_0_21.alloc or false);
  }) [];
  serde_derive_1_0_21 = { features?(serde_derive_1_0_21_features {}) }: serde_derive_1_0_21_ {
    dependencies = mapFeatures features ([ quote_0_3_15 serde_derive_internals_0_17_0 syn_0_11_11 ]);
  };
  serde_derive_1_0_21_features = f: updateFeatures f (rec {
    quote_0_3_15.default = true;
    serde_derive_1_0_21.default = (f.serde_derive_1_0_21.default or true);
    serde_derive_internals_0_17_0.default = (f.serde_derive_internals_0_17_0.default or false);
    syn_0_11_11.default = true;
    syn_0_11_11.visit = true;
  }) [ quote_0_3_15_features serde_derive_internals_0_17_0_features syn_0_11_11_features ];
  serde_derive_internals_0_17_0 = { features?(serde_derive_internals_0_17_0_features {}) }: serde_derive_internals_0_17_0_ {
    dependencies = mapFeatures features ([ syn_0_11_11 synom_0_11_3 ]);
  };
  serde_derive_internals_0_17_0_features = f: updateFeatures f (rec {
    serde_derive_internals_0_17_0.default = (f.serde_derive_internals_0_17_0.default or true);
    syn_0_11_11.default = (f.syn_0_11_11.default or false);
    syn_0_11_11.parsing = true;
    synom_0_11_3.default = true;
  }) [ syn_0_11_11_features synom_0_11_3_features ];
  serde_json_1_0_6 = { features?(serde_json_1_0_6_features {}) }: serde_json_1_0_6_ {
    dependencies = mapFeatures features ([ dtoa_0_4_2 itoa_0_3_4 num_traits_0_1_40 serde_1_0_21 ]);
    features = mkFeatures (features.serde_json_1_0_6 or {});
  };
  serde_json_1_0_6_features = f: updateFeatures f (rec {
    dtoa_0_4_2.default = true;
    itoa_0_3_4.default = true;
    num_traits_0_1_40.default = true;
    serde_1_0_21.default = true;
    serde_json_1_0_6.default = (f.serde_json_1_0_6.default or true);
    serde_json_1_0_6.linked-hash-map =
      (f.serde_json_1_0_6.linked-hash-map or false) ||
      (f.serde_json_1_0_6.preserve_order or false) ||
      (serde_json_1_0_6.preserve_order or false);
  }) [ dtoa_0_4_2_features itoa_0_3_4_features num_traits_0_1_40_features serde_1_0_21_features ];
  strsim_0_6_0 = { features?(strsim_0_6_0_features {}) }: strsim_0_6_0_ {};
  strsim_0_6_0_features = f: updateFeatures f (rec {
    strsim_0_6_0.default = (f.strsim_0_6_0.default or true);
  }) [];
  syn_0_11_11 = { features?(syn_0_11_11_features {}) }: syn_0_11_11_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.syn_0_11_11.quote or false then [ quote_0_3_15 ] else [])
      ++ (if features.syn_0_11_11.synom or false then [ synom_0_11_3 ] else [])
      ++ (if features.syn_0_11_11.unicode-xid or false then [ unicode_xid_0_0_4 ] else []));
    features = mkFeatures (features.syn_0_11_11 or {});
  };
  syn_0_11_11_features = f: updateFeatures f (rec {
    quote_0_3_15.default = true;
    syn_0_11_11.default = (f.syn_0_11_11.default or true);
    syn_0_11_11.parsing =
      (f.syn_0_11_11.parsing or false) ||
      (f.syn_0_11_11.default or false) ||
      (syn_0_11_11.default or false);
    syn_0_11_11.printing =
      (f.syn_0_11_11.printing or false) ||
      (f.syn_0_11_11.default or false) ||
      (syn_0_11_11.default or false);
    syn_0_11_11.quote =
      (f.syn_0_11_11.quote or false) ||
      (f.syn_0_11_11.printing or false) ||
      (syn_0_11_11.printing or false);
    syn_0_11_11.synom =
      (f.syn_0_11_11.synom or false) ||
      (f.syn_0_11_11.parsing or false) ||
      (syn_0_11_11.parsing or false);
    syn_0_11_11.unicode-xid =
      (f.syn_0_11_11.unicode-xid or false) ||
      (f.syn_0_11_11.parsing or false) ||
      (syn_0_11_11.parsing or false);
    synom_0_11_3.default = true;
    unicode_xid_0_0_4.default = true;
  }) [ quote_0_3_15_features synom_0_11_3_features unicode_xid_0_0_4_features ];
  synom_0_11_3 = { features?(synom_0_11_3_features {}) }: synom_0_11_3_ {
    dependencies = mapFeatures features ([ unicode_xid_0_0_4 ]);
  };
  synom_0_11_3_features = f: updateFeatures f (rec {
    synom_0_11_3.default = (f.synom_0_11_3.default or true);
    unicode_xid_0_0_4.default = true;
  }) [ unicode_xid_0_0_4_features ];
  tempdir_0_3_5 = { features?(tempdir_0_3_5_features {}) }: tempdir_0_3_5_ {
    dependencies = mapFeatures features ([ rand_0_3_18 ]);
  };
  tempdir_0_3_5_features = f: updateFeatures f (rec {
    rand_0_3_18.default = true;
    tempdir_0_3_5.default = (f.tempdir_0_3_5.default or true);
  }) [ rand_0_3_18_features ];
  termcolor_0_3_3 = { features?(termcolor_0_3_3_features {}) }: termcolor_0_3_3_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ wincolor_0_1_4 ]) else []);
  };
  termcolor_0_3_3_features = f: updateFeatures f (rec {
    termcolor_0_3_3.default = (f.termcolor_0_3_3.default or true);
    wincolor_0_1_4.default = true;
  }) [ wincolor_0_1_4_features ];
  termion_1_5_1 = { features?(termion_1_5_1_features {}) }: termion_1_5_1_ {
    dependencies = (if !(kernel == "redox") then mapFeatures features ([ libc_0_2_33 ]) else [])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_32 redox_termios_0_1_1 ]) else []);
  };
  termion_1_5_1_features = f: updateFeatures f (rec {
    libc_0_2_33.default = true;
    redox_syscall_0_1_32.default = true;
    redox_termios_0_1_1.default = true;
    termion_1_5_1.default = (f.termion_1_5_1.default or true);
  }) [ libc_0_2_33_features redox_syscall_0_1_32_features redox_termios_0_1_1_features ];
  textwrap_0_9_0 = { features?(textwrap_0_9_0_features {}) }: textwrap_0_9_0_ {
    dependencies = mapFeatures features ([ unicode_width_0_1_4 ]);
  };
  textwrap_0_9_0_features = f: updateFeatures f (rec {
    textwrap_0_9_0.default = (f.textwrap_0_9_0.default or true);
    unicode_width_0_1_4.default = true;
  }) [ unicode_width_0_1_4_features ];
  thread_local_0_3_4 = { features?(thread_local_0_3_4_features {}) }: thread_local_0_3_4_ {
    dependencies = mapFeatures features ([ lazy_static_0_2_11 unreachable_1_0_0 ]);
  };
  thread_local_0_3_4_features = f: updateFeatures f (rec {
    lazy_static_0_2_11.default = true;
    thread_local_0_3_4.default = (f.thread_local_0_3_4.default or true);
    unreachable_1_0_0.default = true;
  }) [ lazy_static_0_2_11_features unreachable_1_0_0_features ];
  time_0_1_38 = { features?(time_0_1_38_features {}) }: time_0_1_38_ {
    dependencies = mapFeatures features ([ libc_0_2_33 ])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_32 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
  };
  time_0_1_38_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    libc_0_2_33.default = true;
    redox_syscall_0_1_32.default = true;
    time_0_1_38.default = (f.time_0_1_38.default or true);
    winapi_0_2_8.default = true;
  }) [ libc_0_2_33_features redox_syscall_0_1_32_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  toml_0_4_5 = { features?(toml_0_4_5_features {}) }: toml_0_4_5_ {
    dependencies = mapFeatures features ([ serde_1_0_21 ]);
  };
  toml_0_4_5_features = f: updateFeatures f (rec {
    serde_1_0_21.default = true;
    toml_0_4_5.default = (f.toml_0_4_5.default or true);
  }) [ serde_1_0_21_features ];
  unicode_width_0_1_4 = { features?(unicode_width_0_1_4_features {}) }: unicode_width_0_1_4_ {
    features = mkFeatures (features.unicode_width_0_1_4 or {});
  };
  unicode_width_0_1_4_features = f: updateFeatures f (rec {
    unicode_width_0_1_4.default = (f.unicode_width_0_1_4.default or true);
  }) [];
  unicode_xid_0_0_4 = { features?(unicode_xid_0_0_4_features {}) }: unicode_xid_0_0_4_ {
    features = mkFeatures (features.unicode_xid_0_0_4 or {});
  };
  unicode_xid_0_0_4_features = f: updateFeatures f (rec {
    unicode_xid_0_0_4.default = (f.unicode_xid_0_0_4.default or true);
  }) [];
  unreachable_1_0_0 = { features?(unreachable_1_0_0_features {}) }: unreachable_1_0_0_ {
    dependencies = mapFeatures features ([ void_1_0_2 ]);
  };
  unreachable_1_0_0_features = f: updateFeatures f (rec {
    unreachable_1_0_0.default = (f.unreachable_1_0_0.default or true);
    void_1_0_2.default = (f.void_1_0_2.default or false);
  }) [ void_1_0_2_features ];
  utf8_ranges_1_0_0 = { features?(utf8_ranges_1_0_0_features {}) }: utf8_ranges_1_0_0_ {};
  utf8_ranges_1_0_0_features = f: updateFeatures f (rec {
    utf8_ranges_1_0_0.default = (f.utf8_ranges_1_0_0.default or true);
  }) [];
  vcpkg_0_2_2 = { features?(vcpkg_0_2_2_features {}) }: vcpkg_0_2_2_ {};
  vcpkg_0_2_2_features = f: updateFeatures f (rec {
    vcpkg_0_2_2.default = (f.vcpkg_0_2_2.default or true);
  }) [];
  vec_map_0_8_0 = { features?(vec_map_0_8_0_features {}) }: vec_map_0_8_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.vec_map_0_8_0 or {});
  };
  vec_map_0_8_0_features = f: updateFeatures f (rec {
    vec_map_0_8_0.default = (f.vec_map_0_8_0.default or true);
    vec_map_0_8_0.serde =
      (f.vec_map_0_8_0.serde or false) ||
      (f.vec_map_0_8_0.eders or false) ||
      (vec_map_0_8_0.eders or false);
    vec_map_0_8_0.serde_derive =
      (f.vec_map_0_8_0.serde_derive or false) ||
      (f.vec_map_0_8_0.eders or false) ||
      (vec_map_0_8_0.eders or false);
  }) [];
  void_1_0_2 = { features?(void_1_0_2_features {}) }: void_1_0_2_ {
    features = mkFeatures (features.void_1_0_2 or {});
  };
  void_1_0_2_features = f: updateFeatures f (rec {
    void_1_0_2.default = (f.void_1_0_2.default or true);
    void_1_0_2.std =
      (f.void_1_0_2.std or false) ||
      (f.void_1_0_2.default or false) ||
      (void_1_0_2.default or false);
  }) [];
  winapi_0_2_8 = { features?(winapi_0_2_8_features {}) }: winapi_0_2_8_ {};
  winapi_0_2_8_features = f: updateFeatures f (rec {
    winapi_0_2_8.default = (f.winapi_0_2_8.default or true);
  }) [];
  winapi_build_0_1_1 = { features?(winapi_build_0_1_1_features {}) }: winapi_build_0_1_1_ {};
  winapi_build_0_1_1_features = f: updateFeatures f (rec {
    winapi_build_0_1_1.default = (f.winapi_build_0_1_1.default or true);
  }) [];
  wincolor_0_1_4 = { features?(wincolor_0_1_4_features {}) }: wincolor_0_1_4_ {
    dependencies = mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]);
  };
  wincolor_0_1_4_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    winapi_0_2_8.default = true;
    wincolor_0_1_4.default = (f.wincolor_0_1_4.default or true);
  }) [ kernel32_sys_0_2_2_features winapi_0_2_8_features ];
}
