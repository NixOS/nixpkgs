# Generated by carnix 0.7.2: carnix nix
{ lib, buildPlatform, buildRustCrate, fetchgit }:
let kernel = buildPlatform.parsed.kernel.name;
    abi = buildPlatform.parsed.abi.name;
    updateFeatures = f: up: functions: builtins.deepSeq f (lib.lists.foldl' (features: fun: fun features) (lib.attrsets.recursiveUpdate f up) functions);
    mapFeatures = features: map (fun: fun { features = features; });
    mkFeatures = feat: lib.lists.foldl (features: featureName:
      if feat.${featureName} or false then
        [ featureName ] ++ features
      else
        features
    ) [] (builtins.attrNames feat);
in
rec {
  carnix = f: carnix_0_7_2 { features = carnix_0_7_2_features { carnix_0_7_2 = f; }; };
  __all = [ (carnix {}) ];
  aho_corasick_0_6_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "aho-corasick";
    version = "0.6.4";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "189v919mp6rzzgjp1khpn4zlq8ls81gh43x1lmc8kbkagdlpq888";
    libName = "aho_corasick";
    crateBin = [ {  name = "aho-corasick-dot"; } ];
    inherit dependencies buildDependencies features;
  };
  ansi_term_0_11_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ansi_term";
    version = "0.11.0";
    authors = [ "ogham@bsago.me" "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>" "Josh Triplett <josh@joshtriplett.org>" ];
    sha256 = "08fk0p2xvkqpmz3zlrwnf6l8sj2vngw464rvzspzp31sbgxbwm4v";
    inherit dependencies buildDependencies features;
  };
  atty_0_2_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "atty";
    version = "0.2.8";
    authors = [ "softprops <d.tangren@gmail.com>" ];
    sha256 = "03w1q3h4w7vhcdxdwa9cirjkzdjz3ja636fj3g64659z6yax6p6d";
    inherit dependencies buildDependencies features;
  };
  backtrace_0_3_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace";
    version = "0.3.6";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "The Rust Project Developers" ];
    sha256 = "00p77iqrv2p47m4y5lq1clb8fi1xfmnz2520frqx88497ff4zhrx";
    inherit dependencies buildDependencies features;
  };
  backtrace_sys_0_1_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace-sys";
    version = "0.1.16";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1cn2c8q3dn06crmnk0p62czkngam4l8nf57wy33nz1y5g25pszwy";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  bitflags_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "1.0.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0p4b3nr0s5nda2qmm7xdhnvh4lkqk3xd8l9ffmwbvqw137vx7mj1";
    inherit dependencies buildDependencies features;
  };
  carnix_0_7_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "carnix";
    version = "0.7.2";
    authors = [ "pe@pijul.org <pe@pijul.org>" ];
    sha256 = "0zsmc4wiz7vill676mcdh6ibyzmr9rn030j555ncqgavs7k5yhq5";
    crateBin = [ {  name = "cargo-generate-nixfile";  path = "src/cargo-generate-nixfile.rs"; } {  name = "carnix";  path = "src/main.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  cc_1_0_10_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cc";
    version = "1.0.10";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0fqchrxcrd2j2b9x7cqs49ck7b3ilsap8s9xhs75gzgl6c1ylpdn";
    inherit dependencies buildDependencies features;
  };
  cfg_if_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cfg-if";
    version = "0.1.2";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0x06hvrrqy96m97593823vvxcgvjaxckghwyy2jcyc8qc7c6cyhi";
    inherit dependencies buildDependencies features;
  };
  clap_2_31_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "clap";
    version = "2.31.2";
    authors = [ "Kevin K. <kbknapp@gmail.com>" ];
    sha256 = "0r24ziw85a8y1sf2l21y4mvv5qan3rjafcshpyfsjfadqfxsij72";
    inherit dependencies buildDependencies features;
  };
  dtoa_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dtoa";
    version = "0.4.2";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1bxsh6fags7nr36vlz07ik2a1rzyipc8x1y30kjk832hf2pzadmw";
    inherit dependencies buildDependencies features;
  };
  either_1_5_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "either";
    version = "1.5.0";
    authors = [ "bluss" ];
    sha256 = "1f7kl2ln01y02m8fpd2zrdjiwqmgfvl9nxxrfry3k19d1gd2bsvz";
    inherit dependencies buildDependencies features;
  };
  env_logger_0_5_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "env_logger";
    version = "0.5.7";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0wgd9fashmwbx5ssrxx69naam6hlb5c7qmh1nln645q4gms35i2l";
    inherit dependencies buildDependencies features;
  };
  error_chain_0_11_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "error-chain";
    version = "0.11.0";
    authors = [ "Brian Anderson <banderson@mozilla.com>" "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" "Yamakaky <yamakaky@yamaworld.fr>" ];
    sha256 = "19nz17q6dzp0mx2jhh9qbj45gkvvgcl7zq9z2ai5a8ihbisfj6d7";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon";
    version = "0.3.3";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "0jrf4shb1699r4la8z358vri8318w4mdi6qzfqy30p2ymjlca4gk";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_sys_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon-sys";
    version = "0.3.3";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "08jp1zxrm9jbrr6l26bjal4dbm8bxfy57ickdgibsqxr1n9j3hf5";
    inherit dependencies buildDependencies features;
  };
  humantime_1_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "humantime";
    version = "1.1.1";
    authors = [ "Paul Colomiets <paul@colomiets.name>" ];
    sha256 = "1lzdfsfzdikcp1qb6wcdvnsdv16pmzr7p7cv171vnbnyz2lrwbgn";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  itertools_0_7_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "itertools";
    version = "0.7.8";
    authors = [ "bluss" ];
    sha256 = "0ib30cd7d1icjxsa13mji1gry3grp72kx8p33yd84mphdbc3d357";
    inherit dependencies buildDependencies features;
  };
  itoa_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "itoa";
    version = "0.4.1";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1jyrsmrm5q4r2ipmq5hvvkqg0mgnlbk44lm7gr0v9ymvbrh2gbij";
    inherit dependencies buildDependencies features;
  };
  lazy_static_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "1.0.0";
    authors = [ "Marvin LÃ¶bel <loebel.marvin@gmail.com>" ];
    sha256 = "0wfvqyr2nvx2mbsrscg5y7gfa9skhb8p72ayanl8vl49pw24v4fh";
    inherit dependencies buildDependencies features;
  };
  libc_0_2_40_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libc";
    version = "0.2.40";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1xfc39237ldzgr8x8wcflgdr8zssi3wif7g2zxc02d94gzkjsw83";
    inherit dependencies buildDependencies features;
  };
  libsqlite3_sys_0_9_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libsqlite3-sys";
    version = "0.9.1";
    authors = [ "John Gallagher <jgallagher@bignerdranch.com>" ];
    sha256 = "1j599xygsh564xmx29942w0sq7w05c1jipk6dsyrxj6b33kw3fw7";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  linked_hash_map_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "linked-hash-map";
    version = "0.4.2";
    authors = [ "Stepan Koltsov <stepan.koltsov@gmail.com>" "Andrew Paseltiner <apaseltiner@gmail.com>" ];
    sha256 = "04da208h6jb69f46j37jnvsw2i1wqplglp4d61csqcrhh83avbgl";
    inherit dependencies buildDependencies features;
  };
  log_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "log";
    version = "0.4.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "01vm8yy3wngvyj6qp1x3xpcb4xq7v67yn9l7fsma8kz28mliz90d";
    inherit dependencies buildDependencies features;
  };
  lru_cache_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lru-cache";
    version = "0.1.1";
    authors = [ "Stepan Koltsov <stepan.koltsov@gmail.com>" ];
    sha256 = "1hl6kii1g54sq649gnscv858mmw7a02xj081l4vcgvrswdi2z8fw";
    inherit dependencies buildDependencies features;
  };
  memchr_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memchr";
    version = "1.0.2";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" "bluss" ];
    sha256 = "0dfb8ifl9nrc9kzgd5z91q6qg87sh285q1ih7xgrsglmqfav9lg7";
    inherit dependencies buildDependencies features;
  };
  memchr_2_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memchr";
    version = "2.0.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" "bluss" ];
    sha256 = "0ls2y47rjwapjdax6bp974gdp06ggm1v8d1h69wyydmh1nhgm5gr";
    inherit dependencies buildDependencies features;
  };
  nom_3_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "nom";
    version = "3.2.1";
    authors = [ "contact@geoffroycouprie.com" ];
    sha256 = "1vcllxrz9hdw6j25kn020ka3psz1vkaqh1hm3yfak2240zrxgi07";
    inherit dependencies buildDependencies features;
  };
  num_traits_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-traits";
    version = "0.2.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1gcqhcd27gi72al5salxlp3m374qr3xnc3zh249f7dsrxc9rmgh0";
    inherit dependencies buildDependencies features;
  };
  pkg_config_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "pkg-config";
    version = "0.3.9";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "06k8fxgrsrxj8mjpjcq1n7mn2p1shpxif4zg9y5h09c7vy20s146";
    inherit dependencies buildDependencies features;
  };
  proc_macro2_0_3_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "proc-macro2";
    version = "0.3.6";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1viqlvsknzvgc2j0bcz53n94zxv7c816py7hv2r27y0bv1dq4iqp";
    inherit dependencies buildDependencies features;
  };
  quick_error_1_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quick-error";
    version = "1.2.1";
    authors = [ "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" ];
    sha256 = "0vq41csw68ynaq2fy5dvldh4lx7pnbw6pr332kv5rvrz4pz0jnq6";
    inherit dependencies buildDependencies features;
  };
  quote_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quote";
    version = "0.5.1";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0jppgddqp6vp67ns4hpyf644n5678fligp711isp0xkvfv19la3r";
    inherit dependencies buildDependencies features;
  };
  rand_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.4.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0h8pkg23wb67i8904sm76iyr1jlmhklb85vbpz9c9191a24xzkfm";
    inherit dependencies buildDependencies features;
  };
  redox_syscall_0_1_37_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_syscall";
    version = "0.1.37";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "0qa0jl9cr3qp80an8vshp2mcn8rzvwiavs1398hq1vsjw7pc3h2v";
    libName = "syscall";
    inherit dependencies buildDependencies features;
  };
  redox_termios_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_termios";
    version = "0.1.1";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "04s6yyzjca552hdaqlvqhp3vw0zqbc304md5czyd3axh56iry8wh";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  regex_0_2_10_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex";
    version = "0.2.10";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0cwdmcllssm984b5nnpr55rgla1yzw31kmp2imxdpgk6hvlhf1ca";
    inherit dependencies buildDependencies features;
  };
  regex_syntax_0_5_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex-syntax";
    version = "0.5.5";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1m5v66r6xxglgkdl1ci23qq0bl0k2wqplm6li4pmg1k7szvgxcbp";
    inherit dependencies buildDependencies features;
  };
  remove_dir_all_0_5_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "remove_dir_all";
    version = "0.5.0";
    authors = [ "Aaronepower <theaaronepower@gmail.com>" ];
    sha256 = "0cgmlm9xvf19z84zcb7d62c2lfv60g6gd58c9717giq7c9ib284y";
    inherit dependencies buildDependencies features;
  };
  rusqlite_0_13_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rusqlite";
    version = "0.13.0";
    authors = [ "John Gallagher <jgallagher@bignerdranch.com>" ];
    sha256 = "1hj2464ar2y4324sk3jx7m9byhkcp60krrrs1v1i8dlhhlnkb9hc";
    inherit dependencies buildDependencies features;
  };
  rustc_demangle_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc-demangle";
    version = "0.1.7";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0wrln6jvwmqrhyvqlw5vq9a2s4r04ja8mrybxjj9aaaar1fyvns6";
    inherit dependencies buildDependencies features;
  };
  serde_1_0_38_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde";
    version = "1.0.38";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0dri7vmzjsfmak1qq5wdinykqqvd5shpms504p8acpgyx7817jgk";
    inherit dependencies buildDependencies features;
  };
  serde_derive_1_0_38_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_derive";
    version = "1.0.38";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "027c13sbnqkfzc8vxx0m6wnkr68im8kdbkbnix07dgw1l616yw0m";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  serde_derive_internals_0_23_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_derive_internals";
    version = "0.23.1";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0bjgcn2irh6sd34q3j3xkbn5ghfgiv3cfdlffb31lh0bikwpk1b4";
    inherit dependencies buildDependencies features;
  };
  serde_json_1_0_14_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_json";
    version = "1.0.14";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "053n2vbcx32f28pr8fxi0fxq7m3g0gm94kz9i1fmi1kiwq9j5lsj";
    inherit dependencies buildDependencies features;
  };
  strsim_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "strsim";
    version = "0.7.0";
    authors = [ "Danny Guo <dannyguo91@gmail.com>" ];
    sha256 = "0fy0k5f2705z73mb3x9459bpcvrx4ky8jpr4zikcbiwan4bnm0iv";
    inherit dependencies buildDependencies features;
  };
  syn_0_13_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syn";
    version = "0.13.1";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1pimp7fpvillhz06xz0k6450h9nis3ab6h1j2hzrzykrpxs2qnyg";
    inherit dependencies buildDependencies features;
  };
  tempdir_0_3_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tempdir";
    version = "0.3.7";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0y53sxybyljrr7lh0x0ysrsa7p7cljmwv9v80acy3rc6n97g67vy";
    inherit dependencies buildDependencies features;
  };
  termcolor_0_3_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termcolor";
    version = "0.3.6";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0w609sa1apl1kii67ln2g82r4rrycw45zgjq7mxxjrx1fa21v05z";
    inherit dependencies buildDependencies features;
  };
  termion_1_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termion";
    version = "1.5.1";
    authors = [ "ticki <Ticki@users.noreply.github.com>" "gycos <alexandre.bury@gmail.com>" "IGI-111 <igi-111@protonmail.com>" ];
    sha256 = "02gq4vd8iws1f3gjrgrgpajsk2bk43nds5acbbb4s8dvrdvr8nf1";
    inherit dependencies buildDependencies features;
  };
  textwrap_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "textwrap";
    version = "0.9.0";
    authors = [ "Martin Geisler <martin@geisler.net>" ];
    sha256 = "18jg79ndjlwndz01mlbh82kkr2arqm658yn5kwp65l5n1hz8w4yb";
    inherit dependencies buildDependencies features;
  };
  thread_local_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "thread_local";
    version = "0.3.5";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "0mkp0sp91aqsk7brgygai4igv751r1754rsxn37mig3ag5rx8np6";
    inherit dependencies buildDependencies features;
  };
  time_0_1_39_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "time";
    version = "0.1.39";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1ryy3bwhvyzj6fym123il38mk9ranm4vradj2a47l5ij8jd7w5if";
    inherit dependencies buildDependencies features;
  };
  toml_0_4_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "toml";
    version = "0.4.6";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0rfl7lyb5f67spk69s604nw87f97g7fvv36hj9v88qlr2bwyrn8v";
    inherit dependencies buildDependencies features;
  };
  ucd_util_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ucd-util";
    version = "0.1.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "02a8h3siipx52b832xc8m8rwasj6nx9jpiwfldw8hp6k205hgkn0";
    inherit dependencies buildDependencies features;
  };
  unicode_width_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-width";
    version = "0.1.4";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "1rp7a04icn9y5c0lm74nrd4py0rdl0af8bhdwq7g478n1xifpifl";
    inherit dependencies buildDependencies features;
  };
  unicode_xid_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-xid";
    version = "0.1.0";
    authors = [ "erick.tryzelaar <erick.tryzelaar@gmail.com>" "kwantam <kwantam@gmail.com>" ];
    sha256 = "05wdmwlfzxhq3nhsxn6wx4q8dhxzzfb9szsz6wiw092m1rjj01zj";
    inherit dependencies buildDependencies features;
  };
  unreachable_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unreachable";
    version = "1.0.0";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "1am8czbk5wwr25gbp2zr007744fxjshhdqjz9liz7wl4pnv3whcf";
    inherit dependencies buildDependencies features;
  };
  utf8_ranges_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "utf8-ranges";
    version = "1.0.0";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0rzmqprwjv9yp1n0qqgahgm24872x6c0xddfym5pfndy7a36vkn0";
    inherit dependencies buildDependencies features;
  };
  vcpkg_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "vcpkg";
    version = "0.2.3";
    authors = [ "Jim McGrath <jimmc2@gmail.com>" ];
    sha256 = "0achi8sfy0wm4q04gj7nwpq9xfx8ynk6vv4r12a3ijg26hispq0c";
    inherit dependencies buildDependencies features;
  };
  vec_map_0_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "vec_map";
    version = "0.8.0";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Jorge Aparicio <japaricious@gmail.com>" "Alexis Beingessner <a.beingessner@gmail.com>" "Brian Anderson <>" "tbu- <>" "Manish Goregaokar <>" "Aaron Turon <aturon@mozilla.com>" "Adolfo OchagavÃ­a <>" "Niko Matsakis <>" "Steven Fackler <>" "Chase Southwood <csouth3@illinois.edu>" "Eduard Burtescu <>" "Florian Wilkens <>" "FÃ©lix Raimundo <>" "Tibor Benke <>" "Markus Siemens <markus@m-siemens.de>" "Josh Branchaud <jbranchaud@gmail.com>" "Huon Wilson <dbau.pp@gmail.com>" "Corey Farwell <coref@rwell.org>" "Aaron Liblong <>" "Nick Cameron <nrc@ncameron.org>" "Patrick Walton <pcwalton@mimiga.net>" "Felix S Klock II <>" "Andrew Paseltiner <apaseltiner@gmail.com>" "Sean McArthur <sean.monstar@gmail.com>" "Vadim Petrochenkov <>" ];
    sha256 = "07sgxp3cf1a4cxm9n3r27fcvqmld32bl2576mrcahnvm34j11xay";
    inherit dependencies buildDependencies features;
  };
  void_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "void";
    version = "1.0.2";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "0h1dm0dx8dhf56a83k68mijyxigqhizpskwxfdrs1drwv2cdclv3";
    inherit dependencies buildDependencies features;
  };
  winapi_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.3.4";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1qbrf5dcnd8j36cawby5d9r5vx07r0l4ryf672pfncnp8895k9lx";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_i686_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-i686-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "05ihkij18r4gamjpxj4gra24514can762imjzlmak5wlzidplzrp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_x86_64_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-x86_64-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0n1ylmlsb8yg1v583i4xy0qmqg42275flvbc51hdqjjfjcl9vlbj";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  wincolor_0_1_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "wincolor";
    version = "0.1.6";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0f8m3l86pw6qi31jidqj78pgd15xj914850lyvsxkbln4f1drv47";
    inherit dependencies buildDependencies features;
  };
  aho_corasick_0_6_4 = { features?(aho_corasick_0_6_4_features {}) }: aho_corasick_0_6_4_ {
    dependencies = mapFeatures features ([ memchr_2_0_1 ]);
  };
  aho_corasick_0_6_4_features = f: updateFeatures f (rec {
    aho_corasick_0_6_4.default = (f.aho_corasick_0_6_4.default or true);
    memchr_2_0_1.default = true;
  }) [ memchr_2_0_1_features ];
  ansi_term_0_11_0 = { features?(ansi_term_0_11_0_features {}) }: ansi_term_0_11_0_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  ansi_term_0_11_0_features = f: updateFeatures f (rec {
    ansi_term_0_11_0.default = (f.ansi_term_0_11_0.default or true);
    winapi_0_3_4.consoleapi = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.errhandlingapi = true;
    winapi_0_3_4.processenv = true;
  }) [ winapi_0_3_4_features ];
  atty_0_2_8 = { features?(atty_0_2_8_features {}) }: atty_0_2_8_ {
    dependencies = (if kernel == "redox" then mapFeatures features ([ termion_1_5_1 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_40 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  atty_0_2_8_features = f: updateFeatures f (rec {
    atty_0_2_8.default = (f.atty_0_2_8.default or true);
    libc_0_2_40.default = (f.libc_0_2_40.default or false);
    termion_1_5_1.default = true;
    winapi_0_3_4.consoleapi = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwinbase = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.processenv = true;
    winapi_0_3_4.winbase = true;
  }) [ termion_1_5_1_features libc_0_2_40_features winapi_0_3_4_features ];
  backtrace_0_3_6 = { features?(backtrace_0_3_6_features {}) }: backtrace_0_3_6_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 rustc_demangle_0_1_7 ])
      ++ (if (kernel == "linux" || kernel == "darwin") && !(kernel == "fuchsia") && !(kernel == "emscripten") && !(kernel == "darwin") && !(kernel == "ios") then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_6.backtrace-sys or false then [ backtrace_sys_0_1_16 ] else [])) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_40 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_6.winapi or false then [ winapi_0_3_4 ] else [])) else []);
    features = mkFeatures (features.backtrace_0_3_6 or {});
  };
  backtrace_0_3_6_features = f: updateFeatures f (rec {
    backtrace_0_3_6.addr2line =
      (f.backtrace_0_3_6.addr2line or false) ||
      (f.backtrace_0_3_6.gimli-symbolize or false) ||
      (backtrace_0_3_6.gimli-symbolize or false);
    backtrace_0_3_6.backtrace-sys =
      (f.backtrace_0_3_6.backtrace-sys or false) ||
      (f.backtrace_0_3_6.libbacktrace or false) ||
      (backtrace_0_3_6.libbacktrace or false);
    backtrace_0_3_6.coresymbolication =
      (f.backtrace_0_3_6.coresymbolication or false) ||
      (f.backtrace_0_3_6.default or false) ||
      (backtrace_0_3_6.default or false);
    backtrace_0_3_6.dbghelp =
      (f.backtrace_0_3_6.dbghelp or false) ||
      (f.backtrace_0_3_6.default or false) ||
      (backtrace_0_3_6.default or false);
    backtrace_0_3_6.default = (f.backtrace_0_3_6.default or true);
    backtrace_0_3_6.dladdr =
      (f.backtrace_0_3_6.dladdr or false) ||
      (f.backtrace_0_3_6.default or false) ||
      (backtrace_0_3_6.default or false);
    backtrace_0_3_6.findshlibs =
      (f.backtrace_0_3_6.findshlibs or false) ||
      (f.backtrace_0_3_6.gimli-symbolize or false) ||
      (backtrace_0_3_6.gimli-symbolize or false);
    backtrace_0_3_6.gimli =
      (f.backtrace_0_3_6.gimli or false) ||
      (f.backtrace_0_3_6.gimli-symbolize or false) ||
      (backtrace_0_3_6.gimli-symbolize or false);
    backtrace_0_3_6.libbacktrace =
      (f.backtrace_0_3_6.libbacktrace or false) ||
      (f.backtrace_0_3_6.default or false) ||
      (backtrace_0_3_6.default or false);
    backtrace_0_3_6.libunwind =
      (f.backtrace_0_3_6.libunwind or false) ||
      (f.backtrace_0_3_6.default or false) ||
      (backtrace_0_3_6.default or false);
    backtrace_0_3_6.memmap =
      (f.backtrace_0_3_6.memmap or false) ||
      (f.backtrace_0_3_6.gimli-symbolize or false) ||
      (backtrace_0_3_6.gimli-symbolize or false);
    backtrace_0_3_6.object =
      (f.backtrace_0_3_6.object or false) ||
      (f.backtrace_0_3_6.gimli-symbolize or false) ||
      (backtrace_0_3_6.gimli-symbolize or false);
    backtrace_0_3_6.rustc-serialize =
      (f.backtrace_0_3_6.rustc-serialize or false) ||
      (f.backtrace_0_3_6.serialize-rustc or false) ||
      (backtrace_0_3_6.serialize-rustc or false);
    backtrace_0_3_6.serde =
      (f.backtrace_0_3_6.serde or false) ||
      (f.backtrace_0_3_6.serialize-serde or false) ||
      (backtrace_0_3_6.serialize-serde or false);
    backtrace_0_3_6.serde_derive =
      (f.backtrace_0_3_6.serde_derive or false) ||
      (f.backtrace_0_3_6.serialize-serde or false) ||
      (backtrace_0_3_6.serialize-serde or false);
    backtrace_0_3_6.winapi =
      (f.backtrace_0_3_6.winapi or false) ||
      (f.backtrace_0_3_6.dbghelp or false) ||
      (backtrace_0_3_6.dbghelp or false);
    backtrace_sys_0_1_16.default = true;
    cfg_if_0_1_2.default = true;
    libc_0_2_40.default = true;
    rustc_demangle_0_1_7.default = true;
    winapi_0_3_4.dbghelp = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.processthreadsapi = true;
    winapi_0_3_4.std = true;
    winapi_0_3_4.winnt = true;
  }) [ cfg_if_0_1_2_features rustc_demangle_0_1_7_features backtrace_sys_0_1_16_features libc_0_2_40_features winapi_0_3_4_features ];
  backtrace_sys_0_1_16 = { features?(backtrace_sys_0_1_16_features {}) }: backtrace_sys_0_1_16_ {
    dependencies = mapFeatures features ([ libc_0_2_40 ]);
    buildDependencies = mapFeatures features ([ cc_1_0_10 ]);
  };
  backtrace_sys_0_1_16_features = f: updateFeatures f (rec {
    backtrace_sys_0_1_16.default = (f.backtrace_sys_0_1_16.default or true);
    cc_1_0_10.default = true;
    libc_0_2_40.default = true;
  }) [ libc_0_2_40_features cc_1_0_10_features ];
  bitflags_1_0_1 = { features?(bitflags_1_0_1_features {}) }: bitflags_1_0_1_ {
    features = mkFeatures (features.bitflags_1_0_1 or {});
  };
  bitflags_1_0_1_features = f: updateFeatures f (rec {
    bitflags_1_0_1.default = (f.bitflags_1_0_1.default or true);
    bitflags_1_0_1.example_generated =
      (f.bitflags_1_0_1.example_generated or false) ||
      (f.bitflags_1_0_1.default or false) ||
      (bitflags_1_0_1.default or false);
  }) [];
  carnix_0_7_2 = { features?(carnix_0_7_2_features {}) }: carnix_0_7_2_ {
    dependencies = mapFeatures features ([ clap_2_31_2 env_logger_0_5_7 error_chain_0_11_0 itertools_0_7_8 log_0_4_1 nom_3_2_1 regex_0_2_10 rusqlite_0_13_0 serde_1_0_38 serde_derive_1_0_38 serde_json_1_0_14 tempdir_0_3_7 toml_0_4_6 ]);
  };
  carnix_0_7_2_features = f: updateFeatures f (rec {
    carnix_0_7_2.default = (f.carnix_0_7_2.default or true);
    clap_2_31_2.default = true;
    env_logger_0_5_7.default = true;
    error_chain_0_11_0.default = true;
    itertools_0_7_8.default = true;
    log_0_4_1.default = true;
    nom_3_2_1.default = true;
    regex_0_2_10.default = true;
    rusqlite_0_13_0.default = true;
    serde_1_0_38.default = true;
    serde_derive_1_0_38.default = true;
    serde_json_1_0_14.default = true;
    tempdir_0_3_7.default = true;
    toml_0_4_6.default = true;
  }) [ clap_2_31_2_features env_logger_0_5_7_features error_chain_0_11_0_features itertools_0_7_8_features log_0_4_1_features nom_3_2_1_features regex_0_2_10_features rusqlite_0_13_0_features serde_1_0_38_features serde_derive_1_0_38_features serde_json_1_0_14_features tempdir_0_3_7_features toml_0_4_6_features ];
  cc_1_0_10 = { features?(cc_1_0_10_features {}) }: cc_1_0_10_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.cc_1_0_10 or {});
  };
  cc_1_0_10_features = f: updateFeatures f (rec {
    cc_1_0_10.default = (f.cc_1_0_10.default or true);
    cc_1_0_10.rayon =
      (f.cc_1_0_10.rayon or false) ||
      (f.cc_1_0_10.parallel or false) ||
      (cc_1_0_10.parallel or false);
  }) [];
  cfg_if_0_1_2 = { features?(cfg_if_0_1_2_features {}) }: cfg_if_0_1_2_ {};
  cfg_if_0_1_2_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = (f.cfg_if_0_1_2.default or true);
  }) [];
  clap_2_31_2 = { features?(clap_2_31_2_features {}) }: clap_2_31_2_ {
    dependencies = mapFeatures features ([ bitflags_1_0_1 textwrap_0_9_0 unicode_width_0_1_4 ]
      ++ (if features.clap_2_31_2.atty or false then [ atty_0_2_8 ] else [])
      ++ (if features.clap_2_31_2.strsim or false then [ strsim_0_7_0 ] else [])
      ++ (if features.clap_2_31_2.vec_map or false then [ vec_map_0_8_0 ] else []))
      ++ (if !(kernel == "windows") then mapFeatures features ([ ]
      ++ (if features.clap_2_31_2.ansi_term or false then [ ansi_term_0_11_0 ] else [])) else []);
    features = mkFeatures (features.clap_2_31_2 or {});
  };
  clap_2_31_2_features = f: updateFeatures f (rec {
    ansi_term_0_11_0.default = true;
    atty_0_2_8.default = true;
    bitflags_1_0_1.default = true;
    clap_2_31_2.ansi_term =
      (f.clap_2_31_2.ansi_term or false) ||
      (f.clap_2_31_2.color or false) ||
      (clap_2_31_2.color or false);
    clap_2_31_2.atty =
      (f.clap_2_31_2.atty or false) ||
      (f.clap_2_31_2.color or false) ||
      (clap_2_31_2.color or false);
    clap_2_31_2.clippy =
      (f.clap_2_31_2.clippy or false) ||
      (f.clap_2_31_2.lints or false) ||
      (clap_2_31_2.lints or false);
    clap_2_31_2.color =
      (f.clap_2_31_2.color or false) ||
      (f.clap_2_31_2.default or false) ||
      (clap_2_31_2.default or false);
    clap_2_31_2.default = (f.clap_2_31_2.default or true);
    clap_2_31_2.strsim =
      (f.clap_2_31_2.strsim or false) ||
      (f.clap_2_31_2.suggestions or false) ||
      (clap_2_31_2.suggestions or false);
    clap_2_31_2.suggestions =
      (f.clap_2_31_2.suggestions or false) ||
      (f.clap_2_31_2.default or false) ||
      (clap_2_31_2.default or false);
    clap_2_31_2.term_size =
      (f.clap_2_31_2.term_size or false) ||
      (f.clap_2_31_2.wrap_help or false) ||
      (clap_2_31_2.wrap_help or false);
    clap_2_31_2.vec_map =
      (f.clap_2_31_2.vec_map or false) ||
      (f.clap_2_31_2.default or false) ||
      (clap_2_31_2.default or false);
    clap_2_31_2.yaml =
      (f.clap_2_31_2.yaml or false) ||
      (f.clap_2_31_2.doc or false) ||
      (clap_2_31_2.doc or false);
    clap_2_31_2.yaml-rust =
      (f.clap_2_31_2.yaml-rust or false) ||
      (f.clap_2_31_2.yaml or false) ||
      (clap_2_31_2.yaml or false);
    strsim_0_7_0.default = true;
    textwrap_0_9_0.default = true;
    textwrap_0_9_0.term_size =
      (f.textwrap_0_9_0.term_size or false) ||
      (clap_2_31_2.wrap_help or false) ||
      (f.clap_2_31_2.wrap_help or false);
    unicode_width_0_1_4.default = true;
    vec_map_0_8_0.default = true;
  }) [ atty_0_2_8_features bitflags_1_0_1_features strsim_0_7_0_features textwrap_0_9_0_features unicode_width_0_1_4_features vec_map_0_8_0_features ansi_term_0_11_0_features ];
  dtoa_0_4_2 = { features?(dtoa_0_4_2_features {}) }: dtoa_0_4_2_ {};
  dtoa_0_4_2_features = f: updateFeatures f (rec {
    dtoa_0_4_2.default = (f.dtoa_0_4_2.default or true);
  }) [];
  either_1_5_0 = { features?(either_1_5_0_features {}) }: either_1_5_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.either_1_5_0 or {});
  };
  either_1_5_0_features = f: updateFeatures f (rec {
    either_1_5_0.default = (f.either_1_5_0.default or true);
    either_1_5_0.use_std =
      (f.either_1_5_0.use_std or false) ||
      (f.either_1_5_0.default or false) ||
      (either_1_5_0.default or false);
  }) [];
  env_logger_0_5_7 = { features?(env_logger_0_5_7_features {}) }: env_logger_0_5_7_ {
    dependencies = mapFeatures features ([ atty_0_2_8 humantime_1_1_1 log_0_4_1 termcolor_0_3_6 ]
      ++ (if features.env_logger_0_5_7.regex or false then [ regex_0_2_10 ] else []));
    features = mkFeatures (features.env_logger_0_5_7 or {});
  };
  env_logger_0_5_7_features = f: updateFeatures f (rec {
    atty_0_2_8.default = true;
    env_logger_0_5_7.default = (f.env_logger_0_5_7.default or true);
    env_logger_0_5_7.regex =
      (f.env_logger_0_5_7.regex or false) ||
      (f.env_logger_0_5_7.default or false) ||
      (env_logger_0_5_7.default or false);
    humantime_1_1_1.default = true;
    log_0_4_1.default = true;
    log_0_4_1.std = true;
    regex_0_2_10.default = true;
    termcolor_0_3_6.default = true;
  }) [ atty_0_2_8_features humantime_1_1_1_features log_0_4_1_features regex_0_2_10_features termcolor_0_3_6_features ];
  error_chain_0_11_0 = { features?(error_chain_0_11_0_features {}) }: error_chain_0_11_0_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.error_chain_0_11_0.backtrace or false then [ backtrace_0_3_6 ] else []));
    features = mkFeatures (features.error_chain_0_11_0 or {});
  };
  error_chain_0_11_0_features = f: updateFeatures f (rec {
    backtrace_0_3_6.default = true;
    error_chain_0_11_0.backtrace =
      (f.error_chain_0_11_0.backtrace or false) ||
      (f.error_chain_0_11_0.default or false) ||
      (error_chain_0_11_0.default or false);
    error_chain_0_11_0.default = (f.error_chain_0_11_0.default or true);
    error_chain_0_11_0.example_generated =
      (f.error_chain_0_11_0.example_generated or false) ||
      (f.error_chain_0_11_0.default or false) ||
      (error_chain_0_11_0.default or false);
  }) [ backtrace_0_3_6_features ];
  fuchsia_zircon_0_3_3 = { features?(fuchsia_zircon_0_3_3_features {}) }: fuchsia_zircon_0_3_3_ {
    dependencies = mapFeatures features ([ bitflags_1_0_1 fuchsia_zircon_sys_0_3_3 ]);
  };
  fuchsia_zircon_0_3_3_features = f: updateFeatures f (rec {
    bitflags_1_0_1.default = true;
    fuchsia_zircon_0_3_3.default = (f.fuchsia_zircon_0_3_3.default or true);
    fuchsia_zircon_sys_0_3_3.default = true;
  }) [ bitflags_1_0_1_features fuchsia_zircon_sys_0_3_3_features ];
  fuchsia_zircon_sys_0_3_3 = { features?(fuchsia_zircon_sys_0_3_3_features {}) }: fuchsia_zircon_sys_0_3_3_ {};
  fuchsia_zircon_sys_0_3_3_features = f: updateFeatures f (rec {
    fuchsia_zircon_sys_0_3_3.default = (f.fuchsia_zircon_sys_0_3_3.default or true);
  }) [];
  humantime_1_1_1 = { features?(humantime_1_1_1_features {}) }: humantime_1_1_1_ {
    dependencies = mapFeatures features ([ quick_error_1_2_1 ]);
  };
  humantime_1_1_1_features = f: updateFeatures f (rec {
    humantime_1_1_1.default = (f.humantime_1_1_1.default or true);
    quick_error_1_2_1.default = true;
  }) [ quick_error_1_2_1_features ];
  itertools_0_7_8 = { features?(itertools_0_7_8_features {}) }: itertools_0_7_8_ {
    dependencies = mapFeatures features ([ either_1_5_0 ]);
    features = mkFeatures (features.itertools_0_7_8 or {});
  };
  itertools_0_7_8_features = f: updateFeatures f (rec {
    either_1_5_0.default = (f.either_1_5_0.default or false);
    itertools_0_7_8.default = (f.itertools_0_7_8.default or true);
    itertools_0_7_8.use_std =
      (f.itertools_0_7_8.use_std or false) ||
      (f.itertools_0_7_8.default or false) ||
      (itertools_0_7_8.default or false);
  }) [ either_1_5_0_features ];
  itoa_0_4_1 = { features?(itoa_0_4_1_features {}) }: itoa_0_4_1_ {
    features = mkFeatures (features.itoa_0_4_1 or {});
  };
  itoa_0_4_1_features = f: updateFeatures f (rec {
    itoa_0_4_1.default = (f.itoa_0_4_1.default or true);
    itoa_0_4_1.std =
      (f.itoa_0_4_1.std or false) ||
      (f.itoa_0_4_1.default or false) ||
      (itoa_0_4_1.default or false);
  }) [];
  lazy_static_1_0_0 = { features?(lazy_static_1_0_0_features {}) }: lazy_static_1_0_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazy_static_1_0_0 or {});
  };
  lazy_static_1_0_0_features = f: updateFeatures f (rec {
    lazy_static_1_0_0.compiletest_rs =
      (f.lazy_static_1_0_0.compiletest_rs or false) ||
      (f.lazy_static_1_0_0.compiletest or false) ||
      (lazy_static_1_0_0.compiletest or false);
    lazy_static_1_0_0.default = (f.lazy_static_1_0_0.default or true);
    lazy_static_1_0_0.nightly =
      (f.lazy_static_1_0_0.nightly or false) ||
      (f.lazy_static_1_0_0.spin_no_std or false) ||
      (lazy_static_1_0_0.spin_no_std or false);
    lazy_static_1_0_0.spin =
      (f.lazy_static_1_0_0.spin or false) ||
      (f.lazy_static_1_0_0.spin_no_std or false) ||
      (lazy_static_1_0_0.spin_no_std or false);
  }) [];
  libc_0_2_40 = { features?(libc_0_2_40_features {}) }: libc_0_2_40_ {
    features = mkFeatures (features.libc_0_2_40 or {});
  };
  libc_0_2_40_features = f: updateFeatures f (rec {
    libc_0_2_40.default = (f.libc_0_2_40.default or true);
    libc_0_2_40.use_std =
      (f.libc_0_2_40.use_std or false) ||
      (f.libc_0_2_40.default or false) ||
      (libc_0_2_40.default or false);
  }) [];
  libsqlite3_sys_0_9_1 = { features?(libsqlite3_sys_0_9_1_features {}) }: libsqlite3_sys_0_9_1_ {
    dependencies = (if abi == "msvc" then mapFeatures features ([]) else []);
    buildDependencies = mapFeatures features ([ ]
      ++ (if features.libsqlite3_sys_0_9_1.pkg-config or false then [ pkg_config_0_3_9 ] else []));
    features = mkFeatures (features.libsqlite3_sys_0_9_1 or {});
  };
  libsqlite3_sys_0_9_1_features = f: updateFeatures f (rec {
    libsqlite3_sys_0_9_1.bindgen =
      (f.libsqlite3_sys_0_9_1.bindgen or false) ||
      (f.libsqlite3_sys_0_9_1.buildtime_bindgen or false) ||
      (libsqlite3_sys_0_9_1.buildtime_bindgen or false);
    libsqlite3_sys_0_9_1.cc =
      (f.libsqlite3_sys_0_9_1.cc or false) ||
      (f.libsqlite3_sys_0_9_1.bundled or false) ||
      (libsqlite3_sys_0_9_1.bundled or false);
    libsqlite3_sys_0_9_1.default = (f.libsqlite3_sys_0_9_1.default or true);
    libsqlite3_sys_0_9_1.min_sqlite_version_3_6_8 =
      (f.libsqlite3_sys_0_9_1.min_sqlite_version_3_6_8 or false) ||
      (f.libsqlite3_sys_0_9_1.default or false) ||
      (libsqlite3_sys_0_9_1.default or false);
    libsqlite3_sys_0_9_1.pkg-config =
      (f.libsqlite3_sys_0_9_1.pkg-config or false) ||
      (f.libsqlite3_sys_0_9_1.buildtime_bindgen or false) ||
      (libsqlite3_sys_0_9_1.buildtime_bindgen or false) ||
      (f.libsqlite3_sys_0_9_1.min_sqlite_version_3_6_11 or false) ||
      (libsqlite3_sys_0_9_1.min_sqlite_version_3_6_11 or false) ||
      (f.libsqlite3_sys_0_9_1.min_sqlite_version_3_6_23 or false) ||
      (libsqlite3_sys_0_9_1.min_sqlite_version_3_6_23 or false) ||
      (f.libsqlite3_sys_0_9_1.min_sqlite_version_3_6_8 or false) ||
      (libsqlite3_sys_0_9_1.min_sqlite_version_3_6_8 or false) ||
      (f.libsqlite3_sys_0_9_1.min_sqlite_version_3_7_16 or false) ||
      (libsqlite3_sys_0_9_1.min_sqlite_version_3_7_16 or false) ||
      (f.libsqlite3_sys_0_9_1.min_sqlite_version_3_7_3 or false) ||
      (libsqlite3_sys_0_9_1.min_sqlite_version_3_7_3 or false) ||
      (f.libsqlite3_sys_0_9_1.min_sqlite_version_3_7_4 or false) ||
      (libsqlite3_sys_0_9_1.min_sqlite_version_3_7_4 or false);
    libsqlite3_sys_0_9_1.vcpkg =
      (f.libsqlite3_sys_0_9_1.vcpkg or false) ||
      (f.libsqlite3_sys_0_9_1.buildtime_bindgen or false) ||
      (libsqlite3_sys_0_9_1.buildtime_bindgen or false) ||
      (f.libsqlite3_sys_0_9_1.min_sqlite_version_3_6_11 or false) ||
      (libsqlite3_sys_0_9_1.min_sqlite_version_3_6_11 or false) ||
      (f.libsqlite3_sys_0_9_1.min_sqlite_version_3_6_23 or false) ||
      (libsqlite3_sys_0_9_1.min_sqlite_version_3_6_23 or false) ||
      (f.libsqlite3_sys_0_9_1.min_sqlite_version_3_6_8 or false) ||
      (libsqlite3_sys_0_9_1.min_sqlite_version_3_6_8 or false) ||
      (f.libsqlite3_sys_0_9_1.min_sqlite_version_3_7_16 or false) ||
      (libsqlite3_sys_0_9_1.min_sqlite_version_3_7_16 or false) ||
      (f.libsqlite3_sys_0_9_1.min_sqlite_version_3_7_3 or false) ||
      (libsqlite3_sys_0_9_1.min_sqlite_version_3_7_3 or false) ||
      (f.libsqlite3_sys_0_9_1.min_sqlite_version_3_7_4 or false) ||
      (libsqlite3_sys_0_9_1.min_sqlite_version_3_7_4 or false);
    pkg_config_0_3_9.default = true;
  }) [ pkg_config_0_3_9_features ];
  linked_hash_map_0_4_2 = { features?(linked_hash_map_0_4_2_features {}) }: linked_hash_map_0_4_2_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.linked_hash_map_0_4_2 or {});
  };
  linked_hash_map_0_4_2_features = f: updateFeatures f (rec {
    linked_hash_map_0_4_2.default = (f.linked_hash_map_0_4_2.default or true);
    linked_hash_map_0_4_2.heapsize =
      (f.linked_hash_map_0_4_2.heapsize or false) ||
      (f.linked_hash_map_0_4_2.heapsize_impl or false) ||
      (linked_hash_map_0_4_2.heapsize_impl or false);
    linked_hash_map_0_4_2.serde =
      (f.linked_hash_map_0_4_2.serde or false) ||
      (f.linked_hash_map_0_4_2.serde_impl or false) ||
      (linked_hash_map_0_4_2.serde_impl or false);
    linked_hash_map_0_4_2.serde_test =
      (f.linked_hash_map_0_4_2.serde_test or false) ||
      (f.linked_hash_map_0_4_2.serde_impl or false) ||
      (linked_hash_map_0_4_2.serde_impl or false);
  }) [];
  log_0_4_1 = { features?(log_0_4_1_features {}) }: log_0_4_1_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 ]);
    features = mkFeatures (features.log_0_4_1 or {});
  };
  log_0_4_1_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = true;
    log_0_4_1.default = (f.log_0_4_1.default or true);
  }) [ cfg_if_0_1_2_features ];
  lru_cache_0_1_1 = { features?(lru_cache_0_1_1_features {}) }: lru_cache_0_1_1_ {
    dependencies = mapFeatures features ([ linked_hash_map_0_4_2 ]);
    features = mkFeatures (features.lru_cache_0_1_1 or {});
  };
  lru_cache_0_1_1_features = f: updateFeatures f (rec {
    linked_hash_map_0_4_2.default = true;
    linked_hash_map_0_4_2.heapsize_impl =
      (f.linked_hash_map_0_4_2.heapsize_impl or false) ||
      (lru_cache_0_1_1.heapsize_impl or false) ||
      (f.lru_cache_0_1_1.heapsize_impl or false);
    lru_cache_0_1_1.default = (f.lru_cache_0_1_1.default or true);
    lru_cache_0_1_1.heapsize =
      (f.lru_cache_0_1_1.heapsize or false) ||
      (f.lru_cache_0_1_1.heapsize_impl or false) ||
      (lru_cache_0_1_1.heapsize_impl or false);
  }) [ linked_hash_map_0_4_2_features ];
  memchr_1_0_2 = { features?(memchr_1_0_2_features {}) }: memchr_1_0_2_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.memchr_1_0_2.libc or false then [ libc_0_2_40 ] else []));
    features = mkFeatures (features.memchr_1_0_2 or {});
  };
  memchr_1_0_2_features = f: updateFeatures f (rec {
    libc_0_2_40.default = (f.libc_0_2_40.default or false);
    libc_0_2_40.use_std =
      (f.libc_0_2_40.use_std or false) ||
      (memchr_1_0_2.use_std or false) ||
      (f.memchr_1_0_2.use_std or false);
    memchr_1_0_2.default = (f.memchr_1_0_2.default or true);
    memchr_1_0_2.libc =
      (f.memchr_1_0_2.libc or false) ||
      (f.memchr_1_0_2.default or false) ||
      (memchr_1_0_2.default or false) ||
      (f.memchr_1_0_2.use_std or false) ||
      (memchr_1_0_2.use_std or false);
    memchr_1_0_2.use_std =
      (f.memchr_1_0_2.use_std or false) ||
      (f.memchr_1_0_2.default or false) ||
      (memchr_1_0_2.default or false);
  }) [ libc_0_2_40_features ];
  memchr_2_0_1 = { features?(memchr_2_0_1_features {}) }: memchr_2_0_1_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.memchr_2_0_1.libc or false then [ libc_0_2_40 ] else []));
    features = mkFeatures (features.memchr_2_0_1 or {});
  };
  memchr_2_0_1_features = f: updateFeatures f (rec {
    libc_0_2_40.default = (f.libc_0_2_40.default or false);
    libc_0_2_40.use_std =
      (f.libc_0_2_40.use_std or false) ||
      (memchr_2_0_1.use_std or false) ||
      (f.memchr_2_0_1.use_std or false);
    memchr_2_0_1.default = (f.memchr_2_0_1.default or true);
    memchr_2_0_1.libc =
      (f.memchr_2_0_1.libc or false) ||
      (f.memchr_2_0_1.default or false) ||
      (memchr_2_0_1.default or false) ||
      (f.memchr_2_0_1.use_std or false) ||
      (memchr_2_0_1.use_std or false);
    memchr_2_0_1.use_std =
      (f.memchr_2_0_1.use_std or false) ||
      (f.memchr_2_0_1.default or false) ||
      (memchr_2_0_1.default or false);
  }) [ libc_0_2_40_features ];
  nom_3_2_1 = { features?(nom_3_2_1_features {}) }: nom_3_2_1_ {
    dependencies = mapFeatures features ([ memchr_1_0_2 ]);
    features = mkFeatures (features.nom_3_2_1 or {});
  };
  nom_3_2_1_features = f: updateFeatures f (rec {
    memchr_1_0_2.default = (f.memchr_1_0_2.default or false);
    memchr_1_0_2.use_std =
      (f.memchr_1_0_2.use_std or false) ||
      (nom_3_2_1.std or false) ||
      (f.nom_3_2_1.std or false);
    nom_3_2_1.compiler_error =
      (f.nom_3_2_1.compiler_error or false) ||
      (f.nom_3_2_1.nightly or false) ||
      (nom_3_2_1.nightly or false);
    nom_3_2_1.default = (f.nom_3_2_1.default or true);
    nom_3_2_1.lazy_static =
      (f.nom_3_2_1.lazy_static or false) ||
      (f.nom_3_2_1.regexp_macros or false) ||
      (nom_3_2_1.regexp_macros or false);
    nom_3_2_1.regex =
      (f.nom_3_2_1.regex or false) ||
      (f.nom_3_2_1.regexp or false) ||
      (nom_3_2_1.regexp or false);
    nom_3_2_1.regexp =
      (f.nom_3_2_1.regexp or false) ||
      (f.nom_3_2_1.regexp_macros or false) ||
      (nom_3_2_1.regexp_macros or false);
    nom_3_2_1.std =
      (f.nom_3_2_1.std or false) ||
      (f.nom_3_2_1.default or false) ||
      (nom_3_2_1.default or false);
    nom_3_2_1.stream =
      (f.nom_3_2_1.stream or false) ||
      (f.nom_3_2_1.default or false) ||
      (nom_3_2_1.default or false);
  }) [ memchr_1_0_2_features ];
  num_traits_0_2_2 = { features?(num_traits_0_2_2_features {}) }: num_traits_0_2_2_ {
    features = mkFeatures (features.num_traits_0_2_2 or {});
  };
  num_traits_0_2_2_features = f: updateFeatures f (rec {
    num_traits_0_2_2.default = (f.num_traits_0_2_2.default or true);
    num_traits_0_2_2.std =
      (f.num_traits_0_2_2.std or false) ||
      (f.num_traits_0_2_2.default or false) ||
      (num_traits_0_2_2.default or false);
  }) [];
  pkg_config_0_3_9 = { features?(pkg_config_0_3_9_features {}) }: pkg_config_0_3_9_ {};
  pkg_config_0_3_9_features = f: updateFeatures f (rec {
    pkg_config_0_3_9.default = (f.pkg_config_0_3_9.default or true);
  }) [];
  proc_macro2_0_3_6 = { features?(proc_macro2_0_3_6_features {}) }: proc_macro2_0_3_6_ {
    dependencies = mapFeatures features ([ unicode_xid_0_1_0 ]);
    features = mkFeatures (features.proc_macro2_0_3_6 or {});
  };
  proc_macro2_0_3_6_features = f: updateFeatures f (rec {
    proc_macro2_0_3_6.default = (f.proc_macro2_0_3_6.default or true);
    proc_macro2_0_3_6.proc-macro =
      (f.proc_macro2_0_3_6.proc-macro or false) ||
      (f.proc_macro2_0_3_6.default or false) ||
      (proc_macro2_0_3_6.default or false) ||
      (f.proc_macro2_0_3_6.nightly or false) ||
      (proc_macro2_0_3_6.nightly or false);
    unicode_xid_0_1_0.default = true;
  }) [ unicode_xid_0_1_0_features ];
  quick_error_1_2_1 = { features?(quick_error_1_2_1_features {}) }: quick_error_1_2_1_ {};
  quick_error_1_2_1_features = f: updateFeatures f (rec {
    quick_error_1_2_1.default = (f.quick_error_1_2_1.default or true);
  }) [];
  quote_0_5_1 = { features?(quote_0_5_1_features {}) }: quote_0_5_1_ {
    dependencies = mapFeatures features ([ proc_macro2_0_3_6 ]);
    features = mkFeatures (features.quote_0_5_1 or {});
  };
  quote_0_5_1_features = f: updateFeatures f (rec {
    proc_macro2_0_3_6.default = (f.proc_macro2_0_3_6.default or false);
    proc_macro2_0_3_6.proc-macro =
      (f.proc_macro2_0_3_6.proc-macro or false) ||
      (quote_0_5_1.proc-macro or false) ||
      (f.quote_0_5_1.proc-macro or false);
    quote_0_5_1.default = (f.quote_0_5_1.default or true);
    quote_0_5_1.proc-macro =
      (f.quote_0_5_1.proc-macro or false) ||
      (f.quote_0_5_1.default or false) ||
      (quote_0_5_1.default or false);
  }) [ proc_macro2_0_3_6_features ];
  rand_0_4_2 = { features?(rand_0_4_2_features {}) }: rand_0_4_2_ {
    dependencies = (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_3_3 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ ]
      ++ (if features.rand_0_4_2.libc or false then [ libc_0_2_40 ] else [])) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
    features = mkFeatures (features.rand_0_4_2 or {});
  };
  rand_0_4_2_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_3_3.default = true;
    libc_0_2_40.default = true;
    rand_0_4_2.default = (f.rand_0_4_2.default or true);
    rand_0_4_2.i128_support =
      (f.rand_0_4_2.i128_support or false) ||
      (f.rand_0_4_2.nightly or false) ||
      (rand_0_4_2.nightly or false);
    rand_0_4_2.libc =
      (f.rand_0_4_2.libc or false) ||
      (f.rand_0_4_2.std or false) ||
      (rand_0_4_2.std or false);
    rand_0_4_2.std =
      (f.rand_0_4_2.std or false) ||
      (f.rand_0_4_2.default or false) ||
      (rand_0_4_2.default or false);
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.ntsecapi = true;
    winapi_0_3_4.profileapi = true;
    winapi_0_3_4.winnt = true;
  }) [ fuchsia_zircon_0_3_3_features libc_0_2_40_features winapi_0_3_4_features ];
  redox_syscall_0_1_37 = { features?(redox_syscall_0_1_37_features {}) }: redox_syscall_0_1_37_ {};
  redox_syscall_0_1_37_features = f: updateFeatures f (rec {
    redox_syscall_0_1_37.default = (f.redox_syscall_0_1_37.default or true);
  }) [];
  redox_termios_0_1_1 = { features?(redox_termios_0_1_1_features {}) }: redox_termios_0_1_1_ {
    dependencies = mapFeatures features ([ redox_syscall_0_1_37 ]);
  };
  redox_termios_0_1_1_features = f: updateFeatures f (rec {
    redox_syscall_0_1_37.default = true;
    redox_termios_0_1_1.default = (f.redox_termios_0_1_1.default or true);
  }) [ redox_syscall_0_1_37_features ];
  regex_0_2_10 = { features?(regex_0_2_10_features {}) }: regex_0_2_10_ {
    dependencies = mapFeatures features ([ aho_corasick_0_6_4 memchr_2_0_1 regex_syntax_0_5_5 thread_local_0_3_5 utf8_ranges_1_0_0 ]);
    features = mkFeatures (features.regex_0_2_10 or {});
  };
  regex_0_2_10_features = f: updateFeatures f (rec {
    aho_corasick_0_6_4.default = true;
    memchr_2_0_1.default = true;
    regex_0_2_10.default = (f.regex_0_2_10.default or true);
    regex_0_2_10.pattern =
      (f.regex_0_2_10.pattern or false) ||
      (f.regex_0_2_10.unstable or false) ||
      (regex_0_2_10.unstable or false);
    regex_syntax_0_5_5.default = true;
    thread_local_0_3_5.default = true;
    utf8_ranges_1_0_0.default = true;
  }) [ aho_corasick_0_6_4_features memchr_2_0_1_features regex_syntax_0_5_5_features thread_local_0_3_5_features utf8_ranges_1_0_0_features ];
  regex_syntax_0_5_5 = { features?(regex_syntax_0_5_5_features {}) }: regex_syntax_0_5_5_ {
    dependencies = mapFeatures features ([ ucd_util_0_1_1 ]);
  };
  regex_syntax_0_5_5_features = f: updateFeatures f (rec {
    regex_syntax_0_5_5.default = (f.regex_syntax_0_5_5.default or true);
    ucd_util_0_1_1.default = true;
  }) [ ucd_util_0_1_1_features ];
  remove_dir_all_0_5_0 = { features?(remove_dir_all_0_5_0_features {}) }: remove_dir_all_0_5_0_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  remove_dir_all_0_5_0_features = f: updateFeatures f (rec {
    remove_dir_all_0_5_0.default = (f.remove_dir_all_0_5_0.default or true);
    winapi_0_3_4.default = true;
    winapi_0_3_4.errhandlingapi = true;
    winapi_0_3_4.fileapi = true;
    winapi_0_3_4.std = true;
    winapi_0_3_4.winbase = true;
    winapi_0_3_4.winerror = true;
  }) [ winapi_0_3_4_features ];
  rusqlite_0_13_0 = { features?(rusqlite_0_13_0_features {}) }: rusqlite_0_13_0_ {
    dependencies = mapFeatures features ([ bitflags_1_0_1 libsqlite3_sys_0_9_1 lru_cache_0_1_1 time_0_1_39 ]);
    features = mkFeatures (features.rusqlite_0_13_0 or {});
  };
  rusqlite_0_13_0_features = f: updateFeatures f (rec {
    bitflags_1_0_1.default = true;
    libsqlite3_sys_0_9_1.buildtime_bindgen =
      (f.libsqlite3_sys_0_9_1.buildtime_bindgen or false) ||
      (rusqlite_0_13_0.buildtime_bindgen or false) ||
      (f.rusqlite_0_13_0.buildtime_bindgen or false);
    libsqlite3_sys_0_9_1.bundled =
      (f.libsqlite3_sys_0_9_1.bundled or false) ||
      (rusqlite_0_13_0.bundled or false) ||
      (f.rusqlite_0_13_0.bundled or false);
    libsqlite3_sys_0_9_1.default = true;
    libsqlite3_sys_0_9_1.min_sqlite_version_3_6_11 =
      (f.libsqlite3_sys_0_9_1.min_sqlite_version_3_6_11 or false) ||
      (rusqlite_0_13_0.backup or false) ||
      (f.rusqlite_0_13_0.backup or false);
    libsqlite3_sys_0_9_1.min_sqlite_version_3_6_23 =
      (f.libsqlite3_sys_0_9_1.min_sqlite_version_3_6_23 or false) ||
      (rusqlite_0_13_0.trace or false) ||
      (f.rusqlite_0_13_0.trace or false);
    libsqlite3_sys_0_9_1.min_sqlite_version_3_7_3 =
      (f.libsqlite3_sys_0_9_1.min_sqlite_version_3_7_3 or false) ||
      (rusqlite_0_13_0.functions or false) ||
      (f.rusqlite_0_13_0.functions or false);
    libsqlite3_sys_0_9_1.min_sqlite_version_3_7_4 =
      (f.libsqlite3_sys_0_9_1.min_sqlite_version_3_7_4 or false) ||
      (rusqlite_0_13_0.blob or false) ||
      (f.rusqlite_0_13_0.blob or false);
    libsqlite3_sys_0_9_1.sqlcipher =
      (f.libsqlite3_sys_0_9_1.sqlcipher or false) ||
      (rusqlite_0_13_0.sqlcipher or false) ||
      (f.rusqlite_0_13_0.sqlcipher or false);
    lru_cache_0_1_1.default = true;
    rusqlite_0_13_0.default = (f.rusqlite_0_13_0.default or true);
    time_0_1_39.default = true;
  }) [ bitflags_1_0_1_features libsqlite3_sys_0_9_1_features lru_cache_0_1_1_features time_0_1_39_features ];
  rustc_demangle_0_1_7 = { features?(rustc_demangle_0_1_7_features {}) }: rustc_demangle_0_1_7_ {};
  rustc_demangle_0_1_7_features = f: updateFeatures f (rec {
    rustc_demangle_0_1_7.default = (f.rustc_demangle_0_1_7.default or true);
  }) [];
  serde_1_0_38 = { features?(serde_1_0_38_features {}) }: serde_1_0_38_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.serde_1_0_38 or {});
  };
  serde_1_0_38_features = f: updateFeatures f (rec {
    serde_1_0_38.default = (f.serde_1_0_38.default or true);
    serde_1_0_38.serde_derive =
      (f.serde_1_0_38.serde_derive or false) ||
      (f.serde_1_0_38.derive or false) ||
      (serde_1_0_38.derive or false) ||
      (f.serde_1_0_38.playground or false) ||
      (serde_1_0_38.playground or false);
    serde_1_0_38.std =
      (f.serde_1_0_38.std or false) ||
      (f.serde_1_0_38.default or false) ||
      (serde_1_0_38.default or false);
    serde_1_0_38.unstable =
      (f.serde_1_0_38.unstable or false) ||
      (f.serde_1_0_38.alloc or false) ||
      (serde_1_0_38.alloc or false);
  }) [];
  serde_derive_1_0_38 = { features?(serde_derive_1_0_38_features {}) }: serde_derive_1_0_38_ {
    dependencies = mapFeatures features ([ proc_macro2_0_3_6 quote_0_5_1 serde_derive_internals_0_23_1 syn_0_13_1 ]);
    features = mkFeatures (features.serde_derive_1_0_38 or {});
  };
  serde_derive_1_0_38_features = f: updateFeatures f (rec {
    proc_macro2_0_3_6.default = true;
    quote_0_5_1.default = true;
    serde_derive_1_0_38.default = (f.serde_derive_1_0_38.default or true);
    serde_derive_internals_0_23_1.default = (f.serde_derive_internals_0_23_1.default or false);
    syn_0_13_1.default = true;
    syn_0_13_1.visit = true;
  }) [ proc_macro2_0_3_6_features quote_0_5_1_features serde_derive_internals_0_23_1_features syn_0_13_1_features ];
  serde_derive_internals_0_23_1 = { features?(serde_derive_internals_0_23_1_features {}) }: serde_derive_internals_0_23_1_ {
    dependencies = mapFeatures features ([ proc_macro2_0_3_6 syn_0_13_1 ]);
  };
  serde_derive_internals_0_23_1_features = f: updateFeatures f (rec {
    proc_macro2_0_3_6.default = true;
    serde_derive_internals_0_23_1.default = (f.serde_derive_internals_0_23_1.default or true);
    syn_0_13_1.clone-impls = true;
    syn_0_13_1.default = (f.syn_0_13_1.default or false);
    syn_0_13_1.derive = true;
    syn_0_13_1.parsing = true;
  }) [ proc_macro2_0_3_6_features syn_0_13_1_features ];
  serde_json_1_0_14 = { features?(serde_json_1_0_14_features {}) }: serde_json_1_0_14_ {
    dependencies = mapFeatures features ([ dtoa_0_4_2 itoa_0_4_1 num_traits_0_2_2 serde_1_0_38 ]);
    features = mkFeatures (features.serde_json_1_0_14 or {});
  };
  serde_json_1_0_14_features = f: updateFeatures f (rec {
    dtoa_0_4_2.default = true;
    itoa_0_4_1.default = true;
    num_traits_0_2_2.default = (f.num_traits_0_2_2.default or false);
    serde_1_0_38.default = true;
    serde_json_1_0_14.default = (f.serde_json_1_0_14.default or true);
    serde_json_1_0_14.linked-hash-map =
      (f.serde_json_1_0_14.linked-hash-map or false) ||
      (f.serde_json_1_0_14.preserve_order or false) ||
      (serde_json_1_0_14.preserve_order or false);
  }) [ dtoa_0_4_2_features itoa_0_4_1_features num_traits_0_2_2_features serde_1_0_38_features ];
  strsim_0_7_0 = { features?(strsim_0_7_0_features {}) }: strsim_0_7_0_ {};
  strsim_0_7_0_features = f: updateFeatures f (rec {
    strsim_0_7_0.default = (f.strsim_0_7_0.default or true);
  }) [];
  syn_0_13_1 = { features?(syn_0_13_1_features {}) }: syn_0_13_1_ {
    dependencies = mapFeatures features ([ proc_macro2_0_3_6 unicode_xid_0_1_0 ]
      ++ (if features.syn_0_13_1.quote or false then [ quote_0_5_1 ] else []));
    features = mkFeatures (features.syn_0_13_1 or {});
  };
  syn_0_13_1_features = f: updateFeatures f (rec {
    proc_macro2_0_3_6.default = (f.proc_macro2_0_3_6.default or false);
    proc_macro2_0_3_6.proc-macro =
      (f.proc_macro2_0_3_6.proc-macro or false) ||
      (syn_0_13_1.proc-macro or false) ||
      (f.syn_0_13_1.proc-macro or false);
    quote_0_5_1.default = (f.quote_0_5_1.default or false);
    quote_0_5_1.proc-macro =
      (f.quote_0_5_1.proc-macro or false) ||
      (syn_0_13_1.proc-macro or false) ||
      (f.syn_0_13_1.proc-macro or false);
    syn_0_13_1.clone-impls =
      (f.syn_0_13_1.clone-impls or false) ||
      (f.syn_0_13_1.default or false) ||
      (syn_0_13_1.default or false);
    syn_0_13_1.default = (f.syn_0_13_1.default or true);
    syn_0_13_1.derive =
      (f.syn_0_13_1.derive or false) ||
      (f.syn_0_13_1.default or false) ||
      (syn_0_13_1.default or false);
    syn_0_13_1.parsing =
      (f.syn_0_13_1.parsing or false) ||
      (f.syn_0_13_1.default or false) ||
      (syn_0_13_1.default or false);
    syn_0_13_1.printing =
      (f.syn_0_13_1.printing or false) ||
      (f.syn_0_13_1.default or false) ||
      (syn_0_13_1.default or false);
    syn_0_13_1.proc-macro =
      (f.syn_0_13_1.proc-macro or false) ||
      (f.syn_0_13_1.default or false) ||
      (syn_0_13_1.default or false);
    syn_0_13_1.quote =
      (f.syn_0_13_1.quote or false) ||
      (f.syn_0_13_1.printing or false) ||
      (syn_0_13_1.printing or false);
    unicode_xid_0_1_0.default = true;
  }) [ proc_macro2_0_3_6_features quote_0_5_1_features unicode_xid_0_1_0_features ];
  tempdir_0_3_7 = { features?(tempdir_0_3_7_features {}) }: tempdir_0_3_7_ {
    dependencies = mapFeatures features ([ rand_0_4_2 remove_dir_all_0_5_0 ]);
  };
  tempdir_0_3_7_features = f: updateFeatures f (rec {
    rand_0_4_2.default = true;
    remove_dir_all_0_5_0.default = true;
    tempdir_0_3_7.default = (f.tempdir_0_3_7.default or true);
  }) [ rand_0_4_2_features remove_dir_all_0_5_0_features ];
  termcolor_0_3_6 = { features?(termcolor_0_3_6_features {}) }: termcolor_0_3_6_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ wincolor_0_1_6 ]) else []);
  };
  termcolor_0_3_6_features = f: updateFeatures f (rec {
    termcolor_0_3_6.default = (f.termcolor_0_3_6.default or true);
    wincolor_0_1_6.default = true;
  }) [ wincolor_0_1_6_features ];
  termion_1_5_1 = { features?(termion_1_5_1_features {}) }: termion_1_5_1_ {
    dependencies = (if !(kernel == "redox") then mapFeatures features ([ libc_0_2_40 ]) else [])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_37 redox_termios_0_1_1 ]) else []);
  };
  termion_1_5_1_features = f: updateFeatures f (rec {
    libc_0_2_40.default = true;
    redox_syscall_0_1_37.default = true;
    redox_termios_0_1_1.default = true;
    termion_1_5_1.default = (f.termion_1_5_1.default or true);
  }) [ libc_0_2_40_features redox_syscall_0_1_37_features redox_termios_0_1_1_features ];
  textwrap_0_9_0 = { features?(textwrap_0_9_0_features {}) }: textwrap_0_9_0_ {
    dependencies = mapFeatures features ([ unicode_width_0_1_4 ]);
  };
  textwrap_0_9_0_features = f: updateFeatures f (rec {
    textwrap_0_9_0.default = (f.textwrap_0_9_0.default or true);
    unicode_width_0_1_4.default = true;
  }) [ unicode_width_0_1_4_features ];
  thread_local_0_3_5 = { features?(thread_local_0_3_5_features {}) }: thread_local_0_3_5_ {
    dependencies = mapFeatures features ([ lazy_static_1_0_0 unreachable_1_0_0 ]);
  };
  thread_local_0_3_5_features = f: updateFeatures f (rec {
    lazy_static_1_0_0.default = true;
    thread_local_0_3_5.default = (f.thread_local_0_3_5.default or true);
    unreachable_1_0_0.default = true;
  }) [ lazy_static_1_0_0_features unreachable_1_0_0_features ];
  time_0_1_39 = { features?(time_0_1_39_features {}) }: time_0_1_39_ {
    dependencies = mapFeatures features ([ libc_0_2_40 ])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_37 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  time_0_1_39_features = f: updateFeatures f (rec {
    libc_0_2_40.default = true;
    redox_syscall_0_1_37.default = true;
    time_0_1_39.default = (f.time_0_1_39.default or true);
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwinbase = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.ntdef = true;
    winapi_0_3_4.profileapi = true;
    winapi_0_3_4.std = true;
    winapi_0_3_4.sysinfoapi = true;
    winapi_0_3_4.timezoneapi = true;
  }) [ libc_0_2_40_features redox_syscall_0_1_37_features winapi_0_3_4_features ];
  toml_0_4_6 = { features?(toml_0_4_6_features {}) }: toml_0_4_6_ {
    dependencies = mapFeatures features ([ serde_1_0_38 ]);
  };
  toml_0_4_6_features = f: updateFeatures f (rec {
    serde_1_0_38.default = true;
    toml_0_4_6.default = (f.toml_0_4_6.default or true);
  }) [ serde_1_0_38_features ];
  ucd_util_0_1_1 = { features?(ucd_util_0_1_1_features {}) }: ucd_util_0_1_1_ {};
  ucd_util_0_1_1_features = f: updateFeatures f (rec {
    ucd_util_0_1_1.default = (f.ucd_util_0_1_1.default or true);
  }) [];
  unicode_width_0_1_4 = { features?(unicode_width_0_1_4_features {}) }: unicode_width_0_1_4_ {
    features = mkFeatures (features.unicode_width_0_1_4 or {});
  };
  unicode_width_0_1_4_features = f: updateFeatures f (rec {
    unicode_width_0_1_4.default = (f.unicode_width_0_1_4.default or true);
  }) [];
  unicode_xid_0_1_0 = { features?(unicode_xid_0_1_0_features {}) }: unicode_xid_0_1_0_ {
    features = mkFeatures (features.unicode_xid_0_1_0 or {});
  };
  unicode_xid_0_1_0_features = f: updateFeatures f (rec {
    unicode_xid_0_1_0.default = (f.unicode_xid_0_1_0.default or true);
  }) [];
  unreachable_1_0_0 = { features?(unreachable_1_0_0_features {}) }: unreachable_1_0_0_ {
    dependencies = mapFeatures features ([ void_1_0_2 ]);
  };
  unreachable_1_0_0_features = f: updateFeatures f (rec {
    unreachable_1_0_0.default = (f.unreachable_1_0_0.default or true);
    void_1_0_2.default = (f.void_1_0_2.default or false);
  }) [ void_1_0_2_features ];
  utf8_ranges_1_0_0 = { features?(utf8_ranges_1_0_0_features {}) }: utf8_ranges_1_0_0_ {};
  utf8_ranges_1_0_0_features = f: updateFeatures f (rec {
    utf8_ranges_1_0_0.default = (f.utf8_ranges_1_0_0.default or true);
  }) [];
  vcpkg_0_2_3 = { features?(vcpkg_0_2_3_features {}) }: vcpkg_0_2_3_ {};
  vcpkg_0_2_3_features = f: updateFeatures f (rec {
    vcpkg_0_2_3.default = (f.vcpkg_0_2_3.default or true);
  }) [];
  vec_map_0_8_0 = { features?(vec_map_0_8_0_features {}) }: vec_map_0_8_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.vec_map_0_8_0 or {});
  };
  vec_map_0_8_0_features = f: updateFeatures f (rec {
    vec_map_0_8_0.default = (f.vec_map_0_8_0.default or true);
    vec_map_0_8_0.serde =
      (f.vec_map_0_8_0.serde or false) ||
      (f.vec_map_0_8_0.eders or false) ||
      (vec_map_0_8_0.eders or false);
    vec_map_0_8_0.serde_derive =
      (f.vec_map_0_8_0.serde_derive or false) ||
      (f.vec_map_0_8_0.eders or false) ||
      (vec_map_0_8_0.eders or false);
  }) [];
  void_1_0_2 = { features?(void_1_0_2_features {}) }: void_1_0_2_ {
    features = mkFeatures (features.void_1_0_2 or {});
  };
  void_1_0_2_features = f: updateFeatures f (rec {
    void_1_0_2.default = (f.void_1_0_2.default or true);
    void_1_0_2.std =
      (f.void_1_0_2.std or false) ||
      (f.void_1_0_2.default or false) ||
      (void_1_0_2.default or false);
  }) [];
  winapi_0_3_4 = { features?(winapi_0_3_4_features {}) }: winapi_0_3_4_ {
    dependencies = (if kernel == "i686-pc-windows-gnu" then mapFeatures features ([ winapi_i686_pc_windows_gnu_0_4_0 ]) else [])
      ++ (if kernel == "x86_64-pc-windows-gnu" then mapFeatures features ([ winapi_x86_64_pc_windows_gnu_0_4_0 ]) else []);
    features = mkFeatures (features.winapi_0_3_4 or {});
  };
  winapi_0_3_4_features = f: updateFeatures f (rec {
    winapi_0_3_4.default = (f.winapi_0_3_4.default or true);
    winapi_i686_pc_windows_gnu_0_4_0.default = true;
    winapi_x86_64_pc_windows_gnu_0_4_0.default = true;
  }) [ winapi_i686_pc_windows_gnu_0_4_0_features winapi_x86_64_pc_windows_gnu_0_4_0_features ];
  winapi_i686_pc_windows_gnu_0_4_0 = { features?(winapi_i686_pc_windows_gnu_0_4_0_features {}) }: winapi_i686_pc_windows_gnu_0_4_0_ {};
  winapi_i686_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_i686_pc_windows_gnu_0_4_0.default = (f.winapi_i686_pc_windows_gnu_0_4_0.default or true);
  }) [];
  winapi_x86_64_pc_windows_gnu_0_4_0 = { features?(winapi_x86_64_pc_windows_gnu_0_4_0_features {}) }: winapi_x86_64_pc_windows_gnu_0_4_0_ {};
  winapi_x86_64_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_x86_64_pc_windows_gnu_0_4_0.default = (f.winapi_x86_64_pc_windows_gnu_0_4_0.default or true);
  }) [];
  wincolor_0_1_6 = { features?(wincolor_0_1_6_features {}) }: wincolor_0_1_6_ {
    dependencies = mapFeatures features ([ winapi_0_3_4 ]);
  };
  wincolor_0_1_6_features = f: updateFeatures f (rec {
    winapi_0_3_4.consoleapi = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.processenv = true;
    winapi_0_3_4.winbase = true;
    winapi_0_3_4.wincon = true;
    wincolor_0_1_6.default = (f.wincolor_0_1_6.default or true);
  }) [ winapi_0_3_4_features ];
}
