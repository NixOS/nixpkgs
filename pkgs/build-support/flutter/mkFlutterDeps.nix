{ flutter
, stdenvNoCC
, lib
, nukeReferences
, cacert
}:
args@{ appName
, flutterDeps
, placeholder_deps
, placeholder_flutter
, outputHashAlgo
, outputHash
, ...
}:

stdenvNoCC.mkDerivation (args // {
  name = "${appName}-deps-flutter-v${flutter.unwrapped.version}-${stdenvNoCC.targetPlatform.system}.tar.gz";

  nativeBuildInputs = flutterDeps ++ [
    nukeReferences
  ];

  # avoid pub phase
  dontBuild = true;

  installPhase = ''
    . ${../fetchgit/deterministic-git}

    TMP=$(mktemp -d)

    export HOME="$TMP"
    export PUB_CACHE=''${PUB_CACHE:-"$HOME/.pub-cache"}
    export ANDROID_EMULATOR_USE_SYSTEM_LIBS=1

    flutter config --no-analytics &>/dev/null # mute first-run
    flutter config --enable-linux-desktop
    flutter packages get
    flutter build linux || true # so it downloads tools
    ${lib.optionalString (args ? flutterExtraFetchCommands) args.flutterExtraFetchCommands}

    RES="$TMP"

    mkdir -p "$RES/f"

    # so we can use lock, diff yaml
    cp "pubspec.yaml" "$RES"
    cp "pubspec.lock" "$RES"
    [[ -e .packages ]] && mv .packages "$RES/f"
    mv .dart_tool .flutter-plugins .flutter-plugins-dependencies "$RES/f"

    # replace paths with placeholders
    find "$RES" -type f -exec sed -i \
      -e s,$TMP,${placeholder_deps},g \
      -e s,${flutter.unwrapped},${placeholder_flutter},g \
      {} +

    remove_line_matching() {
      replace_line_matching "$1" "$2" ""
    }

    replace_line_matching() {
      sed "s|.*$2.*|$3|g" -r -i "$1"
    }

    # nuke nondeterminism

    # clientId is random
    remove_line_matching "$RES/.flutter" clientId

    # deterministic git repos
    find "$RES" -iname .git -type d | while read -r repoGit; do
      make_deterministic_repo "$(dirname "$repoGit")"
    done

    # dart _fetchedAt, etc
    DART_DATE=$(date --date="@$SOURCE_DATE_EPOCH" -In | sed "s|,|.|g" | sed "s|+.*||g")
    find "$RES/.pub-cache" -iname "*.json" -exec sed -r 's|.*_fetchedAt.*|    "_fetchedAt": "'"$DART_DATE"'",|g' -i {} +
    replace_line_matching "$RES/f/.dart_tool/package_config.json" '"generated"' '"generated": "'"$DART_DATE"'",'
    replace_line_matching "$RES/f/.flutter-plugins-dependencies" '"date_created"' '"date_created": "'"$DART_DATE"'",'
    [[ -e "$RES/f/.packages" ]] && remove_line_matching "$RES/f/.packages" "Generated by pub"

    # nuke refs
    find "$RES" -type f -exec nuke-refs {} +

    # Build a reproducible tar, per instructions at https://reproducible-builds.org/docs/archives/
    tar --owner=0 --group=0 --numeric-owner --format=gnu \
        --sort=name --mtime="@$SOURCE_DATE_EPOCH" \
        -czf "$out" -C "$RES" .
  '';

  GIT_SSL_CAINFO = "${cacert}/etc/ssl/certs/ca-bundle.crt";
  SSL_CERT_FILE = "${cacert}/etc/ssl/certs/ca-bundle.crt";

  impureEnvVars = lib.fetchers.proxyImpureEnvVars ++ [
    "GIT_PROXY_COMMAND"
    "NIX_GIT_SSL_CAINFO"
    "SOCKS_SERVER"
  ];

  # unnecesarry
  dontFixup = true;

})
