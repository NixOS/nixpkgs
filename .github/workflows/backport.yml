name: Backport
on:
  pull_request_target:
    types: [closed, labeled]

# WARNING:
# When extending this action, be aware that $GITHUB_TOKEN allows write access to
# the GitHub repository. This means that it should not evaluate user input in a
# way that allows code injection.

permissions:
  contents: read

jobs:
  backport:
    permissions:
      contents: write # for korthout/backport-action to create branch
      pull-requests: write # for korthout/backport-action to create PR to backport
    name: Backport Pull Request
    if: github.repository_owner == 'NixOS' && github.event.pull_request.merged == true && (github.event_name != 'labeled' || startsWith('backport', github.event.label.name))
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Create backport PRs
        uses: korthout/backport-action@ef20d86abccbac3ee3a73cb2efbdc06344c390e5 # v2.5.0
        with:
          # Config README: https://github.com/korthout/backport-action#backport-action
          copy_labels_pattern: 'severity:\ssecurity'
          pull_description: |-
            Bot-based backport to `${target_branch}`, triggered by a label in #${pull_number}.

            Before merging, ensure that this backport is [acceptable for the stable release](https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#changes-acceptable-for-releases), and tick all boxes that apply.
            As a non-committer unable to tick the checkboxes: if you find that this backport is not acceptable, do leave a comment and consider closing this PR.

            Backwards-compatible changes that are generally okay to backport:

            * [ ] The PR adds new packages, modules and functions
            * [ ] The PR adds security fixes
            * [ ] The PR contains patch version updates
            * [ ] The PR contains minor version updates, which have been verified to include no breaking changes

            Breaking changes that are _not_ okay to backport:

            * [ ] The PR contains major version updates
            * [ ] The PR changes or removes existing functionality
            * [ ] The PR contains backward-incompatible changes to the `.override*` interface of a derivation
            * [ ] The PR deserves an addition to the release notes
            * [ ] The PR will cause a state migration which risks the loss of user data

            Reasons why a breaking change still needs to be backported:

            * [ ] The PR updates security critical applications, such as `firefox` and `chromium`
            * [ ] The PR is required to continue interoperating with external services, such as `spotify`, `steam`, and `discord`
            * [ ] Other, detailed in a comment below
