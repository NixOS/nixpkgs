name: Release checks

on:
  pull_request:
    paths:
      - .github/workflows/release-checks.yml
  pull_request_target:

permissions: {}

jobs:
  get-merge-commit:
    uses: ./.github/workflows/get-merge-commit.yml

  outpaths:
    name: Outpaths
    runs-on: ubuntu-24.04-arm
    needs: [ get-merge-commit ]
    strategy:
      fail-fast: false
      matrix:
        system: ${{ fromJSON(needs.get-merge-commit.outputs.systems) }}
    steps:
      - name: Enable swap
        run: |
          sudo fallocate -l 10G /swap
          sudo chmod 600 /swap
          sudo mkswap /swap
          sudo swapon /swap

      - name: Check out the PR at the test merge commit
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ needs.get-merge-commit.outputs.mergedSha }}
          path: nixpkgs

      - name: Install Nix
        uses: cachix/install-nix-action@526118121621777ccd86f79b04685a9319637641 # v31
        with:
          extra_nix_config: sandbox = true

      - name: Evaluate the ${{ matrix.system }} output paths for all derivation attributes from a different path
        env:
          MATRIX_SYSTEM: ${{ matrix.system }}
        run: |
          nix-build nixpkgs/ci -A eval.releaseChecks.secondEval \
            --argstr evalSystem "$MATRIX_SYSTEM" \
            --arg chunkSize 10000
          # If it uses too much memory, slightly decrease chunkSize

      - name: Upload the output paths and eval stats
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: intermediate-${{ matrix.system }}
          path: result

  release-checks:
    name: Release checks
    runs-on: ubuntu-24.04-arm
    needs: [ outpaths, get-merge-commit ]
    steps:
      - name: Download output paths and eval stats from second eval for all systems
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          pattern: intermediate-*
          path: second

      - name: Check out the PR at the test merge commit
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ needs.get-merge-commit.outputs.mergedSha }}
          fetch-depth: 2
          path: nixpkgs

      - name: Install Nix
        uses: cachix/install-nix-action@526118121621777ccd86f79b04685a9319637641 # v31
        with:
          extra_nix_config: sandbox = true

      - name: Get first eval run id
        id: evalRunId
        run: |
          # Get the latest eval.yml workflow run for the head commit
          if ! run=$(gh api --method GET /repos/"$REPOSITORY"/actions/workflows/eval.yml/runs \
            -f head_sha="$HEAD_SHA" \
            --jq '.workflow_runs | sort_by(.run_started_at) | .[-1]') \
            || [[ -z "$run" ]]; then
            echo "Could not find an eval.yml workflow run for $HEAD_SHA, cannot make comparison"
            exit 1
          fi
          echo "First eval is $(jq .html_url <<< "$run")"
          runId=$(jq .id <<< "$run")
          conclusion=$(jq -r .conclusion <<< "$run")

          while [[ "$conclusion" == null || "$conclusion" == "" ]]; do
            echo "Workflow not done, waiting 10 seconds before checking again"
            sleep 10
            conclusion=$(gh api /repos/"$REPOSITORY"/actions/runs/"$runId" --jq '.conclusion')
          done

          if [[ "$conclusion" != "success" ]]; then
            echo "Workflow was not successful (conclusion: $conclusion), cannot perform release checks"
            exit 1
          fi

          echo "evalRunId=$runId" >> "$GITHUB_OUTPUT"
        env:
          REPOSITORY: ${{ github.repository }}
          HEAD_SHA: ${{ github.event.pull_request.head.sha }}
          GH_TOKEN: ${{ github.token }}

      - name: Download output paths and eval stats from first eval for all systems
        uses: actions/download-artifact@v4
        if: steps.evalRunId.outputs.evalRunId
        with:
          pattern: intermediate-*
          path: first
          github-token: ${{ github.token }}
          run-id: ${{ steps.evalRunId.outputs.evalRunId }}

      - name: Run release checks
        if: steps.evalRunId.outputs.evalRunId
        run: |
          failed=
          for system in $(echo -n "$SYSTEMS" | jq -r ".[]"); do
            echo "::group::$system"

            nix-build nixpkgs/ci -A eval.releaseChecks \
              --argstr evalSystem "$system" \
              --arg firstEval "./first/intermediate-$system" \
              --arg secondEval "./second/intermediate-$system" \
              --arg chunkSize 10000 || failed=1

            echo "::endgroup::"
          done

          if [[ $failed ]]; then
            echo "Release checks failed for at least one system"
            exit 1
          fi
        env:
          SYSTEMS: ${{ needs.get-merge-commit.outputs.systems }}
