# Checks pkgs/by-name (see pkgs/by-name/README.md)
# using the nixpkgs-check-by-name tool (see pkgs/test/nixpkgs-check-by-name)
name: Check pkgs/by-name

# The pre-built tool is fetched from a channel,
# making it work predictable on all PRs.
on:
  # Using pull_request_target instead of pull_request avoids having to approve first time contributors
  pull_request_target

# The tool doesn't need any permissions, it only outputs success or not based on the checkout
permissions: {}

jobs:
  check:
    # This is x86_64-linux, for which the tool is always prebuilt on the nixos-* channels,
    # as specified in nixos/release-combined.nix
    runs-on: ubuntu-latest
    steps:
      - name: Resolving the merge commit
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          env
          set -x
          exec pkgs/test/nixpkgs-check-by-name/workflows/check-by-name/check-mergeability.sh
      - uses: actions/checkout@v4
        with:
          # pull_request_target checks out the base branch by default
          ref: ${{ env.mergedSha }}
          # Fetches the merge commit and its parents
          fetch-depth: 2
      - name: Determining PR git hashes
        run: |
          # Please don't put any logic here.  To ensure local
          # reproducibility, this file should only print diagnostics
          # (`env`, `set -x`) and execute scripts found elsewhere in
          # nixpkgs.
          env
          set -x
          exec pkgs/test/nixpkgs-check-by-name/workflows/check-by-name/determine-pr-hashes.sh
      - uses: cachix/install-nix-action@v23
      - name: Determining channel to use for dependencies
        run: |
          # Please don't put any logic here.  To ensure local
          # reproducibility, this file should only print diagnostics
          # (`env`, `set -x`) and execute scripts found elsewhere in
          # nixpkgs.
          env
          set -x
          exec pkgs/test/nixpkgs-check-by-name/workflows/check-by-name/determine-channel-for-dependencies.sh
      - name: Fetching latest version of channel
        run: |
          # Please don't put any logic here.  To ensure local
          # reproducibility, this file should only print diagnostics
          # (`env`, `set -x`) and execute scripts found elsewhere in
          # nixpkgs.
          env
          set -x
          exec pkgs/test/nixpkgs-check-by-name/workflows/check-by-name/fetch-latest-version-of-channel.sh
      - name: Fetching pre-built nixpkgs-check-by-name from the channel
        run: |
          # Please don't put any logic here.  To ensure local
          # reproducibility, this file should only print diagnostics
          # (`env`, `set -x`) and execute scripts found elsewhere in
          # nixpkgs.
          env
          set -x
          exec pkgs/test/nixpkgs-check-by-name/workflows/check-by-name/fetch-pre-built-by-name-from-channel.sh
      - name: Running nixpkgs-check-by-name
        run: |
          # Please don't put any logic here.  To ensure local
          # reproducibility, this file should only print diagnostics
          # (`env`, `set -x`) and execute scripts found elsewhere in
          # nixpkgs.
          env
          set -x
          exec pkgs/test/nixpkgs-check-by-name/workflows/check-by-name/reproduce.sh "$baseSha" "$toolingSha" "$headSha"
