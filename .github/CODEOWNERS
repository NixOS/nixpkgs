# CODEOWNERS file
#
# This file is used to describe who owns what in this repository. This file does not
# replace `meta.maintainers` but is instead used for other things than derivations
# and modules, like documentation, package sets, and other assets.
#
# For documentation on this file, see https://help.github.com/articles/about-codeowners/
# Mentioned users will get code review requests.

# This file
/.github/CODEOWNERS @edolstra

# Libraries
/lib                        @edolstra @nbp
/lib/systems                @edolstra @nbp @ericson2314

# Nixpkgs Internals
/default.nix                          @nbp
/pkgs/top-level/default.nix           @nbp @Ericson2314
/pkgs/top-level/impure.nix            @nbp @Ericson2314
/pkgs/top-level/stage.nix             @nbp @Ericson2314
/pkgs/stdenv                          @edolstra
/pkgs/build-support/cc-wrapper        @edolstra @Ericson2314
/pkgs/build-support/bintools-wrapper  @edolstra @Ericson2314
/pkgs/build-support/setup-hooks       @edolstra @Ericson2314

# NixOS Internals
/nixos/default.nix          @nbp
/nixos/lib/from-env.nix     @nbp
/nixos/lib/eval-config.nix  @nbp
/nixos/doc/manual/configuration/abstractions.xml      @nbp
/nixos/doc/manual/configuration/config-file.xml       @nbp
/nixos/doc/manual/configuration/config-syntax.xml     @nbp
/nixos/doc/manual/configuration/modularity.xml        @nbp
/nixos/doc/manual/development/assertions.xml          @nbp
/nixos/doc/manual/development/meta-attributes.xml     @nbp
/nixos/doc/manual/development/option-declarations.xml @nbp
/nixos/doc/manual/development/option-def.xml          @nbp
/nixos/doc/manual/development/option-types.xml        @nbp
/nixos/doc/manual/development/replace-modules.xml     @nbp
/nixos/doc/manual/development/writing-modules.xml     @nbp
/nixos/doc/manual/man-nixos-option.xml                @nbp
/nixos/modules/installer/tools/nixos-option.sh        @nbp

# Python-related code and docs
/pkgs/top-level/python-packages.nix     @FRidh
/pkgs/development/interpreters/python   @FRidh
/pkgs/development/python-modules        @FRidh
/doc/languages-frameworks/python.md     @FRidh

# Haskell
/pkgs/development/compilers/ghc                       @peti
/pkgs/development/haskell-modules                     @peti
/pkgs/development/haskell-modules/default.nix         @peti
/pkgs/development/haskell-modules/generic-builder.nix @peti
/pkgs/development/haskell-modules/hoogle.nix          @peti

# R
/pkgs/applications/science/math/R   @peti
/pkgs/development/r-modules         @peti

# Ruby
/pkgs/development/interpreters/ruby @zimbatm
/pkgs/development/ruby-modules      @zimbatm

# Darwin-related
/pkgs/stdenv/darwin         @NixOS/darwin-maintainers
/pkgs/os-specific/darwin    @NixOS/darwin-maintainers

# Beam-related (Erlang, Elixir, LFE, etc)
/pkgs/development/beam-modules                  @gleber
/pkgs/development/interpreters/erlang           @gleber
/pkgs/development/interpreters/lfe              @gleber
/pkgs/development/interpreters/elixir           @gleber
/pkgs/development/tools/build-managers/rebar    @gleber
/pkgs/development/tools/build-managers/rebar3   @gleber
/pkgs/development/tools/erlang                  @gleber

# Jetbrains
/pkgs/applications/editors/jetbrains @edwtjo

# Eclipse
/pkgs/applications/editors/eclipse @rycee

# https://github.com/NixOS/nixpkgs/issues/31401
/lib/maintainers.nix @ghost
/lib/licenses.nix @ghost

# Qt / KDE
/pkgs/applications/kde @ttuegel
/pkgs/desktops/plasma-5 @ttuegel
/pkgs/development/libraries/kde-frameworks @ttuegel
/pkgs/development/libraries/qt-5 @ttuegel
