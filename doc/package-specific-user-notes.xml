<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="package-specific-user-notes">
 <title>Package-specific usage notes</title>
 <para>
         This chapters includes some notes
         that apply to specific packages and should
         answer some of the frequently asked questions
         related to Nixpkgs use.
 </para>
 <section xml:id="opengl">
  <title>OpenGL</title>

  <para>
   Packages that use OpenGL have NixOS desktop as their primary target. The
   current solution for loading the GPU-specific drivers is based on
   <literal>libglvnd</literal> and looks for the driver implementation in
   <literal>LD_LIBRARY_PATH</literal>. If you are using a non-NixOS
   GNU/Linux/X11 desktop with free software video drivers, consider launching
   OpenGL-dependent programs from Nixpkgs with Nixpkgs versions of
   <literal>libglvnd</literal> and <literal>mesa_drivers</literal> in
   <literal>LD_LIBRARY_PATH</literal>. For proprietary video drivers you might
   have luck with also adding the corresponding video driver package.
  </para>
 </section>
 <section xml:id="locales">
  <title>Locales</title>

  <para>
   To allow simultaneous use of packages linked against different versions of
   <literal>glibc</literal> with different locale archive formats Nixpkgs
   patches <literal>glibc</literal> to rely on
   <literal>LOCALE_ARCHIVE</literal> environment variable.
  </para>

  <para>
   On non-NixOS distributions this variable is obviously not set. This can
   cause regressions in language support or even crashes in some
   Nixpkgs-provided programs. The simplest way to mitigate this problem is
   exporting the <literal>LOCALE_ARCHIVE</literal> variable pointing to
   <literal>${glibcLocales}/lib/locale/locale-archive</literal>. The drawback
   (and the reason this is not the default) is the relatively large (a hundred
   MiB) size of the full set of locales. It is possible to build a custom set
   of locales by overriding parameters <literal>allLocales</literal> and
   <literal>locales</literal> of the package.
  </para>
 </section>
 <section xml:id="unfree-software">
  <title>Unfree software</title>

  <para>
   All users of Nixpkgs are free software users, and many users (and
   developers) of Nixpkgs want to limit and tightly control their exposure to
   unfree software. At the same many users need (or want) to run some specific
   pieces of proprietary software. Nixpkgs includes some expressions for unfree
   software packages. By default unfree software cannot be installed and
   doesnâ€™t show up in searches. To allow installing unfree software in a
   single Nix invocation one can export
   <literal>NIXPKGS_ALLOW_UNFREE=1</literal>. For a persistent solution, users
   can set <literal>allowUnfree</literal> in the Nixpkgs configuration.
  </para>

  <para>
   Fine-grained control is possible by defining
   <literal>allowUnfreePredicate</literal> function in config; it takes the
   <literal>mkDerivation</literal> parameter attrset and returns
   <literal>true</literal> for unfree packages that should be allowed.
  </para>
 </section>
</chapter>
