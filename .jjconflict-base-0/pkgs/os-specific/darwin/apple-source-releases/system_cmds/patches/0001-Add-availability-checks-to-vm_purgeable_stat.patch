From 18a676bc44a8bc24374ab35a258a18049b56b6d4 Mon Sep 17 00:00:00 2001
From: Randy Eckenrode <randy@largeandhighquality.com>
Date: Mon, 2 Sep 2024 21:46:34 -0400
Subject: [PATCH] Add availability checks to vm_purgeable_stat

---
 vm_purgeable_stat/vm_purgeable_stat.c | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

diff --git a/vm_purgeable_stat/vm_purgeable_stat.c b/vm_purgeable_stat/vm_purgeable_stat.c
index 330704d..9d9041b 100644
--- a/vm_purgeable_stat/vm_purgeable_stat.c
+++ b/vm_purgeable_stat/vm_purgeable_stat.c
@@ -88,7 +88,11 @@ int get_task_from_pid(int pid, task_t *task)
 		fprintf(stderr, "%s\n", PRIV_ERR_MSG);
 		return -1;
 	}
-	kr = task_inspect_for_pid(mach_task_self(), pid, task);
+	if (__builtin_available(macOS 11.3, *)) {
+		kr = task_inspect_for_pid(mach_task_self(), pid, task);
+	} else {
+		kr = task_for_pid(mach_task_self(), pid, task);
+	}
 	if (kr != KERN_SUCCESS) {
 		fprintf(stderr, "Failed to get task port for pid: %d\n", pid);
 		return -1;
@@ -128,7 +132,11 @@ int get_system_tasks(task_array_t *tasks, mach_msg_type_number_t *count)
 	vm_deallocate(mach_task_self(), (vm_address_t)psets, (vm_size_t)psetCount * sizeof(mach_port_t));
 
 	/* convert the processor-set-priv to a list of tasks for the processor set */
-	ret = processor_set_tasks_with_flavor(pset_priv, TASK_FLAVOR_INSPECT, tasks, count);
+	if (__builtin_available(macOS 11.0, *)) {
+		ret = processor_set_tasks_with_flavor(pset_priv, TASK_FLAVOR_INSPECT, tasks, count);
+	} else {
+		ret = processor_set_tasks(pset_priv, tasks, count);
+	}
 	if (ret != KERN_SUCCESS) {
 		fprintf(stderr, "processor_set_tasks_with_flavor() failed: %s\n", mach_error_string(ret));
 		return -1;
-- 
2.44.1

