--- a/src/installer/_installer.cmake
+++ b/src/installer/_installer.cmake
@@ -1,120 +1,40 @@
 # Set up install rules
 install(TARGETS ${PROJECT_NAME}cli
-        DESTINATION .)
+	DESTINATION "bin")
 
 install(TARGETS ${PROJECT_NAME}
-        DESTINATION .)
+	DESTINATION "bin")
 
 install(FILES
         "${CMAKE_CURRENT_SOURCE_DIR}/CREDITS.md"
         "${CMAKE_CURRENT_SOURCE_DIR}/LICENSE"
-        "${CMAKE_CURRENT_LIST_DIR}/.nonportable"
-        DESTINATION .)
+	DESTINATION "share/licenses/${PROJECT_NAME}")
 
 foreach(${PROJECT_NAME}_QTBASE_TRANSLATION IN LISTS ${PROJECT_NAME}_QTBASE_TRANSLATIONS)
     install(FILES "${${PROJECT_NAME}_QTBASE_TRANSLATION}"
-            DESTINATION i18n)
+	    DESTINATION "lib/${PROJECT_NAME}/i18n")
 endforeach()
 
-if(WIN32)
-    install(IMPORTED_RUNTIME_ARTIFACTS
-            Qt6::Core Qt6::Gui Qt6::Widgets Qt6::Network Qt6::OpenGL Qt6::OpenGLWidgets Qt6::Svg
-            RUNTIME DESTINATION .
-            LIBRARY DESTINATION .)
-
-    install(FILES "${QT_BASEDIR}/bin/opengl32sw.dll"
-            DESTINATION .)
-
-    install(FILES "${QT_BASEDIR}/plugins/imageformats/qwebp${QT_LIB_SUFFIX}.dll"
-            DESTINATION imageformats)
-
-    install(FILES "${QT_BASEDIR}/plugins/platforms/qwindows${QT_LIB_SUFFIX}.dll"
-            DESTINATION platforms)
-
-    install(FILES "${QT_BASEDIR}/plugins/styles/qwindowsvistastyle${QT_LIB_SUFFIX}.dll"
-            DESTINATION styles)
-
-    install(FILES
-            "${QT_BASEDIR}/plugins/tls/qcertonlybackend${QT_LIB_SUFFIX}.dll"
-            "${QT_BASEDIR}/plugins/tls/qschannelbackend${QT_LIB_SUFFIX}.dll"
-            DESTINATION tls)
-
-    # NSIS install commands
-    configure_file(
-            "${CMAKE_CURRENT_LIST_DIR}/win/InstallCommands.nsh.in"
-            "${CMAKE_CURRENT_LIST_DIR}/win/generated/InstallCommands.nsh"
-            @ONLY)
-
-    # NSIS uninstall commands
-    configure_file(
-            "${CMAKE_CURRENT_LIST_DIR}/win/UninstallCommands.nsh.in"
-            "${CMAKE_CURRENT_LIST_DIR}/win/generated/UninstallCommands.nsh"
-            @ONLY)
-elseif(UNIX)
-    if (DEFINED QT_BASEDIR)
-        # If this is a custom install, we've copied the Qt libraries to the build directory and done special fixups
-        install(FILES
-                "${CMAKE_BINARY_DIR}/libQt6Core.so.6"
-                "${CMAKE_BINARY_DIR}/libQt6Gui.so.6"
-                "${CMAKE_BINARY_DIR}/libQt6Widgets.so.6"
-                "${CMAKE_BINARY_DIR}/libQt6Network.so.6"
-                "${CMAKE_BINARY_DIR}/libQt6OpenGL.so.6"
-                "${CMAKE_BINARY_DIR}/libQt6OpenGLWidgets.so.6"
-                "${CMAKE_BINARY_DIR}/libQt6Svg.so.6"
-
-                # Required by plugins
-                "${CMAKE_BINARY_DIR}/libicudata.so.56"
-                "${CMAKE_BINARY_DIR}/libicui18n.so.56"
-                "${CMAKE_BINARY_DIR}/libicuuc.so.56"
-                "${CMAKE_BINARY_DIR}/libQt6DBus.so.6"
-                "${CMAKE_BINARY_DIR}/libQt6EglFSDeviceIntegration.so.6"
-                "${CMAKE_BINARY_DIR}/libQt6EglFsKmsSupport.so.6"
-                "${CMAKE_BINARY_DIR}/libQt6WaylandClient.so.6"
-                "${CMAKE_BINARY_DIR}/libQt6WaylandEglClientHwIntegration.so.6"
-                "${CMAKE_BINARY_DIR}/libQt6WlShellIntegration.so.6"
-                "${CMAKE_BINARY_DIR}/libQt6XcbQpa.so.6"
-                DESTINATION .)
-
-        install(DIRECTORY
-                "${CMAKE_BINARY_DIR}/egldeviceintegrations"
-                "${CMAKE_BINARY_DIR}/imageformats"
-                "${CMAKE_BINARY_DIR}/platforminputcontexts"
-                "${CMAKE_BINARY_DIR}/platforms"
-                "${CMAKE_BINARY_DIR}/platformthemes"
-                "${CMAKE_BINARY_DIR}/tls"
-                "${CMAKE_BINARY_DIR}/wayland-decoration-client"
-                "${CMAKE_BINARY_DIR}/wayland-graphics-integration-client"
-                "${CMAKE_BINARY_DIR}/wayland-shell-integration"
-                "${CMAKE_BINARY_DIR}/xcbglintegrations"
-                DESTINATION .)
-    else()
-        install(IMPORTED_RUNTIME_ARTIFACTS
-                Qt6::Core Qt6::Gui Qt6::Widgets Qt6::Network Qt6::OpenGL Qt6::OpenGLWidgets Qt6::Svg
-                RUNTIME DESTINATION .
-                LIBRARY DESTINATION .)
-    endif()
-
-    # Desktop file
-    configure_file(
-            "${CMAKE_CURRENT_LIST_DIR}/linux/desktop.in"
-            "${CMAKE_CURRENT_LIST_DIR}/linux/generated/${PROJECT_NAME}.desktop")
-    install(FILES "${CMAKE_CURRENT_LIST_DIR}/linux/generated/${PROJECT_NAME}.desktop"
-            DESTINATION "/usr/share/applications/")
-    install(FILES "${CMAKE_CURRENT_SOURCE_DIR}/branding/logo.png"
-            DESTINATION "/usr/share/pixmaps/"
-            RENAME "${PROJECT_NAME}.png")
-
-    # MIME type info
-    configure_file(
-            "${CMAKE_CURRENT_LIST_DIR}/linux/mime-type.xml.in"
-            "${CMAKE_CURRENT_LIST_DIR}/linux/generated/mime-type.xml")
-    install(FILES "${CMAKE_CURRENT_LIST_DIR}/linux/generated/mime-type.xml"
-            DESTINATION "/usr/share/mime/packages/"
-            RENAME "${PROJECT_NAME}.xml")
-    install(FILES "${CMAKE_CURRENT_SOURCE_DIR}/branding/logo.png"
-            DESTINATION "/usr/share/icons/hicolor/128x128/mimetypes/"
-            RENAME "application-x-vpkedit.png")
-endif()
+# Desktop file
+configure_file(
+        "${CMAKE_CURRENT_LIST_DIR}/linux/desktop.in"
+        "${CMAKE_CURRENT_LIST_DIR}/linux/generated/${PROJECT_NAME}.desktop")
+install(FILES "${CMAKE_CURRENT_LIST_DIR}/linux/generated/${PROJECT_NAME}.desktop"
+        DESTINATION "share/applications/")
+install(FILES "${CMAKE_CURRENT_SOURCE_DIR}/branding/logo.png"
+        DESTINATION "share/pixmaps/"
+        RENAME "${PROJECT_NAME}.png")
+
+# MIME type info
+configure_file(
+        "${CMAKE_CURRENT_LIST_DIR}/linux/mime-type.xml.in"
+        "${CMAKE_CURRENT_LIST_DIR}/linux/generated/mime-type.xml")
+install(FILES "${CMAKE_CURRENT_LIST_DIR}/linux/generated/mime-type.xml"
+        DESTINATION "share/mime/packages/"
+        RENAME "${PROJECT_NAME}.xml")
+install(FILES "${CMAKE_CURRENT_SOURCE_DIR}/branding/logo.png"
+        DESTINATION "share/icons/hicolor/128x128/mimetypes/"
+        RENAME "application-x-vpkedit.png")
 
 # CPack stuff
 set(CPACK_PACKAGE_NAME ${PROJECT_NAME_PRETTY})
@@ -154,14 +74,5 @@
     set(CPACK_PACKAGING_INSTALL_PREFIX "/opt/${PROJECT_NAME}")
     set(CPACK_DEBIAN_PACKAGE_DEPENDS "libxcb-cursor0")
     set(CPACK_DEBIAN_COMPRESSION_TYPE "zstd")
-
-    # Add symlinks so it can be ran from anywhere
-    install(CODE "execute_process(COMMAND ${CMAKE_COMMAND} -E create_symlink /opt/${PROJECT_NAME}/${PROJECT_NAME}cli ${CMAKE_CURRENT_LIST_DIR}/linux/generated/${PROJECT_NAME}cli)")
-    install(FILES "${CMAKE_CURRENT_LIST_DIR}/linux/generated/${PROJECT_NAME}cli"
-            DESTINATION "/usr/bin")
-
-    install(CODE "execute_process(COMMAND ${CMAKE_COMMAND} -E create_symlink /opt/${PROJECT_NAME}/${PROJECT_NAME} ${CMAKE_CURRENT_LIST_DIR}/linux/generated/${PROJECT_NAME})")
-    install(FILES "${CMAKE_CURRENT_LIST_DIR}/linux/generated/${PROJECT_NAME}"
-            DESTINATION "/usr/bin")
 endif()
 include(CPack)
